import{createElement}from"./helpers.min.js";const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:a}}},n,o,r,l)=>{const i=createElement("header",["header"]),s=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",s.append(c,d),i.append(s);const m=createElement("button",["login-header__lang-select"],{"aria-label":`${a}`}),p=createElement("span",["login-header__lang-platform-lang"]),g=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),h=createElement("ul",["login-header__lang-list"]);for(let e=0;e<n;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),a=Object.keys(o)[e],n=Object.values(o)[e];t.dataset.lang=a,t.textContent=n,t.style.animationDelay=100*e+"ms",h.append(t)}return p.textContent=o[r],m.addEventListener("click",e=>{l.call(m,e,p)}),m.append(p,g,h),i.append(m),i};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:a,button:n},placeholder:{username:o,password:r}}})=>{const l=createElement("main",["main"]),i=createElement("div",["wrapper"]),s=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),m=createElement("p",["main__text"]),p=createElement("form",["main__form"]),g=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:o}),h=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:r}),_=createElement("button",["main__form-button"],{type:"submit"}),u=createElement("span",["main__form-button-text"]),x=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,m.textContent=a,u.textContent=n,s.append(c,d),_.append(u),p.append(g,h,_,x),i.append(s,m,p),l.append(i),_.addEventListener("click",e=>{const t=handleLoginValidation(e,g,h,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,x)??"";x.classList.add("visible"),t||x.classList.remove("visible")}),l};const handleLoginValidation=(e,t,a,n,o,r,l,i)=>(e.preventDefault(),""===t.value.trim()||""===a.value.trim()?(i.textContent=n,n):t.value.trim()===r&&a.value.trim()===l?null:(e.target.disabled=!0,e.target.append(showSmallLoader()),i.classList.remove("visible"),void setTimeout(()=>(i.classList.add("visible"),i.textContent=o,e.target.disabled=!1,hideSmallLoader(),o),3e3)));export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
