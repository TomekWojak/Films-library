import{createElement}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const getData=()=>{try{const e=localStorage.getItem("userData");if(!e)return{};const t=JSON.parse(e);if("object"!=typeof t||null===t)throw new Error("Nieprawidłowa struktura danych");return t}catch{return console.log("Błąd pobierania danych z local storage"),localStorage.removeItem("userData"),{}}},USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:r}}},a,n,o,i)=>{const l=createElement("header",["header"]),s=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",s.append(c,d),l.append(s);const p=createElement("button",["login-header__lang-select"],{"aria-label":`${r}`}),m=createElement("span",["login-header__lang-platform-lang"]),f=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),u=createElement("ul",["login-header__lang-list"]);for(let e=0;e<a;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),r=Object.keys(n)[e],a=Object.values(n)[e];t.dataset.lang=r,t.textContent=a,t.style.animationDelay=100*e+"ms",u.append(t)}return m.textContent=n[o],p.addEventListener("click",e=>{i.call(p,e,m)}),p.append(m,f,u),l.append(p),l};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:r,button:a},placeholder:{username:n,password:o}}})=>{const i=createElement("main",["main"]),l=createElement("div",["wrapper"]),s=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),p=createElement("p",["main__text"]),m=createElement("form",["main__form"]),f=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:n}),u=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),g=createElement("button",["main__form-button"],{type:"submit"}),_=createElement("span",["main__form-button-text"]),h=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,p.textContent=r,_.textContent=a,s.append(c,d),g.append(_),m.append(f,u,g,h),l.append(s,p,m),i.append(l),g.addEventListener("click",e=>{const t=getData();handleLoginValidation(e,f,u,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,h)||(h.classList.remove("visible"),e.target.append(showSmallLoader()),e.target.disabled=!0,setTimeout(()=>{e.target.disabled=!1,hideSmallLoader(),setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html"},3e3))}),i};const handleLoginValidation=(e,t,r,a,n,o,i,l)=>(e.preventDefault(),""===t.value.trim()||""===r.value.trim()?(l.classList.add("visible"),l.textContent=a,a):t.value.trim()!==o||r.value.trim()!==i?(e.target.disabled=!0,e.target.append(showSmallLoader()),l.classList.remove("visible"),setTimeout(()=>{l.classList.add("visible"),l.textContent=n,e.target.disabled=!1,hideSmallLoader()},3e3),n):null);export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:r,userProfileBtn:a,userBtnCustomize:n}},errorPopup:{text:{maxProfiles:o,emptyField:i}}})=>{const l=getData(),s=l?.userProfiles,c=document.querySelector(".container"),d=createElement("main",["main-profiles"]),p=createElement("div",["wrapper"]),m=createElement("h1",["main__title","main-profiles__title"]),f=createElement("div",["main-profiles__box"]);if(m.textContent=e,s&&0!==Object.keys(s).length)for(const e in s)f.append(createProfile(a,n,n,i,e,s[e]));f.append(createProfileAddBtn(r,t,a,f,n,n,o,i)),p.append(m,f),d.append(p),c.append(d)};const createProfile=(e,t,r,a,n=null,o=null)=>{const i=getData(),l=i?.userProfiles||{};let s,c,d;const p=["#dc4a34","#062E63","#FAC044"];if(n){c=n,d=o;s=p[parseInt(c.split("-").pop())-1]}else{if(Object.keys(l).length>=3)return;let e=1;for(;l[`user-profile-${e}`];)e++;c=`user-profile-${e}`,d=`Handsome User ${e}`,s=p[e-1]}const m=createElement("div",["main-profiles__profile"]),f=createElement("div",["main-profiles__avatar"]),u=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":c}),g=createElement("div",["main-profiles__user-info"]),_=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:d}),h=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),v=createElement("button",["main-profiles__remove-user"],{"aria-label":"Przycisk umożliwiający usunięcie użytkownika"}),E=createElement("img",["main-profiles__remove-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/remove-profile-icon.svg"}),b=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});if(u.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="70" cy="70" r="8" fill="white" />\n    <circle cx="130" cy="70" r="8" fill="white" />\n    <path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n    fill="transparent" stroke-linecap="round" />\n    </svg>',u.style.backgroundColor=s,f.append(u),h.append(b),v.append(E),g.append(_,h,v),m.append(f,g),!n){const e={...l,[c]:d};setUserPreference("userProfiles",e,i)}return h.addEventListener("click",e=>{editUsername(e,g,r,a)}),v.addEventListener("click",e=>{removeUser(e)}),_.addEventListener("keydown",e=>{"Enter"===e.key&&saveUsername(e,a)}),m},createProfileAddBtn=(e,t,r,a,n,o,i,l)=>{const s=createElement("div",["main-profiles__add-profile"]),c=createElement("div",["main-profiles__avatar"]),d=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),p=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),m=createElement("span",["main-profiles__name"]);return m.textContent=t,d.append(p),c.append(d),s.append(c,m),d.addEventListener("click",()=>{const e=getData(),t=e?.userProfiles||{};if(Object.keys(t).length>=3)return void showErrorPopup(i,"#dc4a34");const c=createProfile(r,n,o,l);c&&a.insertBefore(c,s)}),s},editUsername=(e,t,r,a)=>{resetStateOfEditing(e);const n=e.target,o=n.previousElementSibling,i=createSaveBtn(r);n.classList.add("hidden"),i.classList.remove("hidden"),t.append(i),o.focus(),o.select(),o.removeAttribute("readonly"),o.classList.add("focused"),i.addEventListener("click",e=>{saveUsername(e,a)})},saveUsername=(e,t)=>{const r=getData(),a=r?.userProfiles||[],n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn").dataset.id,i=n.querySelector(".main-profiles__name"),l=document.querySelectorAll(".main-profiles__edit-name");if(l.forEach(e=>e.removeAttribute("disabled")),""===i.value.trim())return l.forEach(e=>e.setAttribute("disabled",!0)),showErrorPopup(t,"#FAC044");const s={...a,[o]:i.value};setUserPreference("userProfiles",s,r),resetStateOfEditing(e)},createSaveBtn=e=>{const t=createElement("button",["main-profiles__save-name","hidden"],{"aria-label":e}),r=createElement("img",["main-profiles__save-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/save.svg"});return t.append(r),t},resetStateOfEditing=e=>{const t=document.querySelectorAll(".focused"),r=document.querySelectorAll(".main-profiles__save-name"),a=document.querySelectorAll(".main-profiles__edit-name");t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused"),e.blur()}),r.forEach(e=>e.classList.add("hidden")),a.forEach(e=>e.classList.remove("hidden"))};let popupVisible=!1;const showErrorPopup=(e,t)=>{if(popupVisible)return;popupVisible=!0;const r=document.documentElement,a=document.querySelector(".container"),n=createElement("div",["error-popup"]),o=createElement("p",["error-popup__text"]);o.textContent=e,r.style.setProperty("--errorTxtColor",t),n.append(o),a.append(n),setTimeout(()=>{n.classList.add("hidden")},2e3),setTimeout(()=>{n.remove(),popupVisible=!1},2500)},removeUser=e=>{const t=getData(),r=t?.userProfiles,a=document.querySelectorAll(".main-profiles__edit-name"),n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn");a.forEach(e=>e.removeAttribute("disabled")),delete r[o.dataset.id],setUserPreference("userProfiles",r,t),n.remove()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
