import{createElement}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const userData=JSON.parse?.(localStorage.getItem("userData"));let profilesCount=userData?.profilesCount||0;const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:a}}},n,r,o,i)=>{const l=createElement("header",["header"]),s=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",s.append(c,d),l.append(s);const p=createElement("button",["login-header__lang-select"],{"aria-label":`${a}`}),m=createElement("span",["login-header__lang-platform-lang"]),g=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),f=createElement("ul",["login-header__lang-list"]);for(let e=0;e<n;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),a=Object.keys(r)[e],n=Object.values(r)[e];t.dataset.lang=a,t.textContent=n,t.style.animationDelay=100*e+"ms",f.append(t)}return m.textContent=r[o],p.addEventListener("click",e=>{i.call(p,e,m)}),p.append(m,g,f),l.append(p),l};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:a,button:n},placeholder:{username:r,password:o}}})=>{const i=createElement("main",["main"]),l=createElement("div",["wrapper"]),s=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),p=createElement("p",["main__text"]),m=createElement("form",["main__form"]),g=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:r}),f=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),u=createElement("button",["main__form-button"],{type:"submit"}),_=createElement("span",["main__form-button-text"]),h=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,p.textContent=a,_.textContent=n,s.append(c,d),u.append(_),m.append(g,f,u,h),l.append(s,p,m),i.append(l),u.addEventListener("click",e=>{const t=JSON.parse?.(localStorage.getItem("userData"));handleLoginValidation(e,g,f,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,h)||(h.classList.remove("visible"),e.target.append(showSmallLoader()),e.target.disabled=!0,setTimeout(()=>{e.target.disabled=!1,hideSmallLoader(),setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html"},3e3))}),i};const handleLoginValidation=(e,t,a,n,r,o,i,l)=>(e.preventDefault(),""===t.value.trim()||""===a.value.trim()?(l.classList.add("visible"),l.textContent=n,n):t.value.trim()!==o||a.value.trim()!==i?(e.target.disabled=!0,e.target.append(showSmallLoader()),l.classList.remove("visible"),setTimeout(()=>{l.classList.add("visible"),l.textContent=r,e.target.disabled=!1,hideSmallLoader()},3e3),r):null);export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:a,userProfileBtn:n,userBtnCustomize:r}}})=>{JSON.parse?.(localStorage.getItem("userData"));const o=document.querySelector(".container"),i=createElement("main",["main-profiles"]),l=createElement("div",["wrapper"]),s=createElement("h1",["main__title","main-profiles__title"]),c=createElement("div",["main-profiles__box"]);s.textContent=e,c.append(createProfileAddBtn(a,t,n,c,r)),l.append(s,c),i.append(l),o.append(i)};const createProfile=(e,t)=>{const a=JSON.parse?.(localStorage.getItem("userData")),n=a?.userProfiles||[];let r;if(3==profilesCount||3===n.length)return;profilesCount++,r=["#dc4a34","#062E63","#FAC044"][profilesCount];const o=createElement("div",["main-profiles__profile"]),i=createElement("div",["main-profiles__avatar"]),l=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":`user-profile-${profilesCount}`}),s=createElement("div",["main-profiles__user-info"]),c=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:`${n[profilesCount]?.username||"Handsome User"} ${profilesCount}`}),d=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),p=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});return l.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n\t<circle cx="70" cy="70" r="8" fill="white" />\n\t<circle cx="130" cy="70" r="8" fill="white" />\n\t<path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n\tfill="transparent" stroke-linecap="round" />\n\t</svg>',l.style.backgroundColor=r,i.append(l),d.append(p),s.append(c,d),o.append(i,s),d.addEventListener("click",e=>{editUsername(e)}),o},createProfileAddBtn=(e,t,a,n,r)=>{const o=createElement("div",["main-profiles__add-profile"]),i=createElement("div",["main-profiles__avatar"]),l=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),s=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),c=createElement("span",["main-profiles__name"]);return c.textContent=t,l.append(s),i.append(l),o.append(i,c),l.addEventListener("click",()=>{const e=createProfile(a,r);e?n.append(e):alert("Osiągnięto maksymalną liczbę profilów!")}),o},editUsername=e=>{const t=e.target.previousElementSibling;t.focus(),t.select(),t.removeAttribute("readonly"),t.classList.add("focused")},saveUsername=e=>{const t=[...document.getElementsByClassName("focused")],a=t.some(e=>e.classList.contains("focused"));0!==t.length&&(a&&e.target.closest(".focused")||e.target.closest(".main-profiles__edit-name")||t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused")}))};window.addEventListener("click",e=>{saveUsername(e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
