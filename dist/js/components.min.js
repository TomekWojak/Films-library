import{createElement}from"./helpers.min.js";const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginPage=({main:{text:{title:e,subtitle:t,description:a,button:n},placeholder:{username:o,password:r}}})=>{const i=createElement("main",["main"]),s=createElement("div",["wrapper"]),l=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),m=createElement("p",["main__text"]),p=createElement("form",["main__form"]),u=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:o}),f=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:r}),x=createElement("button",["main__form-button"],{type:"submit"}),v=createElement("span",["main__form-button-text"]),g=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,m.textContent=a,v.textContent=n,l.append(c,d),x.append(v),p.append(u,f,x,g),s.append(l,m,p),i.append(s),x.addEventListener("click",e=>{const t=handleLoginValidation(e,u,f,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,g)??"";g.classList.add("visible"),t||g.classList.remove("visible")}),i};const handleLoginValidation=(e,t,a,n,o,r,i,s)=>(e.preventDefault(),""===t.value.trim()||""===a.value.trim()?(s.textContent=n,n):t.value.trim()===r&&a.value.trim()===i?null:(e.target.append(showSmallLoader()),s.classList.remove("visible"),e.target.disabled=!0,void setTimeout(()=>(s.classList.add("visible"),s.textContent=o,e.target.disabled=!1,hideSmallLoader(),o),3e3)));export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy5taW4uanMiLCJuYW1lcyI6WyJjcmVhdGVFbGVtZW50IiwiVVNFUk5BTUUiLCJQQVNTV09SRCIsImNyZWF0ZUxvZ2luUGFnZSIsIm1haW4iLCJ0ZXh0IiwidGl0bGUiLCJzdWJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYnV0dG9uIiwicGxhY2Vob2xkZXIiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwibWFpbkNvbnRlbnQiLCJ3cmFwcGVyIiwibG9naW5UaXRsZSIsImxvZ2luVGl0bGVUb3AiLCJsb2dpblRpdGxlQm90dG9tIiwibG9naW5UZXh0IiwiZm9ybSIsInVzZXJuYW1lSW5wdXQiLCJ0eXBlIiwicGFzc3dvcmRJbnB1dCIsInN1Ym1pdEJ0biIsImJ1dHRvblRleHQiLCJlcnJvclR4dCIsInRleHRDb250ZW50IiwiYXBwZW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJyZXN1bHRzIiwiaGFuZGxlTG9naW5WYWxpZGF0aW9uIiwidHJhbnNsYXRpb25zIiwiZXJyb3JSZXF1aXJlZCIsImVycm9ySW52YWxpZCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInJlcXVpcmVFcnJvciIsImludmFsaWRFcnJvciIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiLCJ0cmltIiwidGFyZ2V0Iiwic2hvd1NtYWxsTG9hZGVyIiwiZGlzYWJsZWQiLCJzZXRUaW1lb3V0IiwiaGlkZVNtYWxsTG9hZGVyIiwic2hvd0JpZ0xvYWRlciIsImxvYWRpbmdBcmVhIiwiaW5uZXJIVE1MIiwiaGlkZUJpZ0xvYWRlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciJdLCJzb3VyY2VzIjpbImNvbXBvbmVudHMuanMiXSwibWFwcGluZ3MiOiJPQUFTQSxrQkFBcUIsbUJBRTlCLE1BQU1DLFNBQVcsa0JBQ1hDLFNBQVcsa0JBRVYsTUFBTUMsZ0JBQWtCLEVBQzlCQyxNQUNDQyxNQUFRQyxRQUFPQyxXQUFVQyxjQUFhQyxVQUN0Q0MsYUFBZUMsV0FBVUMsaUJBRzFCLE1BQU1DLEVBQWNiLGNBQWMsT0FBUSxDQUFDLFNBQ3JDYyxFQUFVZCxjQUFjLE1BQU8sQ0FBQyxZQUNoQ2UsRUFBYWYsY0FBYyxNQUMzQmdCLEVBQWdCaEIsY0FBYyxPQUFRLENBQUMsZ0JBQ3ZDaUIsRUFBbUJqQixjQUFjLE9BQVEsQ0FBQyxtQkFDMUNrQixFQUFZbEIsY0FBYyxJQUFLLENBQUMsZUFDaENtQixFQUFPbkIsY0FBYyxPQUFRLENBQUMsZUFDOUJvQixFQUFnQnBCLGNBQ3JCLFFBQ0EsQ0FBQyxtQkFBb0IsOEJBQ3JCLENBQUVxQixLQUFNLE9BQVFYLFlBQWFDLElBRXhCVyxFQUFnQnRCLGNBQ3JCLFFBQ0EsQ0FBQyxtQkFBb0IsOEJBQ3JCLENBQUVxQixLQUFNLFdBQVlYLFlBQWFFLElBRTVCVyxFQUFZdkIsY0FBYyxTQUFVLENBQUMscUJBQXNCLENBQ2hFcUIsS0FBTSxXQUVERyxFQUFheEIsY0FBYyxPQUFRLENBQUMsMkJBRXBDeUIsRUFBV3pCLGNBQWMsSUFBSyxDQUFDLHlCQWlDckMsT0FoQ0FnQixFQUFjVSxZQUFjcEIsRUFDNUJXLEVBQWlCUyxZQUFjbkIsRUFDL0JXLEVBQVVRLFlBQWNsQixFQUN4QmdCLEVBQVdFLFlBQWNqQixFQUV6Qk0sRUFBV1ksT0FBT1gsRUFBZUMsR0FDakNNLEVBQVVJLE9BQU9ILEdBQ2pCTCxFQUFLUSxPQUFPUCxFQUFlRSxFQUFlQyxFQUFXRSxHQUVyRFgsRUFBUWEsT0FBT1osRUFBWUcsRUFBV0MsR0FDdENOLEVBQVljLE9BQU9iLEdBRW5CUyxFQUFVSyxpQkFBaUIsUUFBVUMsSUFDcEMsTUFBTUMsRUFDTEMsc0JBQ0NGLEVBQ0FULEVBQ0FFLEVBQ0FVLGFBQWE1QixLQUFLQyxLQUFLNEIsY0FDdkJELGFBQWE1QixLQUFLQyxLQUFLNkIsYUFDdkJqQyxTQUNBQyxTQUNBdUIsSUFDSSxHQUVOQSxFQUFTVSxVQUFVQyxJQUFJLFdBRWxCTixHQUNKTCxFQUFTVSxVQUFVRSxPQUFPLGFBSXJCeEIsR0FHUixNQUFNa0Isc0JBQXdCLENBQzdCRixFQUNBVCxFQUNBRSxFQUNBZ0IsRUFDQUMsRUFDQTVCLEVBQ0FDLEVBQ0FhLEtBRUFJLEVBQUVXLGlCQUVpQyxLQUEvQnBCLEVBQWNxQixNQUFNQyxRQUFnRCxLQUEvQnBCLEVBQWNtQixNQUFNQyxRQUM1RGpCLEVBQVNDLFlBQWNZLEVBQ2hCQSxHQUVQbEIsRUFBY3FCLE1BQU1DLFNBQVcvQixHQUMvQlcsRUFBY21CLE1BQU1DLFNBQVc5QixFQWdCeEIsTUFkUGlCLEVBQUVjLE9BQU9oQixPQUFPaUIsbUJBQ2hCbkIsRUFBU1UsVUFBVUUsT0FBTyxXQUMxQlIsRUFBRWMsT0FBT0UsVUFBVyxPQUVwQkMsV0FBVyxLQUNWckIsRUFBU1UsVUFBVUMsSUFBSSxXQUN2QlgsRUFBU0MsWUFBY2EsRUFFdkJWLEVBQUVjLE9BQU9FLFVBQVcsRUFFcEJFLGtCQUNPUixHQUNMLGNBTUUsTUFBTVMsY0FBZ0IsS0FDNUIsTUFBTUMsRUFBY2pELGNBQWMsTUFBTyxDQUFDLGlCQVcxQyxPQVZBaUQsRUFBWUMsVUFBWSxxbkJBVWpCRCxVQUVELE1BQU1FLGNBQWdCLEtBQzVCLE1BQU1GLEVBQWNHLFNBQVNDLGNBQWMsaUJBQzNDSixHQUFhWixpQkFHUCxNQUFNTyxnQkFBa0IsS0FDOUIsTUFBTUssRUFBY2pELGNBQWMsTUFBTyxDQUFDLHVCQVkxQyxPQVhBaUQsRUFBWUMsVUFBWSw2bUJBV2pCRCxVQUVELE1BQU1GLGdCQUFrQixLQUNWSyxTQUFTQyxjQUFjLHVCQUMvQmhCIiwiaWdub3JlTGlzdCI6W10sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tIFwiLi9oZWxwZXJzLm1pbi5qc1wiO1xyXG5cclxuY29uc3QgVVNFUk5BTUUgPSBcImhhbmRzb21lVXNlcjQwNFwiO1xyXG5jb25zdCBQQVNTV09SRCA9IFwiNWprc0g5ZC5cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVMb2dpblBhZ2UgPSAoe1xyXG5cdG1haW46IHtcclxuXHRcdHRleHQ6IHsgdGl0bGUsIHN1YnRpdGxlLCBkZXNjcmlwdGlvbiwgYnV0dG9uIH0sXHJcblx0XHRwbGFjZWhvbGRlcjogeyB1c2VybmFtZSwgcGFzc3dvcmQgfSxcclxuXHR9LFxyXG59KSA9PiB7XHJcblx0Y29uc3QgbWFpbkNvbnRlbnQgPSBjcmVhdGVFbGVtZW50KFwibWFpblwiLCBbXCJtYWluXCJdKTtcclxuXHRjb25zdCB3cmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJ3cmFwcGVyXCJdKTtcclxuXHRjb25zdCBsb2dpblRpdGxlID0gY3JlYXRlRWxlbWVudChcImgxXCIpO1xyXG5cdGNvbnN0IGxvZ2luVGl0bGVUb3AgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXCJtYWluX190aXRsZVwiXSk7XHJcblx0Y29uc3QgbG9naW5UaXRsZUJvdHRvbSA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW5fX3N1YnRpdGxlXCJdKTtcclxuXHRjb25zdCBsb2dpblRleHQgPSBjcmVhdGVFbGVtZW50KFwicFwiLCBbXCJtYWluX190ZXh0XCJdKTtcclxuXHRjb25zdCBmb3JtID0gY3JlYXRlRWxlbWVudChcImZvcm1cIiwgW1wibWFpbl9fZm9ybVwiXSk7XHJcblx0Y29uc3QgdXNlcm5hbWVJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImlucHV0XCIsXHJcblx0XHRbXCJtYWluX19mb3JtLWlucHV0XCIsIFwibWFpbl9fZm9ybS1pbnB1dC0tdXNlcm5hbWVcIl0sXHJcblx0XHR7IHR5cGU6IFwidGV4dFwiLCBwbGFjZWhvbGRlcjogdXNlcm5hbWUgfVxyXG5cdCk7XHJcblx0Y29uc3QgcGFzc3dvcmRJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImlucHV0XCIsXHJcblx0XHRbXCJtYWluX19mb3JtLWlucHV0XCIsIFwibWFpbl9fZm9ybS1pbnB1dC0tcGFzc3dvcmRcIl0sXHJcblx0XHR7IHR5cGU6IFwicGFzc3dvcmRcIiwgcGxhY2Vob2xkZXI6IHBhc3N3b3JkIH1cclxuXHQpO1xyXG5cdGNvbnN0IHN1Ym1pdEJ0biA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgW1wibWFpbl9fZm9ybS1idXR0b25cIl0sIHtcclxuXHRcdHR5cGU6IFwic3VibWl0XCIsXHJcblx0fSk7XHJcblx0Y29uc3QgYnV0dG9uVGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW5fX2Zvcm0tYnV0dG9uLXRleHRcIl0pO1xyXG5cclxuXHRjb25zdCBlcnJvclR4dCA9IGNyZWF0ZUVsZW1lbnQoXCJwXCIsIFtcIm1haW5fX2Zvcm0tZXJyb3ItdHh0XCJdKTtcclxuXHRsb2dpblRpdGxlVG9wLnRleHRDb250ZW50ID0gdGl0bGU7XHJcblx0bG9naW5UaXRsZUJvdHRvbS50ZXh0Q29udGVudCA9IHN1YnRpdGxlO1xyXG5cdGxvZ2luVGV4dC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG5cdGJ1dHRvblRleHQudGV4dENvbnRlbnQgPSBidXR0b247XHJcblxyXG5cdGxvZ2luVGl0bGUuYXBwZW5kKGxvZ2luVGl0bGVUb3AsIGxvZ2luVGl0bGVCb3R0b20pO1xyXG5cdHN1Ym1pdEJ0bi5hcHBlbmQoYnV0dG9uVGV4dCk7XHJcblx0Zm9ybS5hcHBlbmQodXNlcm5hbWVJbnB1dCwgcGFzc3dvcmRJbnB1dCwgc3VibWl0QnRuLCBlcnJvclR4dCk7XHJcblxyXG5cdHdyYXBwZXIuYXBwZW5kKGxvZ2luVGl0bGUsIGxvZ2luVGV4dCwgZm9ybSk7XHJcblx0bWFpbkNvbnRlbnQuYXBwZW5kKHdyYXBwZXIpO1xyXG5cclxuXHRzdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcblx0XHRjb25zdCByZXN1bHRzID1cclxuXHRcdFx0aGFuZGxlTG9naW5WYWxpZGF0aW9uKFxyXG5cdFx0XHRcdGUsXHJcblx0XHRcdFx0dXNlcm5hbWVJbnB1dCxcclxuXHRcdFx0XHRwYXNzd29yZElucHV0LFxyXG5cdFx0XHRcdHRyYW5zbGF0aW9ucy5tYWluLnRleHQuZXJyb3JSZXF1aXJlZCxcclxuXHRcdFx0XHR0cmFuc2xhdGlvbnMubWFpbi50ZXh0LmVycm9ySW52YWxpZCxcclxuXHRcdFx0XHRVU0VSTkFNRSxcclxuXHRcdFx0XHRQQVNTV09SRCxcclxuXHRcdFx0XHRlcnJvclR4dFxyXG5cdFx0XHQpID8/IFwiXCI7XHJcblxyXG5cdFx0ZXJyb3JUeHQuY2xhc3NMaXN0LmFkZChcInZpc2libGVcIik7XHJcblxyXG5cdFx0aWYgKCFyZXN1bHRzKSB7XHJcblx0XHRcdGVycm9yVHh0LmNsYXNzTGlzdC5yZW1vdmUoXCJ2aXNpYmxlXCIpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4gbWFpbkNvbnRlbnQ7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVMb2dpblZhbGlkYXRpb24gPSAoXHJcblx0ZSxcclxuXHR1c2VybmFtZUlucHV0LFxyXG5cdHBhc3N3b3JkSW5wdXQsXHJcblx0cmVxdWlyZUVycm9yLFxyXG5cdGludmFsaWRFcnJvcixcclxuXHR1c2VybmFtZSxcclxuXHRwYXNzd29yZCxcclxuXHRlcnJvclR4dFxyXG4pID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdGlmICh1c2VybmFtZUlucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIiB8fCBwYXNzd29yZElucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIikge1xyXG5cdFx0ZXJyb3JUeHQudGV4dENvbnRlbnQgPSByZXF1aXJlRXJyb3I7XHJcblx0XHRyZXR1cm4gcmVxdWlyZUVycm9yO1xyXG5cdH0gZWxzZSBpZiAoXHJcblx0XHR1c2VybmFtZUlucHV0LnZhbHVlLnRyaW0oKSAhPT0gdXNlcm5hbWUgfHxcclxuXHRcdHBhc3N3b3JkSW5wdXQudmFsdWUudHJpbSgpICE9PSBwYXNzd29yZFxyXG5cdCkge1xyXG5cdFx0ZS50YXJnZXQuYXBwZW5kKHNob3dTbWFsbExvYWRlcigpKTtcclxuXHRcdGVycm9yVHh0LmNsYXNzTGlzdC5yZW1vdmUoXCJ2aXNpYmxlXCIpO1xyXG5cdFx0ZS50YXJnZXQuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRlcnJvclR4dC5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuXHRcdFx0ZXJyb3JUeHQudGV4dENvbnRlbnQgPSBpbnZhbGlkRXJyb3I7XHJcblxyXG5cdFx0XHRlLnRhcmdldC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBcclxuXHRcdFx0aGlkZVNtYWxsTG9hZGVyKCk7XHJcblx0XHRcdHJldHVybiBpbnZhbGlkRXJyb3I7XHJcblx0XHR9LCAzMDAwKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0cmV0dXJuIG51bGw7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNob3dCaWdMb2FkZXIgPSAoKSA9PiB7XHJcblx0Y29uc3QgbG9hZGluZ0FyZWEgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImxvYWRpbmctYXJlYVwiXSk7XHJcblx0bG9hZGluZ0FyZWEuaW5uZXJIVE1MID0gYCAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJsb2FkZXItYmlnXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCIgd2lkdGg9XCIxMjBcIiBoZWlnaHQ9XCIxMjBcIj5cclxuICAgICAgICAgICAgICAgIDxkZWZzPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImxvYWRlci1hY2NlbnRcIiB4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMCVcIiBzdG9wLWNvbG9yPVwiIzRkYThkYVwiIHN0b3Atb3BhY2l0eT1cIjAuOFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjcwJVwiIHN0b3AtY29sb3I9XCIjNGRhOGRhXCIgc3RvcC1vcGFjaXR5PVwiMC40XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMTAwJVwiIHN0b3AtY29sb3I9XCIjNGRhOGRhXCIgc3RvcC1vcGFjaXR5PVwiMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cclxuICAgICAgICAgICAgICAgIDwvZGVmcz5cclxuICAgICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3M9XCJsb2FkaW5nLWNpcmNsZS1iaWdcIiByPVwiMzVcIiBjeD1cIjYwXCIgY3k9XCI2MFwiPjwvY2lyY2xlPlxyXG4gICAgICAgICAgICA8L3N2Zz5gO1xyXG5cdHJldHVybiBsb2FkaW5nQXJlYTtcclxufTtcclxuZXhwb3J0IGNvbnN0IGhpZGVCaWdMb2FkZXIgPSAoKSA9PiB7XHJcblx0Y29uc3QgbG9hZGluZ0FyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWRpbmctYXJlYVwiKTtcclxuXHRsb2FkaW5nQXJlYT8ucmVtb3ZlKCk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2hvd1NtYWxsTG9hZGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdBcmVhID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJsb2FkaW5nLWFyZWEtc21hbGxcIl0pO1xyXG5cdGxvYWRpbmdBcmVhLmlubmVySFRNTCA9IGA8c3ZnIGNsYXNzPVwibG9hZGVyLXNtYWxsXCIgdmlld0JveD1cIjAgMCAxMjAgMTIwXCIgd2lkdGg9XCIxMjBcIiBoZWlnaHQ9XCIxMjBcIj5cclxuICAgICAgICAgICAgICAgIDxkZWZzPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImxvYWRlci1hY2NlbnQtc21hbGxcIiB4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMCVcIiBzdG9wLWNvbG9yPVwid2hpdGVcIiBzdG9wLW9wYWNpdHk9XCIwLjhcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCI3MCVcIiBzdG9wLWNvbG9yPVwid2hpdGVcIiBzdG9wLW9wYWNpdHk9XCIwLjNcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCIxMDAlXCIgc3RvcC1jb2xvcj1cIndoaXRlXCIgc3RvcC1vcGFjaXR5PVwiMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cclxuICAgICAgICAgICAgICAgIDwvZGVmcz5cclxuICAgICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3M9XCJsb2FkaW5nLWNpcmNsZS1zbWFsbFwiIHI9XCIxMlwiIGN4PVwiNjBcIiBjeT1cIjYwXCI+PC9jaXJjbGU+XHJcbiAgICAgICAgICAgIDwvc3ZnPmA7XHJcblxyXG5cdHJldHVybiBsb2FkaW5nQXJlYTtcclxufTtcclxuZXhwb3J0IGNvbnN0IGhpZGVTbWFsbExvYWRlciA9ICgpID0+IHtcclxuXHRjb25zdCBsb2FkaW5nQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubG9hZGluZy1hcmVhLXNtYWxsXCIpO1xyXG5cdGxvYWRpbmdBcmVhLnJlbW92ZSgpO1xyXG59O1xyXG4iXX0=
