import{createElement,getImageUrl}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const HIDE_LOADER_TIME=3e3,HIDE_POPUP_TIME=2500;export const getData=()=>{try{const e=localStorage.getItem("userData");if(!e)return null;const t=JSON.parse(e);if("object"!=typeof t||null===t)throw showErrorPopup("An unexpected error occurred","#dc4a34"),new Error("NieprawidÅ‚owa struktura danych");return t}catch{return localStorage.removeItem("userData"),{}}};const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:r}}},a,n,o,i)=>{const s=createElement("header",["header"]),l=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",l.append(c,d),s.append(l);const m=createElement("button",["login-header__lang-select"],{"aria-label":`${r}`}),p=createElement("span",["login-header__lang-platform-lang"]),_=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),u=createElement("ul",["login-header__lang-list"]);for(let e=0;e<a;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),r=Object.keys(n)[e],a=Object.values(n)[e];t.dataset.lang=r,t.textContent=a,t.style.animationDelay=100*e+"ms",u.append(t)}return p.textContent=n[o],m.addEventListener("click",e=>{i.call(m,e,p)}),m.append(p,_,u),s.append(m),s};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:r,button:a},placeholder:{username:n,password:o}}})=>{const i=createElement("main",["main"]),s=createElement("div",["wrapper"]),l=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),m=createElement("p",["main__text"]),p=createElement("form",["main__form"]),_=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:n}),u=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),g=createElement("button",["main__form-button"],{type:"submit"}),f=createElement("span",["main__form-button-text"]),h=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,m.textContent=r,f.textContent=a,l.append(c,d),g.append(f),p.append(_,u,g,h),s.append(l,m,p),i.append(s),g.addEventListener("click",e=>{const t=getData(),r=t?.preferredLanguage;r||setUserPreference("preferredLanguage","pl",t);handleLoginValidation(e,_,u,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,h)||(h.classList.remove("visible"),e.target.append(showSmallLoader()),e.target.disabled=!0,setTimeout(()=>{e.target.disabled=!1,hideSmallLoader(),setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html"},3e3))}),i};const handleLoginValidation=(e,t,r,a,n,o,i,s)=>(e.preventDefault(),""===t.value.trim()||""===r.value.trim()?(s.classList.add("visible"),s.textContent=a,a):t.value.trim()!==o||r.value.trim()!==i?(e.target.disabled=!0,e.target.append(showSmallLoader()),s.classList.remove("visible"),setTimeout(()=>{s.classList.add("visible"),s.textContent=n,e.target.disabled=!1,hideSmallLoader()},3e3),n):null);export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:r,userProfileBtn:a,userBtnCustomize:n,removeUserInfo:o}},errorPopup:{text:{maxProfiles:i,emptyField:s}}})=>{const l=getData(),c=l?.userProfiles,d=document.querySelector(".container");d.append(showBigLoader()),setTimeout(()=>{const l=createElement("main",["main-profiles"]),m=createElement("div",["wrapper"]),p=createElement("h1",["main__title","main-profiles__title"]),_=createElement("div",["main-profiles__box"]);if(p.textContent=e,c&&0!==Object.keys(c).length)for(const e in c)_.append(createProfile(a,n,n,s,o,e,c[e]));_.append(createProfileAddBtn(r,t,a,_,n,n,i,s,o)),m.append(p,_),l.append(m),d.append(l),hideBigLoader()},500)};const createProfile=(e,t,r,a,n,o=null,i=null)=>{const s=getData(),l=s?.userProfiles||{};if(null===s)return showErrorPopup("An unexpected error occurred","#dc4a34"),void setTimeout(()=>{window.location.reload()},2500);let c,d,m;const p=["#dc4a34","#062E63","#FAC044"];if(o){d=o,m=i.name;c=p[parseInt(d.split("-").pop())-1]}else{if(Object.keys(l).length>=3)return;let e=1;for(;l[`user-profile-${e}`];)e++;d=`user-profile-${e}`,m=`Handsome User ${e}`,c=p[e-1]}const _=createElement("div",["main-profiles__profile"]),u=createElement("div",["main-profiles__avatar"]),g=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":d}),f=createElement("div",["main-profiles__user-info"]),h=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:m}),E=createElement("span",["name-border"]),v=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),b=createElement("button",["main-profiles__remove-user"],{"aria-label":n}),w=createElement("img",["main-profiles__remove-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/remove-profile-icon.svg"}),x=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});if(g.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="70" cy="70" r="8" fill="white" />\n    <circle cx="130" cy="70" r="8" fill="white" />\n    <path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n    fill="transparent" stroke-linecap="round" />\n    </svg>',g.style.backgroundColor=c,u.append(g),v.append(x),b.append(w),f.append(h,E,v,b),_.append(u,f),!o){const e={...l,[d]:{name:m}};setUserPreference("userProfiles",e,s)}return v.addEventListener("click",e=>{editUsername(e,f,r,a)}),b.addEventListener("click",e=>{removeUser(e)}),h.addEventListener("keydown",e=>{"Enter"===e.key&&saveUsername(e,a)}),g.addEventListener("click",e=>setCurrentProfile(e)),_.classList.add("visible"),_},setCurrentProfile=e=>{const t=getData(),r=e.target.dataset.id;setUserPreference("currentProfile",r,t),window.location.href="browse.html"},createProfileAddBtn=(e,t,r,a,n,o,i,s,l)=>{const c=createElement("div",["main-profiles__add-profile"]),d=createElement("div",["main-profiles__avatar"]),m=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),p=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),_=createElement("span",["main-profiles__name"]);return _.textContent=t,m.append(p),d.append(m),c.append(d,_),m.addEventListener("click",()=>{const e=getData(),t=e?.userProfiles||{};if(Object.keys(t).length>=3)return void showErrorPopup(i,"#dc4a34");const d=createProfile(r,n,o,s,l);d&&a.insertBefore(d,c)}),c},editUsername=(e,t,r,a)=>{resetStateOfEditing(e);const n=e.target,o=n.closest(".main-profiles__profile").querySelector(".main-profiles__name"),i=createSaveBtn(r);n.classList.add("hidden"),i.classList.remove("hidden"),t.append(i),o.focus(),o.select(),o.removeAttribute("readonly"),o.classList.add("focused"),i.addEventListener("click",e=>{saveUsername(e,a)})},saveUsername=(e,t)=>{const r=getData(),a=r?.userProfiles||[],n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn").dataset.id,i=n.querySelector(".main-profiles__name"),s=document.querySelectorAll(".main-profiles__edit-name");if(s.forEach(e=>e.removeAttribute("disabled")),""===i.value.trim())return s.forEach(e=>e.setAttribute("disabled",!0)),showErrorPopup(t,"#FAC044");const l={...a,[o]:{...a[o],name:i.value}};setUserPreference("userProfiles",l,r),resetStateOfEditing(e)},createSaveBtn=e=>{const t=createElement("button",["main-profiles__save-name","hidden"],{"aria-label":e}),r=createElement("img",["main-profiles__save-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/save.svg"});return t.append(r),t},resetStateOfEditing=e=>{const t=document.querySelectorAll(".focused"),r=document.querySelectorAll(".main-profiles__save-name"),a=document.querySelectorAll(".main-profiles__edit-name");t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused"),e.blur()}),r.forEach(e=>e.classList.add("hidden")),a.forEach(e=>e.classList.remove("hidden"))};let popupVisible=!1;export const showErrorPopup=(e,t)=>{if(popupVisible)return;popupVisible=!0;const r=document.documentElement,a=document.querySelector(".container"),n=createElement("div",["error-popup"]),o=createElement("p",["error-popup__text"]);o.textContent=e,r.style.setProperty("--errorTxtColor",t),n.append(o),a.append(n),setTimeout(()=>{n.classList.add("hidden")},2e3),setTimeout(()=>{n.remove(),popupVisible=!1},2500)};const removeUser=e=>{const t=getData(),r=t?.userProfiles,a=document.querySelectorAll(".main-profiles__edit-name"),n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn");a.forEach(e=>e.removeAttribute("disabled")),delete r[o.dataset.id],setUserPreference("userProfiles",r,t),n.classList.add("hidden"),setTimeout(()=>{n.remove()},400)};export const createBrowsePage=({header:{alt:{logo:e},aria:{logoLink:t}},browsePage:{names:{filmLink:r,seriesLink:a,myListLink:n,searchLink:o},aria:{userButton:i}}})=>{createElement("div",["wrapper"]);const s=createElement("header",["browse-header"]),l=createElement("a",["browse-header__logo"],{"aria-label":t,href:""}),c=createElement("img",["browse-header__logo-img"],{alt:e,src:"./src/icons/logo.svg"}),d=createElement("span",["browse-header__logo-text"]);return d.textContent="Stream",l.append(c,d),s.append(l,createBrowserNav(r,a,n,o),createUserBtn(i)),s};const createBrowserNav=(e,t,r,a)=>{const n=createElement("nav",["browse-header__nav"]),o=createElement("ul",["browse-header__links"]);return[{name:e,src:"./src/icons/film-icon.svg"},{name:t,src:"./src/icons/series-icon.svg"},{name:r,src:"./src/icons/list-icon.svg"},{name:a,src:"./src/icons/search-icon.svg"}].forEach(e=>{const t=createElement("li",["browse-header__item"]),r=createElement("a",["browse-header__link"],{href:""}),a=createElement("img",["browse-header__link-icon"],{width:"24",height:"24",loading:"lazy",src:e.src,alt:""}),n=createElement("span",["browse-header__link-text"]);n.textContent=e.name,r.append(a,n),t.append(r),o.append(t)}),n.append(o),n},createUserBtn=e=>{const t=createElement("div",["browse-header__user-box"]),r=createElement("button",["browse-header__user"],{"aria-label":e}),a=createElement("img",["browse-header__user-icon"],{width:"24",height:"24",loading:"lazy",src:"./src/icons/user-icon.svg",alt:""});return r.append(a),t.append(r),t};export const createMainHeroSection=(e,t,r)=>{const a=createElement("main",["browse-main"]),n=createElement("section",["browse-main__hero-section"]),o=createElement("div",["browse-main__image-carousell"]),i=createElement("div",["browse-main__images"]);e.forEach(({id:e,title:s,overview:l="",backdrop_path:c})=>{const d=c,m=createElement("div",["browse-main__img-box"]),p=createElement("img",["browse-main__img"],{alt:`${t?.browsePage?.carousellImages?.aria.carousellImageAlt} ${s}`,src:d?getImageUrl(d,"original"):"./dist/img/img-placeholder.svg"}),_=createElement("div",["browse-main__text-box"]),u=createElement("h2",["browse-main__carousell-title"]),g=createElement("p",["browse-main__carousell-overview"]);u.textContent=s,g.textContent=l,_.append(u,g,createActionButtons(e,t)),m.append(p,_),i.append(m),o.append(i),n.append(o),a.append(n),r.append(a)}),o.append(createCarousellControls(e,t))};const createActionButtons=(e,{browsePage:{actionBtns:{trailerBtnText:t,moreInfoBtnText:r}}})=>{const a=createElement("div",["browse-main__action-btns"]),n=createElement("button",["browse-main__trailer-btn"],{"data-trailer":e}),o=createElement("span",["browse-main__see-trailer"]),i=createElement("a",["browse-main__see-more-btn"],{"data-movie":e,href:""});return o.textContent=t,i.textContent=r,n.innerHTML='<svg class="browse-main__trailer-play-icon"\n\txmlns="http://www.w3.org/2000/svg" width="24" height="24"\n\tviewBox="0 0 24 24" fill="#000" stroke="#000" stroke-width="2"\n\tstroke-linecap="round" stroke-linejoin="round"\n\tclass="feather feather-play">\n\t<polygon points="5 3 19 12 5 21 5 3"></polygon>\n\t</svg>',n.append(o),a.append(n,i),a},createCarousellControls=(e,{browsePage:{carousellBtns:{aria:t}}})=>{const r=createElement("div",["browse-main__carousell-controls"]);return e.forEach((e,a)=>{const n=createElement("button",["browse-main__btn"],{"data-img":a,"aria-label":`${t} ${a}`}),o=createElement("span",["browse-main__progress-bar"]);n.append(o),r.append(n)}),r};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
