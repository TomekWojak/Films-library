import{verifyCredentials}from"./firebase-auth.min.js";import{createElement,getImageUrl}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const HIDE_POPUP_TIME=2500;export const getData=()=>{try{const e=localStorage.getItem("userData");if(!e)return null;const t=JSON.parse(e);if("object"!=typeof t||null===t)throw showErrorPopup("Invalid user data. Resetting storage.","#dc4a34"),new Error("Invalid data structure");return t}catch{return localStorage.removeItem("userData"),showErrorPopup("Error accessing user data. Please try again.","#dc4a34"),{}}};const getCurrentDate=()=>(new Date).getFullYear();export const createFooter=({header:{alt:{logo:e}}})=>{const t=getCurrentDate(),r=createElement("footer",["browse-footer"]),a=createElement("span",["browse-footer__logo"]),n=createElement("img",["browse-footer__img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),o=createElement("p",["browse-footer__info"]);return a.textContent="Stream",a.prepend(n),o.textContent=`Â©${t} Stream corporation | All rights reserved.`,r.append(a,o),r};export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:r}}},a,n,o,i)=>{const s=createElement("header",["header"]),l=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",l.append(c,d),s.append(l);const m=createElement("button",["login-header__lang-select"],{"aria-label":`${r}`}),p=createElement("span",["login-header__lang-platform-lang"]),_=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),g=createElement("ul",["login-header__lang-list"]);for(let e=0;e<a;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),r=Object.keys(n)[e],a=Object.values(n)[e];t.dataset.lang=r,t.textContent=a,t.style.animationDelay=100*e+"ms",g.append(t)}return p.textContent=n[o],m.addEventListener("click",e=>{i.call(m,e,p)}),m.append(p,_,g),s.append(m),s};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:r,button:a},placeholder:{username:n,password:o}}})=>{const i=createElement("main",["main"]),s=createElement("div",["wrapper"]),l=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),m=createElement("p",["main__text"]),p=createElement("form",["main__form"]),_=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:n}),g=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),u=createElement("button",["main__form-button"],{type:"submit"}),f=createElement("span",["main__form-button-text"]),h=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,m.textContent=r,f.textContent=a,l.append(c,d),u.append(f),p.append(_,g,u,h),s.append(l,m,p),i.append(s),u.addEventListener("click",e=>{const t=getData(),r=t?.preferredLanguage;r||setUserPreference("preferredLanguage","pl",t),handleLoginValidation(e,_,g,translations.main.text.errorRequired,translations.main.text.errorInvalid,h).then(e=>{e||(setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html")})}),i};const handleLoginValidation=async(e,t,r,a,n,o)=>{if(e.preventDefault(),""===t.value.trim()||""===r.value.trim())return o.classList.add("visible"),o.textContent=a,a;const i=t.value.trim(),s=r.value.trim();e.target.disabled=!0,e.target.append(showSmallLoader()),o.classList.remove("visible");const l=await verifyCredentials(i,s);return hideSmallLoader(),e.target.disabled=!1,l.success?null:(o.classList.add("visible"),o.textContent=n,n)};export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:r,userProfileBtn:a,userBtnCustomize:n,removeUserInfo:o}},errorPopup:{text:{maxProfiles:i,emptyField:s}}})=>{const l=getData(),c=l?.userProfiles,d=document.querySelector(".container");d.append(showBigLoader()),setTimeout(()=>{const l=createElement("main",["main-profiles"]),m=createElement("div",["wrapper"]),p=createElement("h1",["main__title","main-profiles__title"]),_=createElement("div",["main-profiles__box"]);if(p.textContent=e,c&&0!==Object.keys(c).length)for(const e in c)_.append(createProfile(a,n,n,s,o,e,c[e]));_.append(createProfileAddBtn(r,t,a,_,n,n,i,s,o)),m.append(p,_),l.append(m),d.append(l),hideBigLoader()},500)};const createProfile=(e,t,r,a,n,o=null,i=null)=>{const s=getData(),l=s?.userProfiles||{};if(null===s)return showErrorPopup("An unexpected error occurred","#dc4a34"),void setTimeout(()=>{window.location.reload()},2500);let c,d,m;const p=["#dc4a34","#062E63","#FAC044"];if(o){d=o,m=i.name;c=p[parseInt(d.split("-").pop())-1]}else{if(Object.keys(l).length>=3)return;let e=1;for(;l[`user-profile-${e}`];)e++;d=`user-profile-${e}`,m=`Handsome User ${e}`,c=p[e-1]}const _=createElement("div",["main-profiles__profile"]),g=createElement("div",["main-profiles__avatar"]),u=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":d}),f=createElement("div",["main-profiles__user-info"]),h=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:m}),b=createElement("span",["name-border"]),w=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),E=createElement("button",["main-profiles__remove-user"],{"aria-label":n}),v=createElement("img",["main-profiles__remove-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/remove-profile-icon.svg"}),x=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});if(u.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="70" cy="70" r="8" fill="white" />\n    <circle cx="130" cy="70" r="8" fill="white" />\n    <path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n    fill="transparent" stroke-linecap="round" />\n    </svg>',u.style.backgroundColor=c,g.append(u),w.append(x),E.append(v),f.append(h,b,w,E),_.append(g,f),!o){const e={...l,[d]:{name:m}};setUserPreference("userProfiles",e,s)}return w.addEventListener("click",e=>{editUsername(e,f,r,a)}),E.addEventListener("click",e=>{removeUser(e)}),h.addEventListener("keydown",e=>{"Enter"===e.key&&saveUsername(e,a)}),u.addEventListener("click",e=>setCurrentProfile(e)),_.classList.add("visible"),_},setCurrentProfile=e=>{const t=getData(),r=e.target.dataset.id;setUserPreference("currentProfile",r,t),window.location.href="browse.html"},createProfileAddBtn=(e,t,r,a,n,o,i,s,l)=>{const c=createElement("div",["main-profiles__add-profile"]),d=createElement("div",["main-profiles__avatar"]),m=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),p=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),_=createElement("span",["main-profiles__name"]);return _.textContent=t,m.append(p),d.append(m),c.append(d,_),m.addEventListener("click",()=>{const e=getData(),t=e?.userProfiles||{};if(Object.keys(t).length>=3)return void showErrorPopup(i,"#dc4a34");const d=createProfile(r,n,o,s,l);d&&a.insertBefore(d,c)}),c},editUsername=(e,t,r,a)=>{resetStateOfEditing(e);const n=e.target,o=n.closest(".main-profiles__profile").querySelector(".main-profiles__name"),i=createSaveBtn(r);n.classList.add("hidden"),i.classList.remove("hidden"),t.append(i),o.focus(),o.select(),o.removeAttribute("readonly"),o.classList.add("focused"),i.addEventListener("click",e=>{saveUsername(e,a)})},saveUsername=(e,t)=>{const r=getData(),a=r?.userProfiles||[],n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn").dataset.id,i=n.querySelector(".main-profiles__name"),s=document.querySelectorAll(".main-profiles__edit-name");if(s.forEach(e=>e.removeAttribute("disabled")),""===i.value.trim())return s.forEach(e=>e.setAttribute("disabled",!0)),showErrorPopup(t,"#FAC044");const l={...a,[o]:{...a[o],name:i.value}};setUserPreference("userProfiles",l,r),resetStateOfEditing(e)},createSaveBtn=e=>{const t=createElement("button",["main-profiles__save-name","hidden"],{"aria-label":e}),r=createElement("img",["main-profiles__save-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/save.svg"});return t.append(r),t},resetStateOfEditing=e=>{const t=document.querySelectorAll(".focused"),r=document.querySelectorAll(".main-profiles__save-name"),a=document.querySelectorAll(".main-profiles__edit-name");t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused"),e.blur()}),r.forEach(e=>e.classList.add("hidden")),a.forEach(e=>e.classList.remove("hidden"))};let popupVisible=!1;export const showErrorPopup=(e,t)=>{if(popupVisible)return;popupVisible=!0;const r=document.documentElement,a=document.querySelector(".container"),n=createElement("div",["error-popup"]),o=createElement("p",["error-popup__text"]);o.textContent=e,r.style.setProperty("--errorTxtColor",t),n.append(o),a.append(n),setTimeout(()=>{n.classList.add("hidden")},2e3),setTimeout(()=>{n.remove(),popupVisible=!1},2500)};const removeUser=e=>{const t=getData(),r=t?.userProfiles,a=document.querySelectorAll(".main-profiles__edit-name"),n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn");a.forEach(e=>e.removeAttribute("disabled")),delete r[o.dataset.id],setUserPreference("userProfiles",r,t),n.classList.add("hidden"),setTimeout(()=>{n.remove()},400)};export const createBrowsePage=({header:{alt:{logo:e},aria:{logoLink:t}},browsePage:{names:{filmLink:r,seriesLink:a,myListLink:n,searchLink:o},aria:{userButton:i}}})=>{const s=createElement("header",["browse-header"]),l=createElement("a",["browse-header__logo"],{"aria-label":t,href:""}),c=createElement("img",["browse-header__logo-img"],{alt:e,src:"./src/icons/logo.svg"}),d=createElement("span",["browse-header__logo-text"]);return d.textContent="Stream",l.append(c,d),s.append(l,createBrowserNav(r,a,n,o),createUserBtn(i)),s};const createBrowserNav=(e,t,r,a)=>{const n=createElement("nav",["browse-header__nav"]),o=createElement("ul",["browse-header__links"]);return[{name:e,src:"./src/icons/film-icon.svg"},{name:t,src:"./src/icons/series-icon.svg"},{name:r,src:"./src/icons/list-icon.svg"},{name:a,src:"./src/icons/search-icon.svg"}].forEach(e=>{const t=createElement("li",["browse-header__item"]),r=createElement("a",["browse-header__link"],{href:""}),a=createElement("img",["browse-header__link-icon"],{width:"24",height:"24",loading:"lazy",src:e.src,alt:""}),n=createElement("span",["browse-header__link-text"]);n.textContent=e.name,r.append(a,n),t.append(r),o.append(t)}),n.append(o),n},createUserBtn=e=>{const t=createElement("div",["browse-header__user-box"]),r=createElement("button",["browse-header__user"],{"aria-label":e}),a=createElement("img",["browse-header__user-icon"],{width:"24",height:"24",loading:"lazy",src:"./src/icons/user-icon.svg",alt:""});return r.append(a),t.append(r),t};export const createMainHeroSection=(e,t,r)=>{const a=createElement("main",["browse-main"]),n=createElement("section",["browse-main__hero-section"]),o=createElement("div",["browse-main__image-carousell"]),i=createElement("div",["browse-main__images"]);e.forEach(({id:e,title:r,overview:s="",backdrop_path:l})=>{const c=l,d=createElement("div",["browse-main__img-box"]),m=createElement("img",["browse-main__img"],{alt:`${t?.browsePage?.carousellImages?.aria.carousellImageAlt} ${r}`,src:c?getImageUrl(c,"original"):"./dist/img/img-placeholder.svg"}),p=createElement("div",["browse-main__text-box"]),_=createElement("h2",["browse-main__carousell-title"]),g=createElement("p",["browse-main__carousell-overview"],{tabindex:-1});_.textContent=r,g.textContent=s,p.append(_,g,createActionButtons(e,t)),d.append(m,p),i.append(d),o.append(i),n.append(o),a.append(n)}),r.append(a),o.append(createCarousellControls(e,t))};const createActionButtons=(e,{browsePage:{actionBtns:{trailerBtnText:t,moreInfoBtnText:r}}})=>{const a=createElement("div",["browse-main__action-btns"]),n=createElement("button",["browse-main__trailer-btn"],{"data-trailer":e}),o=createElement("span",["browse-main__see-trailer"]),i=createElement("a",["browse-main__see-more-btn"],{"data-movie":e,href:""});return o.textContent=t,i.textContent=r,n.innerHTML='<svg class="browse-main__trailer-play-icon"\n\txmlns="http://www.w3.org/2000/svg" width="24" height="24"\n\tviewBox="0 0 24 24" fill="#000" stroke="#000" stroke-width="2"\n\tstroke-linecap="round" stroke-linejoin="round"\n\tclass="feather feather-play">\n\t<polygon points="5 3 19 12 5 21 5 3"></polygon>\n\t</svg>',n.append(o),a.append(n,i),a},createCarousellControls=(e,{browsePage:{carousellBtns:{aria:t}}})=>{const r=createElement("div",["browse-main__carousell-controls"]);return e.forEach((e,a)=>{const n=createElement("button",["browse-main__btn"],{"data-img":a,"aria-label":`${t} ${a}`}),o=createElement("span",["browse-main__progress-bar"]);n.append(o),r.append(n)}),r};export const createFilmSlider=(e,t,r,a)=>{const n=e[r]?.results||[];if(!n.length)return console.error(`No films found for index ${r}`),void showErrorPopup(`No films found for index ${r}`,"#dc4a34");const o=createElement("section",["browse-section"]),i=createElement("h3",["browse-section__title"]),s=createElement("div",["browse-section__slider"],{"data-index":0}),l=createElement("div",["browse-section__slider-images"]),c=createElement("button",["browse-section__slider-btn","browse-section__slider-prev-btn"],{"aria-label":t?.browseSection?.aria?.showPrevSlideBtn}),d=createElement("button",["browse-section__slider-btn","browse-section__slider-next-btn"],{"aria-label":t?.browseSection?.aria?.showNextSlideBtn}),m=createElement("img",["browse-section__slider-btn-icon"],{src:"./src/icons/chevron-left.svg",width:"24",height:"24",loading:"lazy",alt:""}),p=createElement("img",["browse-section__slider-btn-icon"],{src:"./src/icons/chevron-right.svg",width:"24",height:"24",loading:"lazy",alt:""});return i.textContent=a,d.append(p),c.append(m),createFilmPosters(n,t,l),s.append(l,c,d),o.append(i,s),o};const createFilmPosters=(e,t,r)=>{e.forEach(({id:e,title:a,poster_path:n})=>{const o=n,i=createElement("div",["browse-section__slider-box"]),s=createElement("a",["browse-section__slider-img-link"],{href:"browse.html","aria-label":t?.browseSection?.aria?.showMoreInfoAboutFilm}),l=createElement("img",["browse-section__slider-img"],{alt:`${t?.browsePage?.carousellImages?.aria?.carousellImageAlt} ${a}`,loading:"lazy",width:"",height:"",src:o?getImageUrl(o,"original"):"./dist/img/img-placeholder.svg"}),c=createElement("button",["browse-section__add-to-list-btn"],{"aria-label":t?.browseSection?.aria?.addToListBtn,"data-movie":e}),d=createElement("img",["browse-section__add-to-list-icon"],{src:"./src/icons/add-profile.svg",width:"24",height:"24",loading:"lazy",alt:""}),m=createElement("span",["browse-section__tooltip"]);m.textContent=t.browseSection.info,c.append(d),s.append(l),i.append(s,c,m),r.append(i)})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy5taW4uanMiLCJuYW1lcyI6WyJ2ZXJpZnlDcmVkZW50aWFscyIsImNyZWF0ZUVsZW1lbnQiLCJnZXRJbWFnZVVybCIsInNldFVzZXJQcmVmZXJlbmNlIiwiSElERV9QT1BVUF9USU1FIiwiZ2V0RGF0YSIsImRhdGEiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicGFyc2VkRGF0YSIsIkpTT04iLCJwYXJzZSIsInNob3dFcnJvclBvcHVwIiwiRXJyb3IiLCJyZW1vdmVJdGVtIiwiZ2V0Q3VycmVudERhdGUiLCJEYXRlIiwiZ2V0RnVsbFllYXIiLCJjcmVhdGVGb290ZXIiLCJoZWFkZXIiLCJhbHQiLCJsb2dvIiwiY3VyckRhdGUiLCJmb290ZXIiLCJmb290ZXJMb2dvIiwibG9nb0ltZyIsInNyYyIsIndpZHRoIiwiaGVpZ2h0IiwiaW5mbyIsInRleHRDb250ZW50IiwicHJlcGVuZCIsImFwcGVuZCIsImNyZWF0ZUxvZ2luSGVhZGVyIiwiYXJpYSIsImxvZ29MaW5rIiwiY2hhbmdlTGFuZ3VhZ2VCdXR0b24iLCJsYW5nQW1vdW50IiwibGFuZ05hbWVzIiwibGFuZ3VhZ2UiLCJoYW5kbGVMYW5nU2VsZWN0IiwicGFnZUxvZ28iLCJocmVmIiwibG9nb1RleHQiLCJsYW5nU2VsZWN0IiwibGFuZ1BsYXRmb3JtTGFuZyIsImxhbmdBcnJvdyIsImxhbmdMaXN0IiwiaSIsImxhbmdDaG9pY2UiLCJ0YWJpbmRleCIsIk9iamVjdCIsImtleXMiLCJ0ZXh0IiwidmFsdWVzIiwiZGF0YXNldCIsImxhbmciLCJzdHlsZSIsImFuaW1hdGlvbkRlbGF5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJjYWxsIiwiY3JlYXRlTG9naW5QYWdlIiwibWFpbiIsInRpdGxlIiwic3VidGl0bGUiLCJkZXNjcmlwdGlvbiIsImJ1dHRvbiIsInBsYWNlaG9sZGVyIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsIm1haW5Db250ZW50Iiwid3JhcHBlciIsImxvZ2luVGl0bGUiLCJsb2dpblRpdGxlVG9wIiwibG9naW5UaXRsZUJvdHRvbSIsImxvZ2luVGV4dCIsImZvcm0iLCJ1c2VybmFtZUlucHV0IiwidHlwZSIsInBhc3N3b3JkSW5wdXQiLCJzdWJtaXRCdG4iLCJidXR0b25UZXh0IiwiZXJyb3JUeHQiLCJ1c2VyRGF0YSIsImNob29zZW5MYW5nIiwicHJlZmVycmVkTGFuZ3VhZ2UiLCJoYW5kbGVMb2dpblZhbGlkYXRpb24iLCJ0cmFuc2xhdGlvbnMiLCJlcnJvclJlcXVpcmVkIiwiZXJyb3JJbnZhbGlkIiwidGhlbiIsInJlcyIsIndpbmRvdyIsImxvY2F0aW9uIiwiYXN5bmMiLCJyZXF1aXJlRXJyb3IiLCJpbnZhbGlkRXJyb3IiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwidHJpbSIsImNsYXNzTGlzdCIsImFkZCIsImVtYWlsVmFsdWUiLCJwYXNzd29yZFZhbHVlIiwidGFyZ2V0IiwiZGlzYWJsZWQiLCJzaG93U21hbGxMb2FkZXIiLCJyZW1vdmUiLCJyZXN1bHQiLCJoaWRlU21hbGxMb2FkZXIiLCJzdWNjZXNzIiwic2hvd0JpZ0xvYWRlciIsImxvYWRpbmdBcmVhIiwiaW5uZXJIVE1MIiwiaGlkZUJpZ0xvYWRlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNyZWF0ZVByb2ZpbGVzUGFnZSIsInByb2ZpbGVzIiwiYWRkUHJvZmlsZUluZm8iLCJhZGRQcm9maWxlQnRuIiwidXNlclByb2ZpbGVCdG4iLCJ1c2VyQnRuQ3VzdG9taXplIiwicmVtb3ZlVXNlckluZm8iLCJlcnJvclBvcHVwIiwibWF4UHJvZmlsZXMiLCJlbXB0eUZpZWxkIiwidXNlclByb2ZpbGVzTGlzdCIsInVzZXJQcm9maWxlcyIsImNvbnRhaW5lciIsInNldFRpbWVvdXQiLCJwcm9maWxlc1BhZ2VNYWluIiwicHJvZmlsZXNUaXRsZSIsInByb2ZpbGVzQm94IiwibGVuZ3RoIiwia2V5IiwiY3JlYXRlUHJvZmlsZSIsImNyZWF0ZVByb2ZpbGVBZGRCdG4iLCJhcmlhSW5mbyIsInVzZXJCdG5JbmZvIiwic2F2ZUJ0bkFyaWEiLCJlbXB0eUZpZWxkRXJyb3IiLCJyZW1vdmVBcmlhIiwiZXhpc3RpbmdQcm9maWxlSWQiLCJleGlzdGluZ1Byb2ZpbGVOYW1lIiwiZXhpc3RpbmdQcm9maWxlcyIsInJlbG9hZCIsImNvbG9yIiwicHJvZmlsZUlkIiwicHJvZmlsZU5hbWUiLCJjb2xvcnMiLCJuYW1lIiwicGFyc2VJbnQiLCJzcGxpdCIsInBvcCIsIm5leHROdW1iZXIiLCJ1c2VyUHJvZmlsZSIsInVzZXJBdmF0YXJCb3giLCJ1c2VyUHJvZmlsZUluZm9Cb3giLCJ1c2VyUHJvZmlsZUluZm8iLCJyZWFkb25seSIsIm5hbWVCb3JkZXIiLCJlZGl0VXNlckluZm9CdG4iLCJyZW1vdmVVc2VyQnRuIiwicmVtb3ZlVXNlckljb24iLCJsb2FkaW5nIiwiZWRpdFVzZXJJbmZvSWNvbiIsImJhY2tncm91bmRDb2xvciIsInVwZGF0ZWRQcm9maWxlcyIsImVkaXRVc2VybmFtZSIsInJlbW92ZVVzZXIiLCJzYXZlVXNlcm5hbWUiLCJzZXRDdXJyZW50UHJvZmlsZSIsInByb2ZpbGVEYXRhIiwiaWQiLCJ1c2VyQnRuQXJpYSIsIm1heFByb2ZpbGVzRXJyb3IiLCJhZGRQcm9maWxlQm94IiwiYWRkUHJvZmlsZUF2YXRhciIsImFkZFByb2ZpbGVQbHVzSWNvbiIsInByb2ZpbGUiLCJpbnNlcnRCZWZvcmUiLCJwYXJlbnQiLCJyZXNldFN0YXRlT2ZFZGl0aW5nIiwiZWRpdEJ0biIsIm5hbWVUb0VkaXQiLCJjbG9zZXN0Iiwic2F2ZUJ0biIsImNyZWF0ZVNhdmVCdG4iLCJmb2N1cyIsInNlbGVjdCIsInJlbW92ZUF0dHJpYnV0ZSIsImNsb3Nlc3RQcm9maWxlIiwiY2xvc2VzdFByb2ZpbGVJZCIsImNsb3Nlc3RQcm9maWxlTmFtZSIsImFsbEVkaXRCdG5zIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJidG4iLCJzZXRBdHRyaWJ1dGUiLCJzYXZlVXNlckluZm9CdG4iLCJzYXZlVXNlckluZm9JY29uIiwiZm9jdXNlZE5hbWVzIiwiYWxsU2F2ZUJ0bnMiLCJlbCIsImJsdXIiLCJwb3B1cFZpc2libGUiLCJyb290IiwiZG9jdW1lbnRFbGVtZW50IiwicG9wdXAiLCJwb3B1cEVycm9yIiwic2V0UHJvcGVydHkiLCJjbG9zZXN0UHJvZmlsZUJ0biIsImNyZWF0ZUJyb3dzZVBhZ2UiLCJicm93c2VQYWdlIiwibmFtZXMiLCJmaWxtTGluayIsInNlcmllc0xpbmsiLCJteUxpc3RMaW5rIiwic2VhcmNoTGluayIsInVzZXJCdXR0b24iLCJsb2dvTWFpbkxpbmsiLCJsb2dvTWFpbkltZyIsIm1haW5UaXRsZSIsImNyZWF0ZUJyb3dzZXJOYXYiLCJjcmVhdGVVc2VyQnRuIiwibmF2IiwibmF2TGlua3MiLCJsaW5rIiwibGlzdEl0ZW0iLCJsaW5rRWwiLCJpY29uIiwidXNlckJveCIsInVzZXJCdG4iLCJ1c2VySWNvbiIsImNyZWF0ZU1haW5IZXJvU2VjdGlvbiIsIm1vdmllcyIsImJyb3dzZU1haW4iLCJicm93c2VNYWluU2VjdGlvbiIsImltYWdlc0Nhcm91c2VsbCIsImltYWdlc0luc2lkZVNsaWRlciIsIm92ZXJ2aWV3IiwiYmFja2Ryb3BfcGF0aCIsImltZ1NyYyIsImltYWdlQm94IiwiaW1hZ2UiLCJjYXJvdXNlbGxJbWFnZXMiLCJjYXJvdXNlbGxJbWFnZUFsdCIsInRleHRCb3giLCJmaWxtVGl0bGUiLCJmaWxtSW5mbyIsImNyZWF0ZUFjdGlvbkJ1dHRvbnMiLCJjcmVhdGVDYXJvdXNlbGxDb250cm9scyIsImFjdGlvbkJ0bnMiLCJ0cmFpbGVyQnRuVGV4dCIsIm1vcmVJbmZvQnRuVGV4dCIsImFjdGlvbkJ0bnNQYW5lbCIsInNob3dUcmFpbGVyQnRuIiwic2hvd1RyYWlsZXJUZXh0Iiwic2VlTW9yZUJ0biIsImNhcm91c2VsbEJ0bnMiLCJjYXJvdXNlbGxDb250cm9scyIsIm1vdmllIiwiaW5kZXgiLCJjYXJvdXNlbGxCdG4iLCJjYXJvdXNlbGxCdG5Qcm9ncmVzc0JhciIsImNyZWF0ZUZpbG1TbGlkZXIiLCJmaWxtcyIsInByb3BlckZpbG1zIiwicmVzdWx0cyIsImNvbnNvbGUiLCJlcnJvciIsImJyb3dzZVNlY3Rpb24iLCJzZWN0aW9uVGl0bGUiLCJzZWN0aW9uU2xpZGVyIiwic2VjdGlvbkltYWdlcyIsInNob3dQcmV2U2xpZGVCdG4iLCJzaG93TmV4dFNsaWRlQnRuIiwic2hvd1ByZXZTbGlkZUljb24iLCJzaG93TmV4dFNsaWRlSWNvbiIsImNyZWF0ZUZpbG1Qb3N0ZXJzIiwicG9zdGVyX3BhdGgiLCJzZWN0aW9uQm94Iiwic2VjdGlvbkxpbmsiLCJzaG93TW9yZUluZm9BYm91dEZpbG0iLCJzZWN0aW9uRmlsbVBvc3RlciIsInNlY3Rpb25BZGRUb0xpc3RCdG4iLCJhZGRUb0xpc3RCdG4iLCJzZWN0aW9uQWRkVG9MaXN0SWNvbiIsInNlY3Rpb25Ub29sdGlwIl0sInNvdXJjZXMiOlsiY29tcG9uZW50cy5qcyJdLCJtYXBwaW5ncyI6Ik9BQVNBLHNCQUF5QixnQ0FDekJDLGNBQWVDLGdCQUFtQiwwQkFDbENDLHNCQUF5QixnQ0FDbEMsTUFBTUMsZ0JBQWtCLFlBRWpCLE1BQU1DLFFBQVUsS0FDdEIsSUFDQyxNQUFNQyxFQUFPQyxhQUFhQyxRQUFRLFlBQ2xDLElBQUtGLEVBQU0sT0FBTyxLQUNsQixNQUFNRyxFQUFhQyxLQUFLQyxNQUFNTCxHQUM5QixHQUEwQixpQkFBZkcsR0FBMEMsT0FBZkEsRUFFckMsTUFEQUcsZUFBZSx3Q0FBeUMsV0FDbEQsSUFBSUMsTUFBTSwwQkFFakIsT0FBT0osQ0FDUixDQUFFLE1BR0QsT0FGQUYsYUFBYU8sV0FBVyxZQUN4QkYsZUFBZSwrQ0FBZ0QsV0FDeEQsQ0FBQyxDQUNULEdBRUQsTUFBTUcsZUFBaUIsS0FDRixJQUFJQyxNQUFPQyxxQkFJekIsTUFBTUMsYUFBZSxFQUMzQkMsUUFDQ0MsS0FBT0MsYUFHUixNQUFNQyxFQUFXUCxpQkFFWFEsRUFBU3RCLGNBQWMsU0FBVSxDQUFDLGtCQUNsQ3VCLEVBQWF2QixjQUFjLE9BQVEsQ0FBQyx3QkFDcEN3QixFQUFVeEIs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dkIsS0FBSS9HLFFBQU8wTixrQkFDakMsTUFBTXRDLEVBQVNzQyxFQUNUQyxFQUFhMVIsY0FBYyxNQUFPLENBQUMsK0JBRW5DMlIsRUFBYzNSLGNBQ25CLElBQ0EsQ0FBQyxtQ0FDRCxDQUNDeUMsS0FBTSxjQUNOLGFBQWM4QyxHQUFjeUwsZUFBZS9PLE1BQU0yUCx3QkFHN0NDLEVBQW9CN1IsY0FDekIsTUFDQSxDQUFDLDhCQUNELENBQ0NtQixJQUFLLEdBQUdvRSxHQUFjK0gsWUFBWWdDLGlCQUFpQnJOLE1BQU1zTixxQkFBcUJ4TCxJQUM5RXNHLFFBQVMsT0FDVDNJLE1BQU8sR0FDUEMsT0FBUSxHQUNSRixJQUFLME4sRUFDRmxQLFlBQVlrUCxFQUFRLFlBQ3BCLG1DQUdDMkMsRUFBc0I5UixjQUMzQixTQUNBLENBQUMsbUNBQ0QsQ0FDQyxhQUFjdUYsR0FBY3lMLGVBQWUvTyxNQUFNOFAsYUFDakQsYUFBY2pILElBR1ZrSCxFQUF1QmhTLGNBQzVCLE1BQ0EsQ0FBQyxvQ0FDRCxDQUNDeUIsSUFBSyw4QkFDTEMsTUFBTyxLQUNQQyxPQUFRLEtBQ1IwSSxRQUFTLE9BQ1RsSixJQUFLLEtBR0Q4USxFQUFpQmpTLGNBQWMsT0FBUSxDQUFDLDRCQUU5Q2lTLEVBQWVwUSxZQUFjMEQsRUFBYXlMLGNBQWNwUCxLQUV4RGtRLEVBQW9CL1AsT0FBT2lRLEdBRTNCTCxFQUFZNVAsT0FBTzhQLEdBRW5CSCxFQUFXM1AsT0FBTzRQLEVBQWFHLEVBQXFCRyxHQUVwRDNHLEVBQU92SixPQUFPMlAiLCJpZ25vcmVMaXN0IjpbXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyaWZ5Q3JlZGVudGlhbHMgfSBmcm9tIFwiLi9maXJlYmFzZS1hdXRoLm1pbi5qc1wiO1xyXG5pbXBvcnQgeyBjcmVhdGVFbGVtZW50LCBnZXRJbWFnZVVybCB9IGZyb20gXCIuL2hlbHBlcnMubWluLmpzXCI7XHJcbmltcG9ydCB7IHNldFVzZXJQcmVmZXJlbmNlIH0gZnJvbSBcIi4vdXBkYXRlU3RhdGVGdW5jdGlvbnMubWluLmpzXCI7XHJcbmNvbnN0IEhJREVfUE9QVVBfVElNRSA9IDI1MDA7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0RGF0YSA9ICgpID0+IHtcclxuXHR0cnkge1xyXG5cdFx0Y29uc3QgZGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlckRhdGFcIik7XHJcblx0XHRpZiAoIWRhdGEpIHJldHVybiBudWxsO1xyXG5cdFx0Y29uc3QgcGFyc2VkRGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XHJcblx0XHRpZiAodHlwZW9mIHBhcnNlZERhdGEgIT09IFwib2JqZWN0XCIgfHwgcGFyc2VkRGF0YSA9PT0gbnVsbCkge1xyXG5cdFx0XHRzaG93RXJyb3JQb3B1cChcIkludmFsaWQgdXNlciBkYXRhLiBSZXNldHRpbmcgc3RvcmFnZS5cIiwgXCIjZGM0YTM0XCIpO1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGRhdGEgc3RydWN0dXJlXCIpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHBhcnNlZERhdGE7XHJcblx0fSBjYXRjaCB7XHJcblx0XHRsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcInVzZXJEYXRhXCIpO1xyXG5cdFx0c2hvd0Vycm9yUG9wdXAoXCJFcnJvciBhY2Nlc3NpbmcgdXNlciBkYXRhLiBQbGVhc2UgdHJ5IGFnYWluLlwiLCBcIiNkYzRhMzRcIik7XHJcblx0XHRyZXR1cm4ge307XHJcblx0fVxyXG59O1xyXG5jb25zdCBnZXRDdXJyZW50RGF0ZSA9ICgpID0+IHtcclxuXHRjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcclxuXHJcblx0cmV0dXJuIGN1cnJlbnREYXRlO1xyXG59O1xyXG5leHBvcnQgY29uc3QgY3JlYXRlRm9vdGVyID0gKHtcclxuXHRoZWFkZXI6IHtcclxuXHRcdGFsdDogeyBsb2dvIH0sXHJcblx0fSxcclxufSkgPT4ge1xyXG5cdGNvbnN0IGN1cnJEYXRlID0gZ2V0Q3VycmVudERhdGUoKTtcclxuXHJcblx0Y29uc3QgZm9vdGVyID0gY3JlYXRlRWxlbWVudChcImZvb3RlclwiLCBbXCJicm93c2UtZm9vdGVyXCJdKTtcclxuXHRjb25zdCBmb290ZXJMb2dvID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgW1wiYnJvd3NlLWZvb3Rlcl9fbG9nb1wiXSk7XHJcblx0Y29uc3QgbG9nb0ltZyA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImltZ1wiLFxyXG5cdFx0Wydicm93c2UtZm9vdGVyX19pbWcnXSxcclxuXHRcdHtcclxuXHRcdFx0c3JjOiBcIi4vc3JjL2ljb25zL2xvZ28uc3ZnXCIsXHJcblx0XHRcdGFsdDogYCR7bG9nb31gLFxyXG5cdFx0XHR3aWR0aDogXCIyNFwiLFxyXG5cdFx0XHRoZWlnaHQ6IFwiMjRcIixcclxuXHRcdH1cclxuXHQpO1xyXG5cdGNvbnN0IGluZm8gPSBjcmVhdGVFbGVtZW50KFwicFwiLCBbXCJicm93c2UtZm9vdGVyX19pbmZvXCJdKTtcclxuXHJcblx0Zm9vdGVyTG9nby50ZXh0Q29udGVudCA9IFwiU3RyZWFtXCI7XHJcblx0Zm9vdGVyTG9nby5wcmVwZW5kKGxvZ29JbWcpO1xyXG5cdGluZm8udGV4dENvbnRlbnQgPSBgwqkke2N1cnJEYXRlfSBTdHJlYW0gY29ycG9yYXRpb24gfCBBbGwgcmlnaHRzIHJlc2VydmVkLmA7XHJcblxyXG5cdGZvb3Rlci5hcHBlbmQoZm9vdGVyTG9nbywgaW5mbyk7XHJcblxyXG5cdHJldHVybiBmb290ZXI7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlTG9naW5IZWFkZXIgPSAoXHJcblx0e1xyXG5cdFx0aGVhZGVyOiB7XHJcblx0XHRcdGFsdDogeyBsb2dvIH0sXHJcblx0XHRcdGFyaWE6IHsgbG9nb0xpbmssIGNoYW5nZUxhbmd1YWdlQnV0dG9uIH0sXHJcblx0XHR9LFxyXG5cdH0sXHJcblx0bGFuZ0Ftb3VudCxcclxuXHRsYW5nTmFtZXMsXHJcblx0bGFuZ3VhZ2UsXHJcblx0aGFuZGxlTGFuZ1NlbGVjdFxyXG4pID0+IHtcclxuXHQvLyBsb2dvXHJcblx0Y29uc3QgaGVhZGVyID0gY3JlYXRlRWxlbWVudChcImhlYWRlclwiLCBbXCJoZWFkZXJcIl0pO1xyXG5cdGNvbnN0IHBhZ2VMb2dvID0gY3JlYXRlRWxlbWVudChcImFcIiwgW1wiaGVhZGVyX19sb2dvXCIsIFwibG9naW4taGVhZGVyX19sb2dvXCJdLCB7XHJcblx0XHRocmVmOiBcIi9cIixcclxuXHRcdFwiYXJpYS1sYWJlbFwiOiBgJHtsb2dvTGlua31gLFxyXG5cdH0pO1xyXG5cdGNvbnN0IGxvZ29JbWcgPSBjcmVhdGVFbGVtZW50KFxyXG5cdFx0XCJpbWdcIixcclxuXHRcdFtcImhlYWRlcl9fbG9nby1pbWdcIiwgXCJsb2dpbi1oZWFkZXJfX2xvZ28taW1nXCJdLFxyXG5cdFx0e1xyXG5cdFx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvbG9nby5zdmdcIixcclxuXHRcdFx0YWx0OiBgJHtsb2dvfWAsXHJcblx0XHRcdHdpZHRoOiBcIjI0XCIsXHJcblx0XHRcdGhlaWdodDogXCIyNFwiLFxyXG5cdFx0fVxyXG5cdCk7XHJcblx0Y29uc3QgbG9nb1RleHQgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXHJcblx0XHRcImhlYWRlcl9fbG9nby10ZXh0XCIsXHJcblx0XHRcImxvZ2luLWhlYWRlcl9fbG9nby10ZXh0XCIsXHJcblx0XSk7XHJcblx0bG9nb1RleHQudGV4dENvbnRlbnQgPSBcIlN0cmVhbVwiO1xyXG5cdHBhZ2VMb2dvLmFwcGVuZChsb2dvSW1nLCBsb2dvVGV4dCk7XHJcblx0aGVhZGVyLmFwcGVuZChwYWdlTG9nbyk7XHJcblx0Ly8gZW5kIG9mIGxvZ29cclxuXHJcblx0Ly8gbGFuZ3VhZ2Ugc2VsZWN0b3JcclxuXHRjb25zdCBsYW5nU2VsZWN0ID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBbXCJsb2dpbi1oZWFkZXJfX2xhbmctc2VsZWN0XCJdLCB7XHJcblx0XHRcImFyaWEtbGFiZWxcIjogYCR7Y2hhbmdlTGFuZ3VhZ2VCdXR0b259YCxcclxuXHR9KTtcclxuXHRjb25zdCBsYW5nUGxhdGZvcm1MYW5nID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgW1xyXG5cdFx0XCJsb2dpbi1oZWFkZXJfX2xhbmctcGxhdGZvcm0tbGFuZ1wiLFxyXG5cdF0pO1xyXG5cdGNvbnN0IGxhbmdBcnJvdyA9IGNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgW1wibG9naW4taGVhZGVyX19sYW5nLWFycm93XCJdLCB7XHJcblx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvY2hldnJvbi1kb3duLnN2Z1wiLFxyXG5cdFx0YWx0OiBcIlwiLFxyXG5cdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdGhlaWdodDogXCIyNFwiLFxyXG5cdH0pO1xyXG5cdGNvbnN0IGxhbmdMaXN0ID0gY3JlYXRlRWxlbWVudChcInVsXCIsIFtcImxvZ2luLWhlYWRlcl9fbGFuZy1saXN0XCJdKTtcclxuXHJcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsYW5nQW1vdW50OyBpKyspIHtcclxuXHRcdGNvbnN0IGxhbmdDaG9pY2UgPSBjcmVhdGVFbGVtZW50KFwibGlcIiwgW1wibG9naW4taGVhZGVyX19sYW5nLWNob2ljZVwiXSwge1xyXG5cdFx0XHR0YWJpbmRleDogMCxcclxuXHRcdH0pO1xyXG5cdFx0Y29uc3QgZGF0YSA9IE9iamVjdC5rZXlzKGxhbmdOYW1lcylbaV07XHJcblx0XHRjb25zdCB0ZXh0ID0gT2JqZWN0LnZhbHVlcyhsYW5nTmFtZXMpW2ldO1xyXG5cclxuXHRcdGxhbmdDaG9pY2UuZGF0YXNldC5sYW5nID0gZGF0YTtcclxuXHRcdGxhbmdDaG9pY2UudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG5cdFx0bGFuZ0Nob2ljZS5zdHlsZS5hbmltYXRpb25EZWxheSA9IGkgKiAxMDAgKyBcIm1zXCI7XHJcblx0XHRsYW5nTGlzdC5hcHBlbmQobGFuZ0Nob2ljZSk7XHJcblx0fVxyXG5cclxuXHRsYW5nUGxhdGZvcm1MYW5nLnRleHRDb250ZW50ID0gbGFuZ05hbWVzW2xhbmd1YWdlXTtcclxuXHJcblx0bGFuZ1NlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRcdGhhbmRsZUxhbmdTZWxlY3QuY2FsbChsYW5nU2VsZWN0LCBlLCBsYW5nUGxhdGZvcm1MYW5nKTtcclxuXHR9KTtcclxuXHJcblx0bGFuZ1NlbGVjdC5hcHBlbmQobGFuZ1BsYXRmb3JtTGFuZywgbGFuZ0Fycm93LCBsYW5nTGlzdCk7XHJcblx0aGVhZGVyLmFwcGVuZChsYW5nU2VsZWN0KTtcclxuXHJcblx0cmV0dXJuIGhlYWRlcjtcclxuXHQvLyBlbmQgb2YgbGFuZ3VhZ2Ugc2VsZWN0b3JcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVMb2dpblBhZ2UgPSAoe1xyXG5cdG1haW46IHtcclxuXHRcdHRleHQ6IHsgdGl0bGUsIHN1YnRpdGxlLCBkZXNjcmlwdGlvbiwgYnV0dG9uIH0sXHJcblx0XHRwbGFjZWhvbGRlcjogeyB1c2VybmFtZSwgcGFzc3dvcmQgfSxcclxuXHR9LFxyXG59KSA9PiB7XHJcblx0Y29uc3QgbWFpbkNvbnRlbnQgPSBjcmVhdGVFbGVtZW50KFwibWFpblwiLCBbXCJtYWluXCJdKTtcclxuXHRjb25zdCB3cmFwcGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJ3cmFwcGVyXCJdKTtcclxuXHRjb25zdCBsb2dpblRpdGxlID0gY3JlYXRlRWxlbWVudChcImgxXCIpO1xyXG5cdGNvbnN0IGxvZ2luVGl0bGVUb3AgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXCJtYWluX190aXRsZVwiXSk7XHJcblx0Y29uc3QgbG9naW5UaXRsZUJvdHRvbSA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW5fX3N1YnRpdGxlXCJdKTtcclxuXHRjb25zdCBsb2dpblRleHQgPSBjcmVhdGVFbGVtZW50KFwicFwiLCBbXCJtYWluX190ZXh0XCJdKTtcclxuXHRjb25zdCBmb3JtID0gY3JlYXRlRWxlbWVudChcImZvcm1cIiwgW1wibWFpbl9fZm9ybVwiXSk7XHJcblx0Y29uc3QgdXNlcm5hbWVJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImlucHV0XCIsXHJcblx0XHRbXCJtYWluX19mb3JtLWlucHV0XCIsIFwibWFpbl9fZm9ybS1pbnB1dC0tdXNlcm5hbWVcIl0sXHJcblx0XHR7IHR5cGU6IFwidGV4dFwiLCBwbGFjZWhvbGRlcjogdXNlcm5hbWUgfVxyXG5cdCk7XHJcblx0Y29uc3QgcGFzc3dvcmRJbnB1dCA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImlucHV0XCIsXHJcblx0XHRbXCJtYWluX19mb3JtLWlucHV0XCIsIFwibWFpbl9fZm9ybS1pbnB1dC0tcGFzc3dvcmRcIl0sXHJcblx0XHR7IHR5cGU6IFwicGFzc3dvcmRcIiwgcGxhY2Vob2xkZXI6IHBhc3N3b3JkIH1cclxuXHQpO1xyXG5cdGNvbnN0IHN1Ym1pdEJ0biA9IGNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgW1wibWFpbl9fZm9ybS1idXR0b25cIl0sIHtcclxuXHRcdHR5cGU6IFwic3VibWl0XCIsXHJcblx0fSk7XHJcblx0Y29uc3QgYnV0dG9uVGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW5fX2Zvcm0tYnV0dG9uLXRleHRcIl0pO1xyXG5cclxuXHRjb25zdCBlcnJvclR4dCA9IGNyZWF0ZUVsZW1lbnQoXCJwXCIsIFtcIm1haW5fX2Zvcm0tZXJyb3ItdHh0XCJdKTtcclxuXHRsb2dpblRpdGxlVG9wLnRleHRDb250ZW50ID0gdGl0bGU7XHJcblx0bG9naW5UaXRsZUJvdHRvbS50ZXh0Q29udGVudCA9IHN1YnRpdGxlO1xyXG5cdGxvZ2luVGV4dC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG5cdGJ1dHRvblRleHQudGV4dENvbnRlbnQgPSBidXR0b247XHJcblxyXG5cdGxvZ2luVGl0bGUuYXBwZW5kKGxvZ2luVGl0bGVUb3AsIGxvZ2luVGl0bGVCb3R0b20pO1xyXG5cdHN1Ym1pdEJ0bi5hcHBlbmQoYnV0dG9uVGV4dCk7XHJcblx0Zm9ybS5hcHBlbmQodXNlcm5hbWVJbnB1dCwgcGFzc3dvcmRJbnB1dCwgc3VibWl0QnRuLCBlcnJvclR4dCk7XHJcblxyXG5cdHdyYXBwZXIuYXBwZW5kKGxvZ2luVGl0bGUsIGxvZ2luVGV4dCwgZm9ybSk7XHJcblx0bWFpbkNvbnRlbnQuYXBwZW5kKHdyYXBwZXIpO1xyXG5cclxuXHRzdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcblx0XHRjb25zdCB1c2VyRGF0YSA9IGdldERhdGEoKTtcclxuXHRcdGNvbnN0IGNob29zZW5MYW5nID0gdXNlckRhdGE/LnByZWZlcnJlZExhbmd1YWdlO1xyXG5cclxuXHRcdGlmICghY2hvb3NlbkxhbmcpIHtcclxuXHRcdFx0c2V0VXNlclByZWZlcmVuY2UoXCJwcmVmZXJyZWRMYW5ndWFnZVwiLCBcInBsXCIsIHVzZXJEYXRhKTtcclxuXHRcdH1cclxuXHJcblx0XHRoYW5kbGVMb2dpblZhbGlkYXRpb24oXHJcblx0XHRcdGUsXHJcblx0XHRcdHVzZXJuYW1lSW5wdXQsXHJcblx0XHRcdHBhc3N3b3JkSW5wdXQsXHJcblx0XHRcdHRyYW5zbGF0aW9ucy5tYWluLnRleHQuZXJyb3JSZXF1aXJlZCxcclxuXHRcdFx0dHJhbnNsYXRpb25zLm1haW4udGV4dC5lcnJvckludmFsaWQsXHJcblx0XHRcdGVycm9yVHh0XHJcblx0XHQpLnRoZW4oKHJlcykgPT4ge1xyXG5cdFx0XHRpZiAoIXJlcykge1xyXG5cdFx0XHRcdHNldFVzZXJQcmVmZXJlbmNlKFwidHJhbnNsYXRpb25zXCIsIHRyYW5zbGF0aW9ucywgdXNlckRhdGEpO1xyXG5cdFx0XHRcdHNldFVzZXJQcmVmZXJlbmNlKFwibG9nZ2VkSW5cIiwgdHJ1ZSwgdXNlckRhdGEpO1xyXG5cclxuXHRcdFx0XHR3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwicHJvZmlsZXMuaHRtbFwiOyAvLyBwcnplasWbY2llIG5hIHN0cm9uxJkgeiBwcm9maWxhbWlcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fSk7XHJcblxyXG5cdHJldHVybiBtYWluQ29udGVudDtcclxufTtcclxuXHJcbmNvbnN0IGhhbmRsZUxvZ2luVmFsaWRhdGlvbiA9IGFzeW5jIChcclxuXHRlLFxyXG5cdHVzZXJuYW1lSW5wdXQsXHJcblx0cGFzc3dvcmRJbnB1dCxcclxuXHRyZXF1aXJlRXJyb3IsXHJcblx0aW52YWxpZEVycm9yLFxyXG5cdGVycm9yVHh0XHJcbikgPT4ge1xyXG5cdGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0aWYgKHVzZXJuYW1lSW5wdXQudmFsdWUudHJpbSgpID09PSBcIlwiIHx8IHBhc3N3b3JkSW5wdXQudmFsdWUudHJpbSgpID09PSBcIlwiKSB7XHJcblx0XHRlcnJvclR4dC5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuXHRcdGVycm9yVHh0LnRleHRDb250ZW50ID0gcmVxdWlyZUVycm9yO1xyXG5cdFx0cmV0dXJuIHJlcXVpcmVFcnJvcjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGVtYWlsVmFsdWUgPSB1c2VybmFtZUlucHV0LnZhbHVlLnRyaW0oKTtcclxuXHRjb25zdCBwYXNzd29yZFZhbHVlID0gcGFzc3dvcmRJbnB1dC52YWx1ZS50cmltKCk7XHJcblxyXG5cdGUudGFyZ2V0LmRpc2FibGVkID0gdHJ1ZTtcclxuXHRlLnRhcmdldC5hcHBlbmQoc2hvd1NtYWxsTG9hZGVyKCkpO1xyXG5cdGVycm9yVHh0LmNsYXNzTGlzdC5yZW1vdmUoXCJ2aXNpYmxlXCIpO1xyXG5cclxuXHRjb25zdCByZXN1bHQgPSBhd2FpdCB2ZXJpZnlDcmVkZW50aWFscyhlbWFpbFZhbHVlLCBwYXNzd29yZFZhbHVlKTtcclxuXHJcblx0aGlkZVNtYWxsTG9hZGVyKCk7XHJcblx0ZS50YXJnZXQuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcblx0aWYgKCFyZXN1bHQuc3VjY2Vzcykge1xyXG5cdFx0ZXJyb3JUeHQuY2xhc3NMaXN0LmFkZChcInZpc2libGVcIik7XHJcblx0XHRlcnJvclR4dC50ZXh0Q29udGVudCA9IGludmFsaWRFcnJvcjtcclxuXHRcdHJldHVybiBpbnZhbGlkRXJyb3I7XHJcblx0fSBlbHNlIHtcclxuXHRcdHJldHVybiBudWxsO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzaG93QmlnTG9hZGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdBcmVhID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJsb2FkaW5nLWFyZWFcIl0pO1xyXG5cdGxvYWRpbmdBcmVhLmlubmVySFRNTCA9IGAgICAgICAgICAgICA8c3ZnIGNsYXNzPVwibG9hZGVyLWJpZ1wiIHZpZXdCb3g9XCIwIDAgMTIwIDEyMFwiIHdpZHRoPVwiMTIwXCIgaGVpZ2h0PVwiMTIwXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGVmcz5cclxuICAgICAgICAgICAgICAgICAgICA8bGluZWFyR3JhZGllbnQgaWQ9XCJsb2FkZXItYWNjZW50XCIgeDE9XCIwJVwiIHkxPVwiMCVcIiB4Mj1cIjEwMCVcIiB5Mj1cIjAlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cIiM0ZGE4ZGFcIiBzdG9wLW9wYWNpdHk9XCIwLjhcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCI3MCVcIiBzdG9wLWNvbG9yPVwiIzRkYThkYVwiIHN0b3Atb3BhY2l0eT1cIjAuNFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjEwMCVcIiBzdG9wLWNvbG9yPVwiIzRkYThkYVwiIHN0b3Atb3BhY2l0eT1cIjBcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XHJcbiAgICAgICAgICAgICAgICA8L2RlZnM+XHJcbiAgICAgICAgICAgICAgICA8Y2lyY2xlIGNsYXNzPVwibG9hZGluZy1jaXJjbGUtYmlnXCIgcj1cIjM1XCIgY3g9XCI2MFwiIGN5PVwiNjBcIj48L2NpcmNsZT5cclxuICAgICAgICAgICAgPC9zdmc+YDtcclxuXHRyZXR1cm4gbG9hZGluZ0FyZWE7XHJcbn07XHJcbmV4cG9ydCBjb25zdCBoaWRlQmlnTG9hZGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2FkaW5nLWFyZWFcIik7XHJcblx0bG9hZGluZ0FyZWE/LnJlbW92ZSgpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNob3dTbWFsbExvYWRlciA9ICgpID0+IHtcclxuXHRjb25zdCBsb2FkaW5nQXJlYSA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1wibG9hZGluZy1hcmVhLXNtYWxsXCJdKTtcclxuXHRsb2FkaW5nQXJlYS5pbm5lckhUTUwgPSBgPHN2ZyBjbGFzcz1cImxvYWRlci1zbWFsbFwiIHZpZXdCb3g9XCIwIDAgMTIwIDEyMFwiIHdpZHRoPVwiMTIwXCIgaGVpZ2h0PVwiMTIwXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGVmcz5cclxuICAgICAgICAgICAgICAgICAgICA8bGluZWFyR3JhZGllbnQgaWQ9XCJsb2FkZXItYWNjZW50LXNtYWxsXCIgeDE9XCIwJVwiIHkxPVwiMCVcIiB4Mj1cIjEwMCVcIiB5Mj1cIjAlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cIndoaXRlXCIgc3RvcC1vcGFjaXR5PVwiMC44XCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNzAlXCIgc3RvcC1jb2xvcj1cIndoaXRlXCIgc3RvcC1vcGFjaXR5PVwiMC4zXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMTAwJVwiIHN0b3AtY29sb3I9XCJ3aGl0ZVwiIHN0b3Atb3BhY2l0eT1cIjBcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XHJcbiAgICAgICAgICAgICAgICA8L2RlZnM+XHJcbiAgICAgICAgICAgICAgICA8Y2lyY2xlIGNsYXNzPVwibG9hZGluZy1jaXJjbGUtc21hbGxcIiByPVwiMTJcIiBjeD1cIjYwXCIgY3k9XCI2MFwiPjwvY2lyY2xlPlxyXG4gICAgICAgICAgICA8L3N2Zz5gO1xyXG5cclxuXHRyZXR1cm4gbG9hZGluZ0FyZWE7XHJcbn07XHJcbmV4cG9ydCBjb25zdCBoaWRlU21hbGxMb2FkZXIgPSAoKSA9PiB7XHJcblx0Y29uc3QgbG9hZGluZ0FyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWRpbmctYXJlYS1zbWFsbFwiKTtcclxuXHRsb2FkaW5nQXJlYS5yZW1vdmUoKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVQcm9maWxlc1BhZ2UgPSAoe1xyXG5cdHByb2ZpbGVzOiB7XHJcblx0XHR0ZXh0OiB7IHRpdGxlLCBhZGRQcm9maWxlSW5mbyB9LFxyXG5cdFx0YXJpYTogeyBhZGRQcm9maWxlQnRuLCB1c2VyUHJvZmlsZUJ0biwgdXNlckJ0bkN1c3RvbWl6ZSwgcmVtb3ZlVXNlckluZm8gfSxcclxuXHR9LFxyXG5cdGVycm9yUG9wdXA6IHtcclxuXHRcdHRleHQ6IHsgbWF4UHJvZmlsZXMsIGVtcHR5RmllbGQgfSxcclxuXHR9LFxyXG59KSA9PiB7XHJcblx0Y29uc3QgdXNlckRhdGEgPSBnZXREYXRhKCk7XHJcblx0Y29uc3QgdXNlclByb2ZpbGVzTGlzdCA9IHVzZXJEYXRhPy51c2VyUHJvZmlsZXM7XHJcblxyXG5cdGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGFpbmVyXCIpO1xyXG5cclxuXHRjb250YWluZXIuYXBwZW5kKHNob3dCaWdMb2FkZXIoKSk7XHJcblxyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0Y29uc3QgcHJvZmlsZXNQYWdlTWFpbiA9IGNyZWF0ZUVsZW1lbnQoXCJtYWluXCIsIFtcIm1haW4tcHJvZmlsZXNcIl0pO1xyXG5cdFx0Y29uc3Qgd3JhcHBlciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1wid3JhcHBlclwiXSk7XHJcblx0XHRjb25zdCBwcm9maWxlc1RpdGxlID0gY3JlYXRlRWxlbWVudChcImgxXCIsIFtcclxuXHRcdFx0XCJtYWluX190aXRsZVwiLFxyXG5cdFx0XHRcIm1haW4tcHJvZmlsZXNfX3RpdGxlXCIsXHJcblx0XHRdKTtcclxuXHRcdGNvbnN0IHByb2ZpbGVzQm94ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJtYWluLXByb2ZpbGVzX19ib3hcIl0pO1xyXG5cclxuXHRcdHByb2ZpbGVzVGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuXHJcblx0XHRpZiAodXNlclByb2ZpbGVzTGlzdCAmJiBPYmplY3Qua2V5cyh1c2VyUHJvZmlsZXNMaXN0KS5sZW5ndGggIT09IDApIHtcclxuXHRcdFx0Zm9yIChjb25zdCBrZXkgaW4gdXNlclByb2ZpbGVzTGlzdCkge1xyXG5cdFx0XHRcdHByb2ZpbGVzQm94LmFwcGVuZChcclxuXHRcdFx0XHRcdGNyZWF0ZVByb2ZpbGUoXHJcblx0XHRcdFx0XHRcdHVzZXJQcm9maWxlQnRuLFxyXG5cdFx0XHRcdFx0XHR1c2VyQnRuQ3VzdG9taXplLFxyXG5cdFx0XHRcdFx0XHR1c2VyQnRuQ3VzdG9taXplLFxyXG5cdFx0XHRcdFx0XHRlbXB0eUZpZWxkLFxyXG5cdFx0XHRcdFx0XHRyZW1vdmVVc2VySW5mbyxcclxuXHRcdFx0XHRcdFx0a2V5LFxyXG5cdFx0XHRcdFx0XHR1c2VyUHJvZmlsZXNMaXN0W2tleV1cclxuXHRcdFx0XHRcdClcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRwcm9maWxlc0JveC5hcHBlbmQoXHJcblx0XHRcdGNyZWF0ZVByb2ZpbGVBZGRCdG4oXHJcblx0XHRcdFx0YWRkUHJvZmlsZUJ0bixcclxuXHRcdFx0XHRhZGRQcm9maWxlSW5mbyxcclxuXHRcdFx0XHR1c2VyUHJvZmlsZUJ0bixcclxuXHRcdFx0XHRwcm9maWxlc0JveCxcclxuXHRcdFx0XHR1c2VyQnRuQ3VzdG9taXplLFxyXG5cdFx0XHRcdHVzZXJCdG5DdXN0b21pemUsXHJcblx0XHRcdFx0bWF4UHJvZmlsZXMsXHJcblx0XHRcdFx0ZW1wdHlGaWVsZCxcclxuXHRcdFx0XHRyZW1vdmVVc2VySW5mb1xyXG5cdFx0XHQpXHJcblx0XHQpO1xyXG5cdFx0d3JhcHBlci5hcHBlbmQocHJvZmlsZXNUaXRsZSwgcHJvZmlsZXNCb3gpO1xyXG5cdFx0cHJvZmlsZXNQYWdlTWFpbi5hcHBlbmQod3JhcHBlcik7XHJcblxyXG5cdFx0Y29udGFpbmVyLmFwcGVuZChwcm9maWxlc1BhZ2VNYWluKTtcclxuXHRcdGhpZGVCaWdMb2FkZXIoKTtcclxuXHR9LCA1MDApO1xyXG59O1xyXG5cclxuY29uc3QgY3JlYXRlUHJvZmlsZSA9IChcclxuXHRhcmlhSW5mbyxcclxuXHR1c2VyQnRuSW5mbyxcclxuXHRzYXZlQnRuQXJpYSxcclxuXHRlbXB0eUZpZWxkRXJyb3IsXHJcblx0cmVtb3ZlQXJpYSxcclxuXHRleGlzdGluZ1Byb2ZpbGVJZCA9IG51bGwsXHJcblx0ZXhpc3RpbmdQcm9maWxlTmFtZSA9IG51bGxcclxuKSA9PiB7XHJcblx0Y29uc3QgdXNlckRhdGEgPSBnZXREYXRhKCk7XHJcblx0Y29uc3QgZXhpc3RpbmdQcm9maWxlcyA9IHVzZXJEYXRhPy51c2VyUHJvZmlsZXMgfHwge307XHJcblxyXG5cdGlmICh1c2VyRGF0YSA9PT0gbnVsbCkge1xyXG5cdFx0c2hvd0Vycm9yUG9wdXAoXCJBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkXCIsIFwiI2RjNGEzNFwiKTtcclxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcblx0XHR9LCBISURFX1BPUFVQX1RJTUUpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0bGV0IGNvbG9yO1xyXG5cdGxldCBwcm9maWxlSWQ7XHJcblx0bGV0IHByb2ZpbGVOYW1lO1xyXG5cclxuXHRjb25zdCBjb2xvcnMgPSBbXCIjZGM0YTM0XCIsIFwiIzA2MkU2M1wiLCBcIiNGQUMwNDRcIl07XHJcblxyXG5cdGlmIChleGlzdGluZ1Byb2ZpbGVJZCkge1xyXG5cdFx0cHJvZmlsZUlkID0gZXhpc3RpbmdQcm9maWxlSWQ7XHJcblx0XHRwcm9maWxlTmFtZSA9IGV4aXN0aW5nUHJvZmlsZU5hbWUubmFtZTtcclxuXHRcdGNvbnN0IHByb2ZpbGVOdW1iZXIgPSBwYXJzZUludChwcm9maWxlSWQuc3BsaXQoXCItXCIpLnBvcCgpKTtcclxuXHRcdGNvbG9yID0gY29sb3JzW3Byb2ZpbGVOdW1iZXIgLSAxXTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0aWYgKE9iamVjdC5rZXlzKGV4aXN0aW5nUHJvZmlsZXMpLmxlbmd0aCA+PSAzKSByZXR1cm47XHJcblxyXG5cdFx0bGV0IG5leHROdW1iZXIgPSAxO1xyXG5cdFx0d2hpbGUgKGV4aXN0aW5nUHJvZmlsZXNbYHVzZXItcHJvZmlsZS0ke25leHROdW1iZXJ9YF0pIHtcclxuXHRcdFx0bmV4dE51bWJlcisrO1xyXG5cdFx0fVxyXG5cclxuXHRcdHByb2ZpbGVJZCA9IGB1c2VyLXByb2ZpbGUtJHtuZXh0TnVtYmVyfWA7XHJcblx0XHRwcm9maWxlTmFtZSA9IGBIYW5kc29tZSBVc2VyICR7bmV4dE51bWJlcn1gO1xyXG5cdFx0Y29sb3IgPSBjb2xvcnNbbmV4dE51bWJlciAtIDFdO1xyXG5cdH1cclxuXHJcblx0Y29uc3QgdXNlclByb2ZpbGUgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcIm1haW4tcHJvZmlsZXNfX3Byb2ZpbGVcIl0pO1xyXG5cdGNvbnN0IHVzZXJBdmF0YXJCb3ggPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcIm1haW4tcHJvZmlsZXNfX2F2YXRhclwiXSk7XHJcblx0Y29uc3QgdXNlclByb2ZpbGVCdG4gPSBjcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIFtcIm1haW4tcHJvZmlsZXNfX2J0blwiXSwge1xyXG5cdFx0XCJhcmlhLWxhYmVsXCI6IGFyaWFJbmZvLFxyXG5cdFx0XCJkYXRhLWlkXCI6IHByb2ZpbGVJZCxcclxuXHR9KTtcclxuXHJcblx0Y29uc3QgdXNlclByb2ZpbGVJbmZvQm94ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJtYWluLXByb2ZpbGVzX191c2VyLWluZm9cIl0pO1xyXG5cdGNvbnN0IHVzZXJQcm9maWxlSW5mbyA9IGNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBbXCJtYWluLXByb2ZpbGVzX19uYW1lXCJdLCB7XHJcblx0XHR0eXBlOiBcInRleHRcIixcclxuXHRcdHJlYWRvbmx5OiB0cnVlLFxyXG5cdFx0dmFsdWU6IHByb2ZpbGVOYW1lLFxyXG5cdH0pO1xyXG5cdGNvbnN0IG5hbWVCb3JkZXIgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXCJuYW1lLWJvcmRlclwiXSk7XHJcblx0Y29uc3QgZWRpdFVzZXJJbmZvQnRuID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiYnV0dG9uXCIsXHJcblx0XHRbXCJtYWluLXByb2ZpbGVzX19lZGl0LW5hbWVcIl0sXHJcblx0XHR7IFwiYXJpYS1sYWJlbFwiOiB1c2VyQnRuSW5mbyB9XHJcblx0KTtcclxuXHRjb25zdCByZW1vdmVVc2VyQnRuID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiYnV0dG9uXCIsXHJcblx0XHRbXCJtYWluLXByb2ZpbGVzX19yZW1vdmUtdXNlclwiXSxcclxuXHRcdHsgXCJhcmlhLWxhYmVsXCI6IHJlbW92ZUFyaWEgfVxyXG5cdCk7XHJcblx0Y29uc3QgcmVtb3ZlVXNlckljb24gPSBjcmVhdGVFbGVtZW50KFwiaW1nXCIsIFtcIm1haW4tcHJvZmlsZXNfX3JlbW92ZS1pY29uXCJdLCB7XHJcblx0XHR3aWR0aDogXCIyNFwiLFxyXG5cdFx0aGVpZ2h0OiBcIjI0XCIsXHJcblx0XHRsb2FkaW5nOiBcImxhenlcIixcclxuXHRcdGFsdDogXCJcIixcclxuXHRcdHNyYzogXCIuL3NyYy9pY29ucy9yZW1vdmUtcHJvZmlsZS1pY29uLnN2Z1wiLFxyXG5cdH0pO1xyXG5cdGNvbnN0IGVkaXRVc2VySW5mb0ljb24gPSBjcmVhdGVFbGVtZW50KFwiaW1nXCIsIFtcIm1haW4tcHJvZmlsZXNfX2VkaXQtaWNvblwiXSwge1xyXG5cdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdGhlaWdodDogXCIyNFwiLFxyXG5cdFx0bG9hZGluZzogXCJsYXp5XCIsXHJcblx0XHRhbHQ6IFwiXCIsXHJcblx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvZWRpdC5zdmdcIixcclxuXHR9KTtcclxuXHJcblx0dXNlclByb2ZpbGVCdG4uaW5uZXJIVE1MID0gYDxzdmcgY2xhc3M9XCJtYWluLXByb2ZpbGVzX19pbWdcIiB3aWR0aD1cIjE1MFwiIGhlaWdodD1cIjE1MFwiIHZpZXdCb3g9XCIwIDAgMjAwIDIwMFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuICAgIDxjaXJjbGUgY3g9XCI3MFwiIGN5PVwiNzBcIiByPVwiOFwiIGZpbGw9XCJ3aGl0ZVwiIC8+XHJcbiAgICA8Y2lyY2xlIGN4PVwiMTMwXCIgY3k9XCI3MFwiIHI9XCI4XCIgZmlsbD1cIndoaXRlXCIgLz5cclxuICAgIDxwYXRoIGQ9XCJNNjAgMTEwIFExMDAgMTUwIDE0MCAxMTBcIiBzdHJva2U9XCJ3aGl0ZVwiIHN0cm9rZS13aWR0aD1cIjZcIlxyXG4gICAgZmlsbD1cInRyYW5zcGFyZW50XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIC8+XHJcbiAgICA8L3N2Zz5gO1xyXG5cdHVzZXJQcm9maWxlQnRuLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xyXG5cclxuXHR1c2VyQXZhdGFyQm94LmFwcGVuZCh1c2VyUHJvZmlsZUJ0bik7XHJcblx0ZWRpdFVzZXJJbmZvQnRuLmFwcGVuZChlZGl0VXNlckluZm9JY29uKTtcclxuXHRyZW1vdmVVc2VyQnRuLmFwcGVuZChyZW1vdmVVc2VySWNvbik7XHJcblx0dXNlclByb2ZpbGVJbmZvQm94LmFwcGVuZChcclxuXHRcdHVzZXJQcm9maWxlSW5mbyxcclxuXHRcdG5hbWVCb3JkZXIsXHJcblx0XHRlZGl0VXNlckluZm9CdG4sXHJcblx0XHRyZW1vdmVVc2VyQnRuXHJcblx0KTtcclxuXHR1c2VyUHJvZmlsZS5hcHBlbmQodXNlckF2YXRhckJveCwgdXNlclByb2ZpbGVJbmZvQm94KTtcclxuXHJcblx0aWYgKCFleGlzdGluZ1Byb2ZpbGVJZCkge1xyXG5cdFx0Y29uc3QgdXBkYXRlZFByb2ZpbGVzID0ge1xyXG5cdFx0XHQuLi5leGlzdGluZ1Byb2ZpbGVzLFxyXG5cdFx0XHRbcHJvZmlsZUlkXToge1xyXG5cdFx0XHRcdG5hbWU6IHByb2ZpbGVOYW1lLFxyXG5cdFx0XHR9LFxyXG5cdFx0fTtcclxuXHRcdHNldFVzZXJQcmVmZXJlbmNlKFwidXNlclByb2ZpbGVzXCIsIHVwZGF0ZWRQcm9maWxlcywgdXNlckRhdGEpO1xyXG5cdH1cclxuXHJcblx0ZWRpdFVzZXJJbmZvQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG5cdFx0ZWRpdFVzZXJuYW1lKGUsIHVzZXJQcm9maWxlSW5mb0JveCwgc2F2ZUJ0bkFyaWEsIGVtcHR5RmllbGRFcnJvcik7XHJcblx0fSk7XHJcblx0cmVtb3ZlVXNlckJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRcdHJlbW92ZVVzZXIoZSk7XHJcblx0fSk7XHJcblxyXG5cdHVzZXJQcm9maWxlSW5mby5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xyXG5cdFx0aWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcclxuXHRcdFx0c2F2ZVVzZXJuYW1lKGUsIGVtcHR5RmllbGRFcnJvcik7XHJcblx0XHR9XHJcblx0fSk7XHJcblx0dXNlclByb2ZpbGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiBzZXRDdXJyZW50UHJvZmlsZShlKSk7XHJcblxyXG5cdHVzZXJQcm9maWxlLmNsYXNzTGlzdC5hZGQoXCJ2aXNpYmxlXCIpO1xyXG5cdHJldHVybiB1c2VyUHJvZmlsZTtcclxufTtcclxuLy8gd3liw7NyIHByb2ZpbHVcclxuY29uc3Qgc2V0Q3VycmVudFByb2ZpbGUgPSAoZSkgPT4ge1xyXG5cdGNvbnN0IHVzZXJEYXRhID0gZ2V0RGF0YSgpO1xyXG5cdGNvbnN0IHByb2ZpbGVEYXRhID0gZS50YXJnZXQuZGF0YXNldC5pZDtcclxuXHJcblx0c2V0VXNlclByZWZlcmVuY2UoXCJjdXJyZW50UHJvZmlsZVwiLCBwcm9maWxlRGF0YSwgdXNlckRhdGEpO1xyXG5cclxuXHR3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiYnJvd3NlLmh0bWxcIjtcclxufTtcclxuLy8ga29uaWVjIHd5Ym9ydSBwcm9maWx1XHJcblxyXG5jb25zdCBjcmVhdGVQcm9maWxlQWRkQnRuID0gKFxyXG5cdGFyaWFJbmZvLFxyXG5cdGluZm8sXHJcblx0dXNlckJ0bkFyaWEsXHJcblx0cHJvZmlsZXNCb3gsXHJcblx0dXNlckJ0bkluZm8sXHJcblx0c2F2ZUJ0bkFyaWEsXHJcblx0bWF4UHJvZmlsZXNFcnJvcixcclxuXHRlbXB0eUZpZWxkRXJyb3IsXHJcblx0cmVtb3ZlQXJpYVxyXG4pID0+IHtcclxuXHRjb25zdCBhZGRQcm9maWxlQm94ID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJtYWluLXByb2ZpbGVzX19hZGQtcHJvZmlsZVwiXSk7XHJcblx0Y29uc3QgYWRkUHJvZmlsZUF2YXRhciA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1wibWFpbi1wcm9maWxlc19fYXZhdGFyXCJdKTtcclxuXHRjb25zdCBhZGRQcm9maWxlQnRuID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiYnV0dG9uXCIsXHJcblx0XHRbXCJtYWluLXByb2ZpbGVzX19idG5cIiwgXCJtYWluLXByb2ZpbGVzX19idG4tLWFkZC1wcm9maWxlXCJdLFxyXG5cdFx0eyBcImFyaWEtbGFiZWxcIjogYXJpYUluZm8gfVxyXG5cdCk7XHJcblx0Y29uc3QgYWRkUHJvZmlsZVBsdXNJY29uID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCBbXCJtYWluLXByb2ZpbGVzX19hZGQtaW1nXCJdLCB7XHJcblx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvYWRkLXByb2ZpbGUuc3ZnXCIsXHJcblx0XHRsb2FkaW5nOiBcImxhenlcIixcclxuXHRcdGFsdDogXCJcIixcclxuXHR9KTtcclxuXHRjb25zdCBhZGRQcm9maWxlSW5mbyA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW4tcHJvZmlsZXNfX25hbWVcIl0pO1xyXG5cclxuXHRhZGRQcm9maWxlSW5mby50ZXh0Q29udGVudCA9IGluZm87XHJcblxyXG5cdGFkZFByb2ZpbGVCdG4uYXBwZW5kKGFkZFByb2ZpbGVQbHVzSWNvbik7XHJcblx0YWRkUHJvZmlsZUF2YXRhci5hcHBlbmQoYWRkUHJvZmlsZUJ0bik7XHJcblx0YWRkUHJvZmlsZUJveC5hcHBlbmQoYWRkUHJvZmlsZUF2YXRhciwgYWRkUHJvZmlsZUluZm8pO1xyXG5cclxuXHRhZGRQcm9maWxlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcblx0XHRjb25zdCB1c2VyRGF0YSA9IGdldERhdGEoKTtcclxuXHRcdGNvbnN0IGV4aXN0aW5nUHJvZmlsZXMgPSB1c2VyRGF0YT8udXNlclByb2ZpbGVzIHx8IHt9O1xyXG5cclxuXHRcdGlmIChPYmplY3Qua2V5cyhleGlzdGluZ1Byb2ZpbGVzKS5sZW5ndGggPj0gMykge1xyXG5cdFx0XHRzaG93RXJyb3JQb3B1cChtYXhQcm9maWxlc0Vycm9yLCBcIiNkYzRhMzRcIik7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRjb25zdCBwcm9maWxlID0gY3JlYXRlUHJvZmlsZShcclxuXHRcdFx0dXNlckJ0bkFyaWEsXHJcblx0XHRcdHVzZXJCdG5JbmZvLFxyXG5cdFx0XHRzYXZlQnRuQXJpYSxcclxuXHRcdFx0ZW1wdHlGaWVsZEVycm9yLFxyXG5cdFx0XHRyZW1vdmVBcmlhXHJcblx0XHQpO1xyXG5cclxuXHRcdGlmIChwcm9maWxlKSB7XHJcblx0XHRcdHByb2ZpbGVzQm94Lmluc2VydEJlZm9yZShwcm9maWxlLCBhZGRQcm9maWxlQm94KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0cmV0dXJuIGFkZFByb2ZpbGVCb3g7XHJcbn07XHJcblxyXG5jb25zdCBlZGl0VXNlcm5hbWUgPSAoZSwgcGFyZW50LCBzYXZlQnRuQXJpYSwgZW1wdHlGaWVsZEVycm9yKSA9PiB7XHJcblx0cmVzZXRTdGF0ZU9mRWRpdGluZyhlKTtcclxuXHJcblx0Y29uc3QgZWRpdEJ0biA9IGUudGFyZ2V0O1xyXG5cdGNvbnN0IG5hbWVUb0VkaXQgPSBlZGl0QnRuXHJcblx0XHQuY2xvc2VzdChcIi5tYWluLXByb2ZpbGVzX19wcm9maWxlXCIpXHJcblx0XHQucXVlcnlTZWxlY3RvcihcIi5tYWluLXByb2ZpbGVzX19uYW1lXCIpO1xyXG5cclxuXHRjb25zdCBzYXZlQnRuID0gY3JlYXRlU2F2ZUJ0bihzYXZlQnRuQXJpYSk7XHJcblxyXG5cdGVkaXRCdG4uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcclxuXHRzYXZlQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XHJcblxyXG5cdHBhcmVudC5hcHBlbmQoc2F2ZUJ0bik7XHJcblxyXG5cdG5hbWVUb0VkaXQuZm9jdXMoKTtcclxuXHRuYW1lVG9FZGl0LnNlbGVjdCgpO1xyXG5cdG5hbWVUb0VkaXQucmVtb3ZlQXR0cmlidXRlKFwicmVhZG9ubHlcIik7XHJcblx0bmFtZVRvRWRpdC5jbGFzc0xpc3QuYWRkKFwiZm9jdXNlZFwiKTtcclxuXHJcblx0c2F2ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuXHRcdHNhdmVVc2VybmFtZShlLCBlbXB0eUZpZWxkRXJyb3IpO1xyXG5cdH0pO1xyXG59O1xyXG5cclxuY29uc3Qgc2F2ZVVzZXJuYW1lID0gKGUsIGVtcHR5RmllbGRFcnJvcikgPT4ge1xyXG5cdGNvbnN0IHVzZXJEYXRhID0gZ2V0RGF0YSgpO1xyXG5cdGNvbnN0IGV4aXN0aW5nUHJvZmlsZXMgPSB1c2VyRGF0YT8udXNlclByb2ZpbGVzIHx8IFtdO1xyXG5cclxuXHRjb25zdCBzYXZlQnRuID0gZS50YXJnZXQ7XHJcblx0Y29uc3QgY2xvc2VzdFByb2ZpbGUgPSBzYXZlQnRuLmNsb3Nlc3QoXCIubWFpbi1wcm9maWxlc19fcHJvZmlsZVwiKTtcclxuXHRjb25zdCBjbG9zZXN0UHJvZmlsZUlkID0gY2xvc2VzdFByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5tYWluLXByb2ZpbGVzX19idG5cIilcclxuXHRcdC5kYXRhc2V0LmlkO1xyXG5cdGNvbnN0IGNsb3Nlc3RQcm9maWxlTmFtZSA9IGNsb3Nlc3RQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXHJcblx0XHRcIi5tYWluLXByb2ZpbGVzX19uYW1lXCJcclxuXHQpO1xyXG5cclxuXHRjb25zdCBhbGxFZGl0QnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubWFpbi1wcm9maWxlc19fZWRpdC1uYW1lXCIpO1xyXG5cclxuXHRhbGxFZGl0QnRucy5mb3JFYWNoKChidG4pID0+IGJ0bi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSk7XHJcblxyXG5cdGlmIChjbG9zZXN0UHJvZmlsZU5hbWUudmFsdWUudHJpbSgpID09PSBcIlwiKSB7XHJcblx0XHRhbGxFZGl0QnRucy5mb3JFYWNoKChidG4pID0+IGJ0bi5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKSk7XHJcblx0XHRyZXR1cm4gc2hvd0Vycm9yUG9wdXAoZW1wdHlGaWVsZEVycm9yLCBcIiNGQUMwNDRcIik7XHJcblx0fVxyXG5cclxuXHRjb25zdCB1cGRhdGVkUHJvZmlsZXMgPSB7XHJcblx0XHQuLi5leGlzdGluZ1Byb2ZpbGVzLFxyXG5cdFx0W2Nsb3Nlc3RQcm9maWxlSWRdOiB7XHJcblx0XHRcdC4uLmV4aXN0aW5nUHJvZmlsZXNbY2xvc2VzdFByb2ZpbGVJZF0sXHJcblx0XHRcdG5hbWU6IGNsb3Nlc3RQcm9maWxlTmFtZS52YWx1ZSxcclxuXHRcdH0sXHJcblx0fTtcclxuXHJcblx0c2V0VXNlclByZWZlcmVuY2UoXCJ1c2VyUHJvZmlsZXNcIiwgdXBkYXRlZFByb2ZpbGVzLCB1c2VyRGF0YSk7XHJcblxyXG5cdHJlc2V0U3RhdGVPZkVkaXRpbmcoZSk7XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVTYXZlQnRuID0gKHNhdmVCdG5BcmlhKSA9PiB7XHJcblx0Y29uc3Qgc2F2ZVVzZXJJbmZvQnRuID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiYnV0dG9uXCIsXHJcblx0XHRbXCJtYWluLXByb2ZpbGVzX19zYXZlLW5hbWVcIiwgXCJoaWRkZW5cIl0sXHJcblx0XHR7IFwiYXJpYS1sYWJlbFwiOiBzYXZlQnRuQXJpYSB9XHJcblx0KTtcclxuXHRjb25zdCBzYXZlVXNlckluZm9JY29uID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCBbXCJtYWluLXByb2ZpbGVzX19zYXZlLWljb25cIl0sIHtcclxuXHRcdHdpZHRoOiBcIjI0XCIsXHJcblx0XHRoZWlnaHQ6IFwiMjRcIixcclxuXHRcdGxvYWRpbmc6IFwibGF6eVwiLFxyXG5cdFx0YWx0OiBcIlwiLFxyXG5cdFx0c3JjOiBcIi4vc3JjL2ljb25zL3NhdmUuc3ZnXCIsXHJcblx0fSk7XHJcblxyXG5cdHNhdmVVc2VySW5mb0J0bi5hcHBlbmQoc2F2ZVVzZXJJbmZvSWNvbik7XHJcblxyXG5cdHJldHVybiBzYXZlVXNlckluZm9CdG47XHJcbn07XHJcblxyXG5jb25zdCByZXNldFN0YXRlT2ZFZGl0aW5nID0gKGUpID0+IHtcclxuXHRjb25zdCBmb2N1c2VkTmFtZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvY3VzZWRcIik7XHJcblx0Y29uc3QgYWxsU2F2ZUJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1haW4tcHJvZmlsZXNfX3NhdmUtbmFtZVwiKTtcclxuXHRjb25zdCBhbGxFZGl0QnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubWFpbi1wcm9maWxlc19fZWRpdC1uYW1lXCIpO1xyXG5cclxuXHRmb2N1c2VkTmFtZXMuZm9yRWFjaCgoZWwpID0+IHtcclxuXHRcdGVsLnNldEF0dHJpYnV0ZShcInJlYWRvbmx5XCIsIHRydWUpO1xyXG5cdFx0ZWwuY2xhc3NMaXN0LnJlbW92ZShcImZvY3VzZWRcIik7XHJcblx0XHRlbC5ibHVyKCk7XHJcblx0fSk7XHJcblx0YWxsU2F2ZUJ0bnMuZm9yRWFjaCgoYnRuKSA9PiBidG4uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKSk7XHJcblx0YWxsRWRpdEJ0bnMuZm9yRWFjaCgoYnRuKSA9PiBidG4uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKSk7XHJcbn07XHJcblxyXG5sZXQgcG9wdXBWaXNpYmxlID0gZmFsc2U7XHJcbmV4cG9ydCBjb25zdCBzaG93RXJyb3JQb3B1cCA9ICh0ZXh0LCBjb2xvcikgPT4ge1xyXG5cdGlmIChwb3B1cFZpc2libGUpIHJldHVybjtcclxuXHRwb3B1cFZpc2libGUgPSB0cnVlO1xyXG5cclxuXHRjb25zdCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xyXG5cdGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGFpbmVyXCIpO1xyXG5cclxuXHRjb25zdCBwb3B1cCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1wiZXJyb3ItcG9wdXBcIl0pO1xyXG5cdGNvbnN0IHBvcHVwRXJyb3IgPSBjcmVhdGVFbGVtZW50KFwicFwiLCBbXCJlcnJvci1wb3B1cF9fdGV4dFwiXSk7XHJcblxyXG5cdHBvcHVwRXJyb3IudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG5cdHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoXCItLWVycm9yVHh0Q29sb3JcIiwgY29sb3IpO1xyXG5cclxuXHRwb3B1cC5hcHBlbmQocG9wdXBFcnJvcik7XHJcblx0Y29udGFpbmVyLmFwcGVuZChwb3B1cCk7XHJcblxyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0cG9wdXAuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcclxuXHR9LCAyMDAwKTtcclxuXHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdHBvcHVwLnJlbW92ZSgpO1xyXG5cdFx0cG9wdXBWaXNpYmxlID0gZmFsc2U7XHJcblx0fSwgSElERV9QT1BVUF9USU1FKTtcclxufTtcclxuXHJcbmNvbnN0IHJlbW92ZVVzZXIgPSAoZSkgPT4ge1xyXG5cdGNvbnN0IHVzZXJEYXRhID0gZ2V0RGF0YSgpO1xyXG5cdGNvbnN0IHVzZXJQcm9maWxlcyA9IHVzZXJEYXRhPy51c2VyUHJvZmlsZXM7XHJcblx0Y29uc3QgYWxsRWRpdEJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1haW4tcHJvZmlsZXNfX2VkaXQtbmFtZVwiKTtcclxuXHJcblx0Y29uc3QgZGVsZXRlQnRuID0gZS50YXJnZXQ7XHJcblx0Y29uc3QgY2xvc2VzdFByb2ZpbGUgPSBkZWxldGVCdG4uY2xvc2VzdChcIi5tYWluLXByb2ZpbGVzX19wcm9maWxlXCIpO1xyXG5cdGNvbnN0IGNsb3Nlc3RQcm9maWxlQnRuID0gY2xvc2VzdFByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5tYWluLXByb2ZpbGVzX19idG5cIik7XHJcblx0YWxsRWRpdEJ0bnMuZm9yRWFjaCgoYnRuKSA9PiBidG4ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIikpO1xyXG5cclxuXHRkZWxldGUgdXNlclByb2ZpbGVzW2Nsb3Nlc3RQcm9maWxlQnRuLmRhdGFzZXQuaWRdO1xyXG5cclxuXHRzZXRVc2VyUHJlZmVyZW5jZShcInVzZXJQcm9maWxlc1wiLCB1c2VyUHJvZmlsZXMsIHVzZXJEYXRhKTtcclxuXHJcblx0Y2xvc2VzdFByb2ZpbGUuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcclxuXHJcblx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRjbG9zZXN0UHJvZmlsZS5yZW1vdmUoKTtcclxuXHR9LCA0MDApO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZUJyb3dzZVBhZ2UgPSAoe1xyXG5cdGhlYWRlcjoge1xyXG5cdFx0YWx0OiB7IGxvZ28gfSxcclxuXHRcdGFyaWE6IHsgbG9nb0xpbmsgfSxcclxuXHR9LFxyXG5cdGJyb3dzZVBhZ2U6IHtcclxuXHRcdG5hbWVzOiB7IGZpbG1MaW5rLCBzZXJpZXNMaW5rLCBteUxpc3RMaW5rLCBzZWFyY2hMaW5rIH0sXHJcblx0XHRhcmlhOiB7IHVzZXJCdXR0b24gfSxcclxuXHR9LFxyXG59KSA9PiB7XHJcblx0Y29uc3QgaGVhZGVyID0gY3JlYXRlRWxlbWVudChcImhlYWRlclwiLCBbXCJicm93c2UtaGVhZGVyXCJdKTtcclxuXHRjb25zdCBsb2dvTWFpbkxpbmsgPSBjcmVhdGVFbGVtZW50KFwiYVwiLCBbXCJicm93c2UtaGVhZGVyX19sb2dvXCJdLCB7XHJcblx0XHRcImFyaWEtbGFiZWxcIjogbG9nb0xpbmssXHJcblx0XHRocmVmOiBcIlwiLFxyXG5cdH0pO1xyXG5cdGNvbnN0IGxvZ29NYWluSW1nID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCBbXCJicm93c2UtaGVhZGVyX19sb2dvLWltZ1wiXSwge1xyXG5cdFx0YWx0OiBsb2dvLFxyXG5cdFx0c3JjOiBcIi4vc3JjL2ljb25zL2xvZ28uc3ZnXCIsXHJcblx0fSk7XHJcblx0Y29uc3QgbWFpblRpdGxlID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgW1wiYnJvd3NlLWhlYWRlcl9fbG9nby10ZXh0XCJdKTtcclxuXHJcblx0bWFpblRpdGxlLnRleHRDb250ZW50ID0gXCJTdHJlYW1cIjtcclxuXHJcblx0bG9nb01haW5MaW5rLmFwcGVuZChsb2dvTWFpbkltZywgbWFpblRpdGxlKTtcclxuXHRoZWFkZXIuYXBwZW5kKFxyXG5cdFx0bG9nb01haW5MaW5rLFxyXG5cdFx0Y3JlYXRlQnJvd3Nlck5hdihmaWxtTGluaywgc2VyaWVzTGluaywgbXlMaXN0TGluaywgc2VhcmNoTGluayksXHJcblx0XHRjcmVhdGVVc2VyQnRuKHVzZXJCdXR0b24pXHJcblx0KTtcclxuXHJcblx0cmV0dXJuIGhlYWRlcjtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZUJyb3dzZXJOYXYgPSAoZmlsbUxpbmssIHNlcmllc0xpbmssIG15TGlzdExpbmssIHNlYXJjaExpbmspID0+IHtcclxuXHRjb25zdCBuYXYgPSBjcmVhdGVFbGVtZW50KFwibmF2XCIsIFtcImJyb3dzZS1oZWFkZXJfX25hdlwiXSk7XHJcblx0Y29uc3QgbmF2TGlua3MgPSBjcmVhdGVFbGVtZW50KFwidWxcIiwgW1wiYnJvd3NlLWhlYWRlcl9fbGlua3NcIl0pO1xyXG5cclxuXHRjb25zdCBsaW5rTmFtZXMgPSBbXHJcblx0XHR7XHJcblx0XHRcdG5hbWU6IGZpbG1MaW5rLFxyXG5cdFx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvZmlsbS1pY29uLnN2Z1wiLFxyXG5cdFx0fSxcclxuXHRcdHsgbmFtZTogc2VyaWVzTGluaywgc3JjOiBcIi4vc3JjL2ljb25zL3Nlcmllcy1pY29uLnN2Z1wiIH0sXHJcblx0XHR7XHJcblx0XHRcdG5hbWU6IG15TGlzdExpbmssXHJcblx0XHRcdHNyYzogXCIuL3NyYy9pY29ucy9saXN0LWljb24uc3ZnXCIsXHJcblx0XHR9LFxyXG5cdFx0eyBuYW1lOiBzZWFyY2hMaW5rLCBzcmM6IFwiLi9zcmMvaWNvbnMvc2VhcmNoLWljb24uc3ZnXCIgfSxcclxuXHRdO1xyXG5cclxuXHRsaW5rTmFtZXMuZm9yRWFjaCgobGluaykgPT4ge1xyXG5cdFx0Y29uc3QgbGlzdEl0ZW0gPSBjcmVhdGVFbGVtZW50KFwibGlcIiwgW1wiYnJvd3NlLWhlYWRlcl9faXRlbVwiXSk7XHJcblx0XHRjb25zdCBsaW5rRWwgPSBjcmVhdGVFbGVtZW50KFwiYVwiLCBbXCJicm93c2UtaGVhZGVyX19saW5rXCJdLCB7IGhyZWY6IFwiXCIgfSk7XHJcblx0XHRjb25zdCBpY29uID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCBbXCJicm93c2UtaGVhZGVyX19saW5rLWljb25cIl0sIHtcclxuXHRcdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdFx0aGVpZ2h0OiBcIjI0XCIsXHJcblx0XHRcdGxvYWRpbmc6IFwibGF6eVwiLFxyXG5cdFx0XHRzcmM6IGxpbmsuc3JjLFxyXG5cdFx0XHRhbHQ6IFwiXCIsXHJcblx0XHR9KTtcclxuXHRcdGNvbnN0IHRleHQgPSBjcmVhdGVFbGVtZW50KFwic3BhblwiLCBbXCJicm93c2UtaGVhZGVyX19saW5rLXRleHRcIl0pO1xyXG5cclxuXHRcdHRleHQudGV4dENvbnRlbnQgPSBsaW5rLm5hbWU7XHJcblxyXG5cdFx0bGlua0VsLmFwcGVuZChpY29uLCB0ZXh0KTtcclxuXHRcdGxpc3RJdGVtLmFwcGVuZChsaW5rRWwpO1xyXG5cclxuXHRcdG5hdkxpbmtzLmFwcGVuZChsaXN0SXRlbSk7XHJcblx0fSk7XHJcblxyXG5cdG5hdi5hcHBlbmQobmF2TGlua3MpO1xyXG5cclxuXHRyZXR1cm4gbmF2O1xyXG59O1xyXG5cclxuY29uc3QgY3JlYXRlVXNlckJ0biA9ICh1c2VyQnRuQXJpYSkgPT4ge1xyXG5cdGNvbnN0IHVzZXJCb3ggPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImJyb3dzZS1oZWFkZXJfX3VzZXItYm94XCJdKTtcclxuXHRjb25zdCB1c2VyQnRuID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBbXCJicm93c2UtaGVhZGVyX191c2VyXCJdLCB7XHJcblx0XHRcImFyaWEtbGFiZWxcIjogdXNlckJ0bkFyaWEsXHJcblx0fSk7XHJcblx0Y29uc3QgdXNlckljb24gPSBjcmVhdGVFbGVtZW50KFwiaW1nXCIsIFtcImJyb3dzZS1oZWFkZXJfX3VzZXItaWNvblwiXSwge1xyXG5cdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdGhlaWdodDogXCIyNFwiLFxyXG5cdFx0bG9hZGluZzogXCJsYXp5XCIsXHJcblx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvdXNlci1pY29uLnN2Z1wiLFxyXG5cdFx0YWx0OiBcIlwiLFxyXG5cdH0pO1xyXG5cclxuXHR1c2VyQnRuLmFwcGVuZCh1c2VySWNvbik7XHJcblx0dXNlckJveC5hcHBlbmQodXNlckJ0bik7XHJcblxyXG5cdHJldHVybiB1c2VyQm94O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZU1haW5IZXJvU2VjdGlvbiA9IChtb3ZpZXMsIHRyYW5zbGF0aW9ucywgcGFyZW50KSA9PiB7XHJcblx0Y29uc3QgYnJvd3NlTWFpbiA9IGNyZWF0ZUVsZW1lbnQoXCJtYWluXCIsIFtcImJyb3dzZS1tYWluXCJdKTtcclxuXHRjb25zdCBicm93c2VNYWluU2VjdGlvbiA9IGNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIsIFtcclxuXHRcdFwiYnJvd3NlLW1haW5fX2hlcm8tc2VjdGlvblwiLFxyXG5cdF0pO1xyXG5cdGNvbnN0IGltYWdlc0Nhcm91c2VsbCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1xyXG5cdFx0XCJicm93c2UtbWFpbl9faW1hZ2UtY2Fyb3VzZWxsXCIsXHJcblx0XSk7XHJcblx0Y29uc3QgaW1hZ2VzSW5zaWRlU2xpZGVyID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJicm93c2UtbWFpbl9faW1hZ2VzXCJdKTtcclxuXHRtb3ZpZXMuZm9yRWFjaCgoeyBpZCwgdGl0bGUsIG92ZXJ2aWV3ID0gXCJcIiwgYmFja2Ryb3BfcGF0aCB9KSA9PiB7XHJcblx0XHRjb25zdCBpbWdTcmMgPSBiYWNrZHJvcF9wYXRoO1xyXG5cdFx0Y29uc3QgaW1hZ2VCb3ggPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImJyb3dzZS1tYWluX19pbWctYm94XCJdKTtcclxuXHRcdGNvbnN0IGltYWdlID0gY3JlYXRlRWxlbWVudChcImltZ1wiLCBbXCJicm93c2UtbWFpbl9faW1nXCJdLCB7XHJcblx0XHRcdGFsdDogYCR7dHJhbnNsYXRpb25zPy5icm93c2VQYWdlPy5jYXJvdXNlbGxJbWFnZXM/LmFyaWEuY2Fyb3VzZWxsSW1hZ2VBbHR9ICR7dGl0bGV9YCxcclxuXHRcdFx0c3JjOiBpbWdTcmNcclxuXHRcdFx0XHQ/IGdldEltYWdlVXJsKGltZ1NyYywgXCJvcmlnaW5hbFwiKVxyXG5cdFx0XHRcdDogXCIuL2Rpc3QvaW1nL2ltZy1wbGFjZWhvbGRlci5zdmdcIixcclxuXHRcdH0pO1xyXG5cdFx0Y29uc3QgdGV4dEJveCA9IGNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgW1wiYnJvd3NlLW1haW5fX3RleHQtYm94XCJdKTtcclxuXHRcdGNvbnN0IGZpbG1UaXRsZSA9IGNyZWF0ZUVsZW1lbnQoXCJoMlwiLCBbXCJicm93c2UtbWFpbl9fY2Fyb3VzZWxsLXRpdGxlXCJdKTtcclxuXHRcdGNvbnN0IGZpbG1JbmZvID0gY3JlYXRlRWxlbWVudChcInBcIiwgW1wiYnJvd3NlLW1haW5fX2Nhcm91c2VsbC1vdmVydmlld1wiXSwge1xyXG5cdFx0XHR0YWJpbmRleDogLTEsXHJcblx0XHR9KTtcclxuXHJcblx0XHRmaWxtVGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuXHRcdGZpbG1JbmZvLnRleHRDb250ZW50ID0gb3ZlcnZpZXc7XHJcblxyXG5cdFx0dGV4dEJveC5hcHBlbmQoZmlsbVRpdGxlLCBmaWxtSW5mbywgY3JlYXRlQWN0aW9uQnV0dG9ucyhpZCwgdHJhbnNsYXRpb25zKSk7XHJcblx0XHRpbWFnZUJveC5hcHBlbmQoaW1hZ2UsIHRleHRCb3gpO1xyXG5cdFx0aW1hZ2VzSW5zaWRlU2xpZGVyLmFwcGVuZChpbWFnZUJveCk7XHJcblx0XHRpbWFnZXNDYXJvdXNlbGwuYXBwZW5kKGltYWdlc0luc2lkZVNsaWRlcik7XHJcblxyXG5cdFx0YnJvd3NlTWFpblNlY3Rpb24uYXBwZW5kKGltYWdlc0Nhcm91c2VsbCk7XHJcblx0XHRicm93c2VNYWluLmFwcGVuZChicm93c2VNYWluU2VjdGlvbik7XHJcblx0fSk7XHJcblx0cGFyZW50LmFwcGVuZChicm93c2VNYWluKTtcclxuXHJcblx0aW1hZ2VzQ2Fyb3VzZWxsLmFwcGVuZChjcmVhdGVDYXJvdXNlbGxDb250cm9scyhtb3ZpZXMsIHRyYW5zbGF0aW9ucykpO1xyXG59O1xyXG5jb25zdCBjcmVhdGVBY3Rpb25CdXR0b25zID0gKFxyXG5cdGlkLFxyXG5cdHtcclxuXHRcdGJyb3dzZVBhZ2U6IHtcclxuXHRcdFx0YWN0aW9uQnRuczogeyB0cmFpbGVyQnRuVGV4dCwgbW9yZUluZm9CdG5UZXh0IH0sXHJcblx0XHR9LFxyXG5cdH1cclxuKSA9PiB7XHJcblx0Y29uc3QgYWN0aW9uQnRuc1BhbmVsID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJicm93c2UtbWFpbl9fYWN0aW9uLWJ0bnNcIl0pO1xyXG5cdGNvbnN0IHNob3dUcmFpbGVyQnRuID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBbXCJicm93c2UtbWFpbl9fdHJhaWxlci1idG5cIl0sIHtcclxuXHRcdFwiZGF0YS10cmFpbGVyXCI6IGlkLFxyXG5cdH0pO1xyXG5cdGNvbnN0IHNob3dUcmFpbGVyVGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcImJyb3dzZS1tYWluX19zZWUtdHJhaWxlclwiXSk7XHJcblx0Y29uc3Qgc2VlTW9yZUJ0biA9IGNyZWF0ZUVsZW1lbnQoXCJhXCIsIFtcImJyb3dzZS1tYWluX19zZWUtbW9yZS1idG5cIl0sIHtcclxuXHRcdFwiZGF0YS1tb3ZpZVwiOiBpZCxcclxuXHRcdGhyZWY6IFwiXCIsXHJcblx0fSk7XHJcblxyXG5cdHNob3dUcmFpbGVyVGV4dC50ZXh0Q29udGVudCA9IHRyYWlsZXJCdG5UZXh0O1xyXG5cdHNlZU1vcmVCdG4udGV4dENvbnRlbnQgPSBtb3JlSW5mb0J0blRleHQ7XHJcblxyXG5cdHNob3dUcmFpbGVyQnRuLmlubmVySFRNTCA9IGA8c3ZnIGNsYXNzPVwiYnJvd3NlLW1haW5fX3RyYWlsZXItcGxheS1pY29uXCJcclxuXHR4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCJcclxuXHR2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIiMwMDBcIiBzdHJva2U9XCIjMDAwXCIgc3Ryb2tlLXdpZHRoPVwiMlwiXHJcblx0c3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCJcclxuXHRjbGFzcz1cImZlYXRoZXIgZmVhdGhlci1wbGF5XCI+XHJcblx0PHBvbHlnb24gcG9pbnRzPVwiNSAzIDE5IDEyIDUgMjEgNSAzXCI+PC9wb2x5Z29uPlxyXG5cdDwvc3ZnPmA7XHJcblxyXG5cdHNob3dUcmFpbGVyQnRuLmFwcGVuZChzaG93VHJhaWxlclRleHQpO1xyXG5cclxuXHRhY3Rpb25CdG5zUGFuZWwuYXBwZW5kKHNob3dUcmFpbGVyQnRuLCBzZWVNb3JlQnRuKTtcclxuXHJcblx0cmV0dXJuIGFjdGlvbkJ0bnNQYW5lbDtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZUNhcm91c2VsbENvbnRyb2xzID0gKFxyXG5cdG1vdmllcyxcclxuXHR7XHJcblx0XHRicm93c2VQYWdlOiB7XHJcblx0XHRcdGNhcm91c2VsbEJ0bnM6IHsgYXJpYSB9LFxyXG5cdFx0fSxcclxuXHR9XHJcbikgPT4ge1xyXG5cdGNvbnN0IGNhcm91c2VsbENvbnRyb2xzID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXHJcblx0XHRcImJyb3dzZS1tYWluX19jYXJvdXNlbGwtY29udHJvbHNcIixcclxuXHRdKTtcclxuXHJcblx0bW92aWVzLmZvckVhY2goKG1vdmllLCBpbmRleCkgPT4ge1xyXG5cdFx0Y29uc3QgY2Fyb3VzZWxsQnRuID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBbXCJicm93c2UtbWFpbl9fYnRuXCJdLCB7XHJcblx0XHRcdFwiZGF0YS1pbWdcIjogaW5kZXgsXHJcblx0XHRcdFwiYXJpYS1sYWJlbFwiOiBgJHthcmlhfSAke2luZGV4fWAsXHJcblx0XHR9KTtcclxuXHRcdGNvbnN0IGNhcm91c2VsbEJ0blByb2dyZXNzQmFyID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgW1xyXG5cdFx0XHRcImJyb3dzZS1tYWluX19wcm9ncmVzcy1iYXJcIixcclxuXHRcdF0pO1xyXG5cclxuXHRcdGNhcm91c2VsbEJ0bi5hcHBlbmQoY2Fyb3VzZWxsQnRuUHJvZ3Jlc3NCYXIpO1xyXG5cclxuXHRcdGNhcm91c2VsbENvbnRyb2xzLmFwcGVuZChjYXJvdXNlbGxCdG4pO1xyXG5cdH0pO1xyXG5cdHJldHVybiBjYXJvdXNlbGxDb250cm9scztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVGaWxtU2xpZGVyID0gKGZpbG1zLCB0cmFuc2xhdGlvbnMsIGluZGV4LCB0aXRsZSkgPT4ge1xyXG5cdGNvbnN0IHByb3BlckZpbG1zID0gZmlsbXNbaW5kZXhdPy5yZXN1bHRzIHx8IFtdO1xyXG5cdGlmICghcHJvcGVyRmlsbXMubGVuZ3RoKSB7XHJcblx0XHRjb25zb2xlLmVycm9yKGBObyBmaWxtcyBmb3VuZCBmb3IgaW5kZXggJHtpbmRleH1gKTtcclxuXHRcdHNob3dFcnJvclBvcHVwKGBObyBmaWxtcyBmb3VuZCBmb3IgaW5kZXggJHtpbmRleH1gLCBcIiNkYzRhMzRcIik7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zdCBicm93c2VTZWN0aW9uID0gY3JlYXRlRWxlbWVudChcInNlY3Rpb25cIiwgW1wiYnJvd3NlLXNlY3Rpb25cIl0pO1xyXG5cdGNvbnN0IHNlY3Rpb25UaXRsZSA9IGNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBbXCJicm93c2Utc2VjdGlvbl9fdGl0bGVcIl0pO1xyXG5cdGNvbnN0IHNlY3Rpb25TbGlkZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImJyb3dzZS1zZWN0aW9uX19zbGlkZXJcIl0sIHtcclxuXHRcdFwiZGF0YS1pbmRleFwiOiAwLFxyXG5cdH0pO1xyXG5cdGNvbnN0IHNlY3Rpb25JbWFnZXMgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImJyb3dzZS1zZWN0aW9uX19zbGlkZXItaW1hZ2VzXCJdKTtcclxuXHJcblx0Y29uc3Qgc2hvd1ByZXZTbGlkZUJ0biA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImJ1dHRvblwiLFxyXG5cdFx0W1wiYnJvd3NlLXNlY3Rpb25fX3NsaWRlci1idG5cIiwgXCJicm93c2Utc2VjdGlvbl9fc2xpZGVyLXByZXYtYnRuXCJdLFxyXG5cdFx0e1xyXG5cdFx0XHRcImFyaWEtbGFiZWxcIjogdHJhbnNsYXRpb25zPy5icm93c2VTZWN0aW9uPy5hcmlhPy5zaG93UHJldlNsaWRlQnRuLFxyXG5cdFx0fVxyXG5cdCk7XHJcblx0Y29uc3Qgc2hvd05leHRTbGlkZUJ0biA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcImJ1dHRvblwiLFxyXG5cdFx0W1wiYnJvd3NlLXNlY3Rpb25fX3NsaWRlci1idG5cIiwgXCJicm93c2Utc2VjdGlvbl9fc2xpZGVyLW5leHQtYnRuXCJdLFxyXG5cdFx0eyBcImFyaWEtbGFiZWxcIjogdHJhbnNsYXRpb25zPy5icm93c2VTZWN0aW9uPy5hcmlhPy5zaG93TmV4dFNsaWRlQnRuIH1cclxuXHQpO1xyXG5cdGNvbnN0IHNob3dQcmV2U2xpZGVJY29uID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiaW1nXCIsXHJcblx0XHRbXCJicm93c2Utc2VjdGlvbl9fc2xpZGVyLWJ0bi1pY29uXCJdLFxyXG5cdFx0e1xyXG5cdFx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvY2hldnJvbi1sZWZ0LnN2Z1wiLFxyXG5cdFx0XHR3aWR0aDogXCIyNFwiLFxyXG5cdFx0XHRoZWlnaHQ6IFwiMjRcIixcclxuXHRcdFx0bG9hZGluZzogXCJsYXp5XCIsXHJcblx0XHRcdGFsdDogXCJcIixcclxuXHRcdH1cclxuXHQpO1xyXG5cdGNvbnN0IHNob3dOZXh0U2xpZGVJY29uID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiaW1nXCIsXHJcblx0XHRbXCJicm93c2Utc2VjdGlvbl9fc2xpZGVyLWJ0bi1pY29uXCJdLFxyXG5cdFx0e1xyXG5cdFx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvY2hldnJvbi1yaWdodC5zdmdcIixcclxuXHRcdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdFx0aGVpZ2h0OiBcIjI0XCIsXHJcblx0XHRcdGxvYWRpbmc6IFwibGF6eVwiLFxyXG5cdFx0XHRhbHQ6IFwiXCIsXHJcblx0XHR9XHJcblx0KTtcclxuXHJcblx0c2VjdGlvblRpdGxlLnRleHRDb250ZW50ID0gdGl0bGU7XHJcblxyXG5cdHNob3dOZXh0U2xpZGVCdG4uYXBwZW5kKHNob3dOZXh0U2xpZGVJY29uKTtcclxuXHRzaG93UHJldlNsaWRlQnRuLmFwcGVuZChzaG93UHJldlNsaWRlSWNvbik7XHJcblxyXG5cdGNyZWF0ZUZpbG1Qb3N0ZXJzKHByb3BlckZpbG1zLCB0cmFuc2xhdGlvbnMsIHNlY3Rpb25JbWFnZXMpO1xyXG5cclxuXHRzZWN0aW9uU2xpZGVyLmFwcGVuZChzZWN0aW9uSW1hZ2VzLCBzaG93UHJldlNsaWRlQnRuLCBzaG93TmV4dFNsaWRlQnRuKTtcclxuXHRicm93c2VTZWN0aW9uLmFwcGVuZChzZWN0aW9uVGl0bGUsIHNlY3Rpb25TbGlkZXIpO1xyXG5cclxuXHRyZXR1cm4gYnJvd3NlU2VjdGlvbjtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZUZpbG1Qb3N0ZXJzID0gKHByb3BlckZpbG1zLCB0cmFuc2xhdGlvbnMsIHBhcmVudCkgPT4ge1xyXG5cdHByb3BlckZpbG1zLmZvckVhY2goKHsgaWQsIHRpdGxlLCBwb3N0ZXJfcGF0aCB9KSA9PiB7XHJcblx0XHRjb25zdCBpbWdTcmMgPSBwb3N0ZXJfcGF0aDtcclxuXHRcdGNvbnN0IHNlY3Rpb25Cb3ggPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcImJyb3dzZS1zZWN0aW9uX19zbGlkZXItYm94XCJdKTtcclxuXHJcblx0XHRjb25zdCBzZWN0aW9uTGluayA9IGNyZWF0ZUVsZW1lbnQoXHJcblx0XHRcdFwiYVwiLFxyXG5cdFx0XHRbXCJicm93c2Utc2VjdGlvbl9fc2xpZGVyLWltZy1saW5rXCJdLFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0aHJlZjogXCJicm93c2UuaHRtbFwiLFxyXG5cdFx0XHRcdFwiYXJpYS1sYWJlbFwiOiB0cmFuc2xhdGlvbnM/LmJyb3dzZVNlY3Rpb24/LmFyaWE/LnNob3dNb3JlSW5mb0Fib3V0RmlsbSxcclxuXHRcdFx0fVxyXG5cdFx0KTtcclxuXHRcdGNvbnN0IHNlY3Rpb25GaWxtUG9zdGVyID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFx0XCJpbWdcIixcclxuXHRcdFx0W1wiYnJvd3NlLXNlY3Rpb25fX3NsaWRlci1pbWdcIl0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRhbHQ6IGAke3RyYW5zbGF0aW9ucz8uYnJvd3NlUGFnZT8uY2Fyb3VzZWxsSW1hZ2VzPy5hcmlhPy5jYXJvdXNlbGxJbWFnZUFsdH0gJHt0aXRsZX1gLFxyXG5cdFx0XHRcdGxvYWRpbmc6IFwibGF6eVwiLFxyXG5cdFx0XHRcdHdpZHRoOiBcIlwiLFxyXG5cdFx0XHRcdGhlaWdodDogXCJcIixcclxuXHRcdFx0XHRzcmM6IGltZ1NyY1xyXG5cdFx0XHRcdFx0PyBnZXRJbWFnZVVybChpbWdTcmMsIFwib3JpZ2luYWxcIilcclxuXHRcdFx0XHRcdDogXCIuL2Rpc3QvaW1nL2ltZy1wbGFjZWhvbGRlci5zdmdcIixcclxuXHRcdFx0fVxyXG5cdFx0KTtcclxuXHRcdGNvbnN0IHNlY3Rpb25BZGRUb0xpc3RCdG4gPSBjcmVhdGVFbGVtZW50KFxyXG5cdFx0XHRcImJ1dHRvblwiLFxyXG5cdFx0XHRbXCJicm93c2Utc2VjdGlvbl9fYWRkLXRvLWxpc3QtYnRuXCJdLFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0XCJhcmlhLWxhYmVsXCI6IHRyYW5zbGF0aW9ucz8uYnJvd3NlU2VjdGlvbj8uYXJpYT8uYWRkVG9MaXN0QnRuLFxyXG5cdFx0XHRcdFwiZGF0YS1tb3ZpZVwiOiBpZCxcclxuXHRcdFx0fVxyXG5cdFx0KTtcclxuXHRcdGNvbnN0IHNlY3Rpb25BZGRUb0xpc3RJY29uID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFx0XCJpbWdcIixcclxuXHRcdFx0W1wiYnJvd3NlLXNlY3Rpb25fX2FkZC10by1saXN0LWljb25cIl0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRzcmM6IFwiLi9zcmMvaWNvbnMvYWRkLXByb2ZpbGUuc3ZnXCIsXHJcblx0XHRcdFx0d2lkdGg6IFwiMjRcIixcclxuXHRcdFx0XHRoZWlnaHQ6IFwiMjRcIixcclxuXHRcdFx0XHRsb2FkaW5nOiBcImxhenlcIixcclxuXHRcdFx0XHRhbHQ6IFwiXCIsXHJcblx0XHRcdH1cclxuXHRcdCk7XHJcblx0XHRjb25zdCBzZWN0aW9uVG9vbHRpcCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcImJyb3dzZS1zZWN0aW9uX190b29sdGlwXCJdKTtcclxuXHJcblx0XHRzZWN0aW9uVG9vbHRpcC50ZXh0Q29udGVudCA9IHRyYW5zbGF0aW9ucy5icm93c2VTZWN0aW9uLmluZm87XHJcblxyXG5cdFx0c2VjdGlvbkFkZFRvTGlzdEJ0bi5hcHBlbmQoc2VjdGlvbkFkZFRvTGlzdEljb24pO1xyXG5cclxuXHRcdHNlY3Rpb25MaW5rLmFwcGVuZChzZWN0aW9uRmlsbVBvc3Rlcik7XHJcblxyXG5cdFx0c2VjdGlvbkJveC5hcHBlbmQoc2VjdGlvbkxpbmssIHNlY3Rpb25BZGRUb0xpc3RCdG4sIHNlY3Rpb25Ub29sdGlwKTtcclxuXHJcblx0XHRwYXJlbnQuYXBwZW5kKHNlY3Rpb25Cb3gpO1xyXG5cdH0pO1xyXG59O1xyXG4iXX0=
