import{verifyCredentials}from"./firebase-auth.min.js";import{createElement,getImageUrl}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const HIDE_POPUP_TIME=2500;export const getData=()=>{try{const e=localStorage.getItem("userData");if(!e)return null;const t=JSON.parse(e);if("object"!=typeof t||null===t)throw showErrorPopup("Invalid user data. Resetting storage.","#dc4a34"),new Error("Invalid data structure");return t}catch{return localStorage.removeItem("userData"),showErrorPopup("Error accessing user data. Please try again.","#dc4a34"),{}}};const getCurrentDate=()=>(new Date).getFullYear();export const createFooter=({header:{alt:{logo:e}}})=>{const t=getCurrentDate(),r=createElement("footer",["browse-footer"]),a=createElement("span",["browse-footer__logo"]),n=createElement("img",["browse-footer__img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),o=createElement("p",["browse-footer__info"]);return a.textContent="Stream",a.prepend(n),o.textContent=`Â©${t} Stream corporation | All rights reserved.`,r.append(a,o),r};export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:r}}},a,n,o,s)=>{const i=createElement("header",["header"]),l=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",l.append(c,d),i.append(l);const p=createElement("button",["login-header__lang-select"],{"aria-label":`${r}`}),m=createElement("span",["login-header__lang-platform-lang"]),_=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),g=createElement("ul",["login-header__lang-list"]);for(let e=0;e<a;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),r=Object.keys(n)[e],a=Object.values(n)[e];t.dataset.lang=r,t.textContent=a,t.style.animationDelay=100*e+"ms",g.append(t)}return m.textContent=n[o],p.addEventListener("click",e=>{s.call(p,e,m)}),p.append(m,_,g),i.append(p),i};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:r,button:a},placeholder:{username:n,password:o}}})=>{const s=createElement("main",["main"]),i=createElement("div",["wrapper"]),l=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),p=createElement("p",["main__text"]),m=createElement("form",["main__form"]),_=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:n}),g=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),u=createElement("button",["main__form-button"],{type:"submit"}),h=createElement("span",["main__form-button-text"]),b=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,p.textContent=r,h.textContent=a,l.append(c,d),u.append(h),m.append(_,g,u,b),i.append(l,p,m),s.append(i),u.addEventListener("click",e=>{const t=getData(),r=t?.preferredLanguage;r||setUserPreference("preferredLanguage","pl",t),handleLoginValidation(e,_,g,translations.main.text.errorRequired,translations.main.text.errorInvalid,b).then(e=>{e||(setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html")})}),s};const handleLoginValidation=async(e,t,r,a,n,o)=>{if(e.preventDefault(),""===t.value.trim()||""===r.value.trim())return o.classList.add("visible"),o.textContent=a,a;const s=t.value.trim(),i=r.value.trim();e.target.disabled=!0,e.target.append(showSmallLoader()),o.classList.remove("visible");const l=await verifyCredentials(s,i);return hideSmallLoader(),e.target.disabled=!1,l.success?null:(o.classList.add("visible"),o.textContent=n,n)};export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:r,userProfileBtn:a,userBtnCustomize:n,removeUserInfo:o}},errorPopup:{text:{maxProfiles:s,emptyField:i}}})=>{const l=getData(),c=l?.userProfiles,d=document.querySelector(".container");d.append(showBigLoader()),setTimeout(()=>{const l=createElement("main",["main-profiles"]),p=createElement("div",["wrapper"]),m=createElement("h1",["main__title","main-profiles__title"]),_=createElement("div",["main-profiles__box"]);if(m.textContent=e,c&&0!==Object.keys(c).length)for(const e in c)_.append(createProfile(a,n,n,i,o,e,c[e]));_.append(createProfileAddBtn(r,t,a,_,n,n,s,i,o)),p.append(m,_),l.append(p),d.append(l),hideBigLoader()},500)};const createProfile=(e,t,r,a,n,o=null,s=null)=>{const i=getData(),l=i?.userProfiles||{};if(null===i)return showErrorPopup("An unexpected error occurred","#dc4a34"),void setTimeout(()=>{window.location.reload()},2500);let c,d,p;const m=["#dc4a34","#062E63","#FAC044"];if(o){d=o,p=s.name;c=m[parseInt(d.split("-").pop())-1]}else{if(Object.keys(l).length>=3)return;let e=1;for(;l[`user-profile-${e}`];)e++;d=`user-profile-${e}`,p=`Handsome User ${e}`,c=m[e-1]}const _=createElement("div",["main-profiles__profile"]),g=createElement("div",["main-profiles__avatar"]),u=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":d}),h=createElement("div",["main-profiles__user-info"]),b=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:p}),f=createElement("span",["name-border"]),w=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),E=createElement("button",["main-profiles__remove-user"],{"aria-label":n}),v=createElement("img",["main-profiles__remove-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/remove-profile-icon.svg"}),x=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});if(u.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n    <circle cx="70" cy="70" r="8" fill="white" />\n    <circle cx="130" cy="70" r="8" fill="white" />\n    <path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n    fill="transparent" stroke-linecap="round" />\n    </svg>',u.style.backgroundColor=c,g.append(u),w.append(x),E.append(v),h.append(b,f,w,E),_.append(g,h),!o){const e={...l,[d]:{name:p}};setUserPreference("userProfiles",e,i)}return w.addEventListener("click",e=>{editUsername(e,h,r,a)}),E.addEventListener("click",e=>{removeUser(e)}),b.addEventListener("keydown",e=>{"Enter"===e.key&&saveUsername(e,a)}),u.addEventListener("click",e=>setCurrentProfile(e)),_.classList.add("visible"),_},setCurrentProfile=e=>{const t=getData(),r=e.target.dataset.id;setUserPreference("currentProfile",r,t),window.location.href="browse.html"},createProfileAddBtn=(e,t,r,a,n,o,s,i,l)=>{const c=createElement("div",["main-profiles__add-profile"]),d=createElement("div",["main-profiles__avatar"]),p=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),m=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),_=createElement("span",["main-profiles__name"]);return _.textContent=t,p.append(m),d.append(p),c.append(d,_),p.addEventListener("click",()=>{const e=getData(),t=e?.userProfiles||{};if(Object.keys(t).length>=3)return void showErrorPopup(s,"#dc4a34");const d=createProfile(r,n,o,i,l);d&&a.insertBefore(d,c)}),c},editUsername=(e,t,r,a)=>{resetStateOfEditing(e);const n=e.target,o=n.closest(".main-profiles__profile").querySelector(".main-profiles__name"),s=createSaveBtn(r);n.classList.add("hidden"),s.classList.remove("hidden"),t.append(s),o.focus(),o.select(),o.removeAttribute("readonly"),o.classList.add("focused"),s.addEventListener("click",e=>{saveUsername(e,a)})},saveUsername=(e,t)=>{const r=getData(),a=r?.userProfiles||[],n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn").dataset.id,s=n.querySelector(".main-profiles__name"),i=document.querySelectorAll(".main-profiles__edit-name");if(i.forEach(e=>e.removeAttribute("disabled")),""===s.value.trim())return i.forEach(e=>e.setAttribute("disabled",!0)),showErrorPopup(t,"#FAC044");const l={...a,[o]:{...a[o],name:s.value}};setUserPreference("userProfiles",l,r),resetStateOfEditing(e)},createSaveBtn=e=>{const t=createElement("button",["main-profiles__save-name","hidden"],{"aria-label":e}),r=createElement("img",["main-profiles__save-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/save.svg"});return t.append(r),t},resetStateOfEditing=e=>{const t=document.querySelectorAll(".focused"),r=document.querySelectorAll(".main-profiles__save-name"),a=document.querySelectorAll(".main-profiles__edit-name");t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused"),e.blur()}),r.forEach(e=>e.classList.add("hidden")),a.forEach(e=>e.classList.remove("hidden"))};let popupVisible=!1;export const showErrorPopup=(e,t)=>{if(popupVisible)return;popupVisible=!0;const r=document.documentElement,a=document.querySelector(".container"),n=createElement("div",["error-popup"]),o=createElement("p",["error-popup__text"]);o.textContent=e,r.style.setProperty("--errorTxtColor",t),n.append(o),a.append(n),setTimeout(()=>{n.classList.add("hidden")},2e3),setTimeout(()=>{n.remove(),popupVisible=!1},2500)};export const createUserPanel=()=>{const e=getData();e||showErrorPopup("An unexpected error occurred","#dc4a34");const t=e?.currentProfile,r=e?.userProfiles[t]?.name,a=createElement("div",["browse-header__user-panel"]),n=createElement("p",["browse-header__user-info"]),o=createElement("span",["browse-header__username"]),s=createElement("hr",["browse-header__hr"]),i=createElement("ul",["browse-header__user-panel-list"]),l=createElement("img",["browse-header__icon","browse-header__icon-settings"],{width:"24",height:"24",alt:"",src:"./src/icons/settings-icon.svg",loading:"lazy"}),c=createElement("img",["browse-header__icon","browse-header__icon-settings"],{width:"24",height:"24",alt:"",src:"./src/icons/swap-icon.svg",loading:"lazy"}),d=createElement("img",["browse-header__icon","browse-header__icon-settings"],{width:"24",height:"24",alt:"",src:"./src/icons/logout-icon.svg",loading:"lazy"}),p=createElement("li",["browse-header__user-panel-option"]),m=createElement("a",["browse-header__user-panel-link","browse-header__user-panel-link--settings"],{href:""}),_=createElement("li",["browse-header__user-panel-option"]),g=createElement("a",["browse-header__user-panel-link","browse-header__user-panel-link--logout"],{href:""}),u=createElement("li",["browse-header__user-panel-option"]),h=createElement("a",["browse-header__user-panel-link","browse-header__user-panel-link--swap-profile"],{href:"profiles.html"});return o.textContent=r,n.textContent=e?.translations?.browsePage?.userPanel?.greeting,n.append(o),h.textContent=e?.translations?.browsePage?.userPanel?.profiles,m.textContent=e?.translations?.browsePage?.userPanel?.settings,g.textContent=e?.translations?.browsePage?.userPanel?.login,h.append(c),m.append(l),g.append(d),u.append(h),p.append(m),_.append(g),i.append(u,p,_),a.append(n,s,i),a.addEventListener("click",e=>{e.target.matches(".browse-header__user-panel-link--logout")&&handleLogOut(e)}),a};const handleLogOut=e=>{e.preventDefault();const t=getData(),r=document.querySelector(".container");t&&(r.append(showBigLoader()),r.append(createOverlay()),setTimeout(()=>{hideBigLoader(),setUserPreference("loggedIn",!1),setUserPreference("currentProfile",null),window.location.href="index.html"},2500))},removeUser=e=>{const t=getData(),r=t?.userProfiles,a=document.querySelectorAll(".main-profiles__edit-name"),n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn");a.forEach(e=>e.removeAttribute("disabled")),delete r[o.dataset.id],setUserPreference("userProfiles",r,t),n.classList.add("hidden"),setTimeout(()=>{n.remove()},400)};export const createBrowsePage=({header:{alt:{logo:e},aria:{logoLink:t}},browsePage:{names:{filmLink:r,seriesLink:a,myListLink:n,searchLink:o},aria:{userButton:s}}})=>{const i=createElement("header",["browse-header"]),l=createElement("a",["browse-header__logo"],{"aria-label":t,href:""}),c=createElement("img",["browse-header__logo-img"],{alt:e,src:"./src/icons/logo.svg"}),d=createElement("span",["browse-header__logo-text"]);return d.textContent="Stream",l.append(c,d),i.append(l,createBrowserNav(r,a,n,o),createUserBtn(s),createUserPanel()),i};const createBrowserNav=(e,t,r,a)=>{const n=createElement("nav",["browse-header__nav"]),o=createElement("ul",["browse-header__links"]);return[{name:e,src:"./src/icons/film-icon.svg"},{name:t,src:"./src/icons/series-icon.svg"},{name:r,src:"./src/icons/list-icon.svg"},{name:a,src:"./src/icons/search-icon.svg"}].forEach(e=>{const t=createElement("li",["browse-header__item"]),r=createElement("a",["browse-header__link"],{href:""}),a=createElement("img",["browse-header__link-icon"],{width:"24",height:"24",loading:"lazy",src:e.src,alt:""}),n=createElement("span",["browse-header__link-text"]);n.textContent=e.name,r.append(a,n),t.append(r),o.append(t)}),n.append(o),n},createUserBtn=e=>{const t=createElement("div",["browse-header__user-box"]),r=createElement("button",["browse-header__user"],{"aria-label":e}),a=createElement("img",["browse-header__user-icon"],{width:"24",height:"24",loading:"lazy",src:"./src/icons/user-icon.svg",alt:""});return r.append(a),t.append(r),r.addEventListener("click",()=>{showUserPanel(t)}),t};export const createMainHeroSection=(e,t,r)=>{const a=createElement("main",["browse-main"]),n=createElement("section",["browse-main__hero-section"]),o=createElement("div",["browse-main__image-carousell"]),s=createElement("div",["browse-main__images"]);e.forEach(({id:e,title:r,overview:i="",backdrop_path:l})=>{const c=l,d=createElement("div",["browse-main__img-box"]),p=createElement("img",["browse-main__img"],{alt:`${t?.browsePage?.carousellImages?.aria.carousellImageAlt} ${r}`,src:c?getImageUrl(c,"original"):"./dist/img/img-placeholder.svg"}),m=createElement("div",["browse-main__text-box"]),_=createElement("h2",["browse-main__carousell-title"]),g=createElement("p",["browse-main__carousell-overview"],{tabindex:-1});_.textContent=r,g.textContent=i,m.append(_,g,createActionButtons(e,t)),d.append(p,m),s.append(d),o.append(s),n.append(o),a.append(n)}),r.append(a),o.append(createCarousellControls(e,t))};const createActionButtons=(e,{browsePage:{actionBtns:{trailerBtnText:t,moreInfoBtnText:r}}})=>{const a=createElement("div",["browse-main__action-btns"]),n=createElement("button",["browse-main__trailer-btn"],{"data-trailer":e}),o=createElement("span",["browse-main__see-trailer"]),s=createElement("a",["browse-main__see-more-btn"],{"data-movie":e,href:""});return o.textContent=t,s.textContent=r,n.innerHTML='<svg class="browse-main__trailer-play-icon"\n\txmlns="http://www.w3.org/2000/svg" width="24" height="24"\n\tviewBox="0 0 24 24" fill="#000" stroke="#000" stroke-width="2"\n\tstroke-linecap="round" stroke-linejoin="round"\n\tclass="feather feather-play">\n\t<polygon points="5 3 19 12 5 21 5 3"></polygon>\n\t</svg>',n.append(o),a.append(n,s),a},createCarousellControls=(e,{browsePage:{carousellBtns:{aria:t}}})=>{const r=createElement("div",["browse-main__carousell-controls"]);return e.forEach((e,a)=>{const n=createElement("button",["browse-main__btn"],{"data-img":a,"aria-label":`${t} ${a}`}),o=createElement("span",["browse-main__progress-bar"]);n.append(o),r.append(n)}),r};export const createFilmSlider=(e,t,r,a)=>{const n=e[r]?.results||[];if(!n.length)return console.error(`No films found for index ${r}`),void showErrorPopup(`No films found for index ${r}`,"#dc4a34");const o=createElement("section",["browse-section"]),s=createElement("h3",["browse-section__title"]),i=createElement("div",["browse-section__slider"],{"data-index":0}),l=createElement("div",["browse-section__slider-images"]),c=createElement("button",["browse-section__slider-btn","browse-section__slider-prev-btn"],{"aria-label":t?.browseSection?.aria?.showPrevSlideBtn}),d=createElement("button",["browse-section__slider-btn","browse-section__slider-next-btn"],{"aria-label":t?.browseSection?.aria?.showNextSlideBtn}),p=createElement("img",["browse-section__slider-btn-icon"],{src:"./src/icons/chevron-left.svg",width:"24",height:"24",loading:"lazy",alt:""}),m=createElement("img",["browse-section__slider-btn-icon"],{src:"./src/icons/chevron-right.svg",width:"24",height:"24",loading:"lazy",alt:""});return s.textContent=a,d.append(m),c.append(p),createFilmPosters(n,t,l),i.append(l,c,d),o.append(s,i),o};const createFilmPosters=(e,t,r)=>{e.forEach(({id:e,title:a,poster_path:n})=>{const o=n,s=createElement("div",["browse-section__slider-box"]),i=createElement("a",["browse-section__slider-img-link"],{href:"browse.html","aria-label":t?.browseSection?.aria?.showMoreInfoAboutFilm}),l=createElement("img",["browse-section__slider-img"],{alt:`${t?.browsePage?.carousellImages?.aria?.carousellImageAlt} ${a}`,loading:"lazy",width:"",height:"",src:o?getImageUrl(o,"original"):"./dist/img/img-placeholder.svg"}),c=createElement("button",["browse-section__add-to-list-btn"],{"aria-label":t?.browseSection?.aria?.addToListBtn,"data-movie":e}),d=createElement("img",["browse-section__add-to-list-icon"],{src:"./src/icons/add-profile.svg",width:"24",height:"24",loading:"lazy",alt:""}),p=createElement("span",["browse-section__tooltip"]);p.textContent=t.browseSection.info,c.append(d),i.append(l),s.append(i,c,p),r.append(s)})},createOverlay=()=>createElement("div",["overlay"]),showUserPanel=e=>{e.nextElementSibling.classList.toggle("visible")};export const closeAllNotClicked=e=>{const t=document.querySelector(".browse-header__user-panel"),r=document.querySelector(".browse-header__user");t.classList.contains("visible")&&e.target!==t&&e.target!==r&&!t.contains(e.target)&&t.classList.remove("visible")};export const createFourCategories=({browsePage:{categories:{animations:e,horror:t,comedy:r,fantasy:a}}})=>{const n=createElement("section",["categories"]),o=createElement("div",["categories__box"]),s=createElement("div",["categories__box-card","categories__box-card--animations"]),i=createElement("div",["categories__box-card","categories__box-card--fantasy"]),l=createElement("div",["categories__box-card","categories__box-card--horrors"]),c=createElement("div",["categories__box-card","categories__box-card--comedy"]),d=createElement("a",["categories__box-link","categories__box-link--animations"],{href:""}),p=createElement("a",["categories__box-link","categories__box-link--fantasy"],{href:""}),m=createElement("a",["categories__box-link","categories__box-link--horrors"],{href:""}),_=createElement("a",["categories__box-link","categories__box-link--comedy"],{href:""});return d.textContent=e,p.textContent=a,m.textContent=t,_.textContent=r,s.append(d),i.append(p),l.append(m),c.append(_),o.append(s,i,l,c),n.append(o),n};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
