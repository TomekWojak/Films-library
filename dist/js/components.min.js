import{createElement}from"./helpers.min.js";import{setUserPreference}from"./updateStateFunctions.min.js";const userData=JSON.parse?.(localStorage.getItem("userData"));let profilesCount=userData?.profilesCount||0;const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginHeader=({header:{alt:{logo:e},aria:{logoLink:t,changeLanguageButton:a}}},r,n,o,i)=>{const l=createElement("header",["header"]),s=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${t}`}),c=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${e}`,width:"24",height:"24"}),d=createElement("span",["header__logo-text","login-header__logo-text"]);d.textContent="Stream",s.append(c,d),l.append(s);const p=createElement("button",["login-header__lang-select"],{"aria-label":`${a}`}),m=createElement("span",["login-header__lang-platform-lang"]),u=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),f=createElement("ul",["login-header__lang-list"]);for(let e=0;e<r;e++){const t=createElement("li",["login-header__lang-choice"],{tabindex:0}),a=Object.keys(n)[e],r=Object.values(n)[e];t.dataset.lang=a,t.textContent=r,t.style.animationDelay=100*e+"ms",f.append(t)}return m.textContent=n[o],p.addEventListener("click",e=>{i.call(p,e,m)}),p.append(m,u,f),l.append(p),l};export const createLoginPage=({main:{text:{title:e,subtitle:t,description:a,button:r},placeholder:{username:n,password:o}}})=>{const i=createElement("main",["main"]),l=createElement("div",["wrapper"]),s=createElement("h1"),c=createElement("span",["main__title"]),d=createElement("span",["main__subtitle"]),p=createElement("p",["main__text"]),m=createElement("form",["main__form"]),u=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:n}),f=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),g=createElement("button",["main__form-button"],{type:"submit"}),_=createElement("span",["main__form-button-text"]),h=createElement("p",["main__form-error-txt"]);return c.textContent=e,d.textContent=t,p.textContent=a,_.textContent=r,s.append(c,d),g.append(_),m.append(u,f,g,h),l.append(s,p,m),i.append(l),g.addEventListener("click",e=>{const t=JSON.parse?.(localStorage.getItem("userData"));handleLoginValidation(e,u,f,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD,h)||(h.classList.remove("visible"),e.target.append(showSmallLoader()),e.target.disabled=!0,setTimeout(()=>{e.target.disabled=!1,hideSmallLoader(),setUserPreference("translations",translations,t),setUserPreference("loggedIn",!0,t),window.location.href="profiles.html"},3e3))}),i};const handleLoginValidation=(e,t,a,r,n,o,i,l)=>(e.preventDefault(),""===t.value.trim()||""===a.value.trim()?(l.classList.add("visible"),l.textContent=r,r):t.value.trim()!==o||a.value.trim()!==i?(e.target.disabled=!0,e.target.append(showSmallLoader()),l.classList.remove("visible"),setTimeout(()=>{l.classList.add("visible"),l.textContent=n,e.target.disabled=!1,hideSmallLoader()},3e3),n):null);export const showBigLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideBigLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};export const showSmallLoader=()=>{const e=createElement("div",["loading-area-small"]);return e.innerHTML='<svg class="loader-small" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent-small" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="white" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="white" stop-opacity="0.3" />\n                        <stop offset="100%" stop-color="white" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-small" r="12" cx="60" cy="60"></circle>\n            </svg>',e};export const hideSmallLoader=()=>{document.querySelector(".loading-area-small").remove()};export const createProfilesPage=({profiles:{text:{title:e,addProfileInfo:t},aria:{addProfileBtn:a,userProfileBtn:r,userBtnCustomize:n}},errorPopup:{text:{maxProfiles:o,emptyField:i}}})=>{const l=JSON.parse?.(localStorage.getItem("userData")),s=l?.userProfiles,c=document.querySelector(".container"),d=createElement("main",["main-profiles"]),p=createElement("div",["wrapper"]),m=createElement("h1",["main__title","main-profiles__title"]),u=createElement("div",["main-profiles__box"]);if(m.textContent=e,s&&0!==Object.keys(s).length)for(const e in s)u.append(createProfile(r,n,n,i));u.append(createProfileAddBtn(a,t,r,u,n,n,o,i)),p.append(m,u),d.append(p),c.append(d)};const createProfile=(e,t,a,r)=>{const n=JSON.parse?.(localStorage.getItem("userData")),o=n?.userProfiles||[];let i;if(3==profilesCount||3===o.length)return;profilesCount++,i=["#dc4a34","#062E63","#FAC044"][profilesCount];const l=createElement("div",["main-profiles__profile"]),s=createElement("div",["main-profiles__avatar"]),c=createElement("button",["main-profiles__btn"],{"aria-label":e,"data-id":`user-profile-${profilesCount}`}),d=createElement("div",["main-profiles__user-info"]),p=createElement("input",["main-profiles__name"],{type:"text",readonly:!0,value:o[`user-profile-${profilesCount}`]||`Handsome User ${profilesCount}`}),m=createElement("button",["main-profiles__edit-name"],{"aria-label":t}),u=createElement("img",["main-profiles__edit-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/edit.svg"});if(c.innerHTML='<svg class="main-profiles__img" width="150" height="150" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">\n\t<circle cx="70" cy="70" r="8" fill="white" />\n\t<circle cx="130" cy="70" r="8" fill="white" />\n\t<path d="M60 110 Q100 150 140 110" stroke="white" stroke-width="6"\n\tfill="transparent" stroke-linecap="round" />\n\t</svg>',c.style.backgroundColor=i,s.append(c),m.append(u),d.append(p,m),l.append(s,d),!o[`user-profile-${profilesCount}`]){const e={...o,[`user-profile-${profilesCount}`]:`Handsome User ${profilesCount}`};setUserPreference("userProfiles",e,n)}return m.addEventListener("click",e=>{editUsername(e,d,a,r)}),p.addEventListener("keydown",e=>{"Enter"===e.key&&saveUsername(e,r)}),l},createProfileAddBtn=(e,t,a,r,n,o,i,l)=>{const s=createElement("div",["main-profiles__add-profile"]),c=createElement("div",["main-profiles__avatar"]),d=createElement("button",["main-profiles__btn","main-profiles__btn--add-profile"],{"aria-label":e}),p=createElement("img",["main-profiles__add-img"],{src:"./src/icons/add-profile.svg",loading:"lazy",alt:""}),m=createElement("span",["main-profiles__name"]);return m.textContent=t,d.append(p),c.append(d),s.append(c,m),d.addEventListener("click",()=>{const e=createProfile(a,n,o,l);e?r.append(e):showErrorPopup(i,"#dc4a34")}),s},editUsername=(e,t,a,r)=>{resetStateOfEditing(e);const n=e.target,o=n.previousElementSibling,i=createSaveBtn(a);n.classList.add("hidden"),i.classList.remove("hidden"),t.append(i),o.focus(),o.select(),o.removeAttribute("readonly"),o.classList.add("focused"),i.addEventListener("click",e=>{saveUsername(e,r)})},saveUsername=(e,t)=>{const a=JSON.parse?.(localStorage.getItem("userData")),r=a?.userProfiles||[],n=e.target.closest(".main-profiles__profile"),o=n.querySelector(".main-profiles__btn").dataset.id,i=n.querySelector(".main-profiles__name"),l=document.querySelectorAll(".main-profiles__edit-name");if(l.forEach(e=>e.removeAttribute("disabled")),""===i.value.trim())return l.forEach(e=>e.setAttribute("disabled",!0)),showErrorPopup(t,"#FAC044");const s={...r,[o]:i.value};setUserPreference("userProfiles",s,a),resetStateOfEditing(e)},createSaveBtn=e=>{const t=createElement("button",["main-profiles__save-name","hidden"],{"aria-label":e}),a=createElement("img",["main-profiles__save-icon"],{width:"24",height:"24",loading:"lazy",alt:"",src:"./src/icons/save.svg"});return t.append(a),t},resetStateOfEditing=e=>{const t=document.querySelectorAll(".focused"),a=document.querySelectorAll(".main-profiles__save-name"),r=document.querySelectorAll(".main-profiles__edit-name");t.forEach(e=>{e.setAttribute("readonly",!0),e.classList.remove("focused"),e.blur()}),a.forEach(e=>e.classList.add("hidden")),r.forEach(e=>e.classList.remove("hidden"))};let popupVisible=!1;const showErrorPopup=(e,t)=>{if(popupVisible)return;popupVisible=!0;const a=document.documentElement,r=document.querySelector(".container"),n=createElement("div",["error-popup"]),o=createElement("p",["error-popup__text"]);o.textContent=e,a.style.setProperty("--errorTxtColor",t),n.append(o),r.append(n),setTimeout(()=>{n.classList.add("hidden")},2e3),setTimeout(()=>{n.remove(),popupVisible=!1},2500)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
