import{createElement}from"./helpers.min.js";const USERNAME="handsomeUser404",PASSWORD="5jksH9d.";export const createLoginPage=({main:{text:{title:e,subtitle:t,description:n,button:a},placeholder:{username:r,password:o}}})=>{const i=createElement("main",["main"]),s=createElement("div",["wrapper"]),l=createElement("h1"),c=createElement("span",["main__title"]),m=createElement("span",["main__subtitle"]),p=createElement("p",["main__text"]),d=createElement("form",["main__form"]),u=createElement("input",["main__form-input","main__form-input--username"],{type:"text",placeholder:r}),_=createElement("input",["main__form-input","main__form-input--password"],{type:"password",placeholder:o}),f=createElement("button",["main__form-button"],{type:"submit"}),x=createElement("p",["main__form-error-txt"]);return c.textContent=e,m.textContent=t,p.textContent=n,f.textContent=a,l.append(c,m),d.append(u,_,f,x),s.append(l,p,d),i.append(s),f.addEventListener("click",e=>{const t=handleLoginValidation(e,u,_,translations.main.text.errorRequired,translations.main.text.errorInvalid,USERNAME,PASSWORD)??"";x.classList.add("visible"),x.textContent=t,t||x.classList.remove("visible")}),i};const handleLoginValidation=(e,t,n,a,r,o,i)=>(e.preventDefault(),""===t.value.trim()||""===n.value.trim()?a:t.value.trim()!==o||n.value.trim()!==i?r:null);export const showLoader=()=>{const e=createElement("div",["loading-area"]);return e.innerHTML='            <svg class="loader-big" viewBox="0 0 120 120" width="120" height="120">\n                <defs>\n                    <linearGradient id="loader-accent" x1="0%" y1="0%" x2="100%" y2="0%">\n                        <stop offset="0%" stop-color="#4da8da" stop-opacity="0.8" />\n                        <stop offset="70%" stop-color="#4da8da" stop-opacity="0.4" />\n                        <stop offset="100%" stop-color="#4da8da" stop-opacity="0" />\n                    </linearGradient>\n                </defs>\n                <circle class="loading-circle-big" r="35" cx="60" cy="60"></circle>\n            </svg>',e};export const hideLoader=()=>{const e=document.querySelector(".loading-area");e?.remove()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy5taW4uanMiLCJuYW1lcyI6WyJjcmVhdGVFbGVtZW50IiwiVVNFUk5BTUUiLCJQQVNTV09SRCIsImNyZWF0ZUxvZ2luUGFnZSIsIm1haW4iLCJ0ZXh0IiwidGl0bGUiLCJzdWJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYnV0dG9uIiwicGxhY2Vob2xkZXIiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwibWFpbkNvbnRlbnQiLCJ3cmFwcGVyIiwibG9naW5UaXRsZSIsImxvZ2luVGl0bGVUb3AiLCJsb2dpblRpdGxlQm90dG9tIiwibG9naW5UZXh0IiwiZm9ybSIsInVzZXJuYW1lSW5wdXQiLCJ0eXBlIiwicGFzc3dvcmRJbnB1dCIsInN1Ym1pdEJ0biIsImVycm9yVHh0IiwidGV4dENvbnRlbnQiLCJhcHBlbmQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInJlc3VsdHMiLCJoYW5kbGVMb2dpblZhbGlkYXRpb24iLCJ0cmFuc2xhdGlvbnMiLCJlcnJvclJlcXVpcmVkIiwiZXJyb3JJbnZhbGlkIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwicmVxdWlyZUVycm9yIiwiaW52YWxpZEVycm9yIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsInRyaW0iLCJzaG93TG9hZGVyIiwibG9hZGluZ0FyZWEiLCJpbm5lckhUTUwiLCJoaWRlTG9hZGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIl0sInNvdXJjZXMiOlsiY29tcG9uZW50cy5qcyJdLCJtYXBwaW5ncyI6Ik9BQVNBLGtCQUFxQixtQkFFOUIsTUFBTUMsU0FBVyxrQkFDWEMsU0FBVyxrQkFFVixNQUFNQyxnQkFBa0IsRUFDOUJDLE1BQ0NDLE1BQVFDLFFBQU9DLFdBQVVDLGNBQWFDLFVBQ3RDQyxhQUFlQyxXQUFVQyxpQkFHMUIsTUFBTUMsRUFBY2IsY0FBYyxPQUFRLENBQUMsU0FDckNjLEVBQVVkLGNBQWMsTUFBTyxDQUFDLFlBQ2hDZSxFQUFhZixjQUFjLE1BQzNCZ0IsRUFBZ0JoQixjQUFjLE9BQVEsQ0FBQyxnQkFDdkNpQixFQUFtQmpCLGNBQWMsT0FBUSxDQUFDLG1CQUMxQ2tCLEVBQVlsQixjQUFjLElBQUssQ0FBQyxlQUNoQ21CLEVBQU9uQixjQUFjLE9BQVEsQ0FBQyxlQUM5Qm9CLEVBQWdCcEIsY0FDckIsUUFDQSxDQUFDLG1CQUFvQiw4QkFDckIsQ0FBRXFCLEtBQU0sT0FBUVgsWUFBYUMsSUFFeEJXLEVBQWdCdEIsY0FDckIsUUFDQSxDQUFDLG1CQUFvQiw4QkFDckIsQ0FBRXFCLEtBQU0sV0FBWVgsWUFBYUUsSUFFNUJXLEVBQVl2QixjQUFjLFNBQVUsQ0FBQyxxQkFBc0IsQ0FDaEVxQixLQUFNLFdBRURHLEVBQVd4QixjQUFjLElBQUssQ0FBQyx5QkFnQ3JDLE9BL0JBZ0IsRUFBY1MsWUFBY25CLEVBQzVCVyxFQUFpQlEsWUFBY2xCLEVBQy9CVyxFQUFVTyxZQUFjakIsRUFDeEJlLEVBQVVFLFlBQWNoQixFQUV4Qk0sRUFBV1csT0FBT1YsRUFBZUMsR0FDakNFLEVBQUtPLE9BQU9OLEVBQWVFLEVBQWVDLEVBQVdDLEdBRXJEVixFQUFRWSxPQUFPWCxFQUFZRyxFQUFXQyxHQUN0Q04sRUFBWWEsT0FBT1osR0FFbkJTLEVBQVVJLGlCQUFpQixRQUFVQyxJQUNwQyxNQUFNQyxFQUNMQyxzQkFDQ0YsRUFDQVIsRUFDQUUsRUFDQVMsYUFBYTNCLEtBQUtDLEtBQUsyQixjQUN2QkQsYUFBYTNCLEtBQUtDLEtBQUs0QixhQUN2QmhDLFNBQ0FDLFdBQ0ksR0FFTnNCLEVBQVNVLFVBQVVDLElBQUksV0FDdkJYLEVBQVNDLFlBQWNJLEVBRWxCQSxHQUNKTCxFQUFTVSxVQUFVRSxPQUFPLGFBSXJCdkIsR0FHUixNQUFNaUIsc0JBQXdCLENBQzdCRixFQUNBUixFQUNBRSxFQUNBZSxFQUNBQyxFQUNBM0IsRUFDQUMsS0FFQWdCLEVBQUVXLGlCQUVpQyxLQUEvQm5CLEVBQWNvQixNQUFNQyxRQUFnRCxLQUEvQm5CLEVBQWNrQixNQUFNQyxPQUNyREosRUFFUGpCLEVBQWNvQixNQUFNQyxTQUFXOUIsR0FDL0JXLEVBQWNrQixNQUFNQyxTQUFXN0IsRUFFeEIwQixFQUVBLGFBSUYsTUFBTUksV0FBYSxLQUN6QixNQUFNQyxFQUFjM0MsY0FBYyxNQUFPLENBQUMsaUJBVzFDLE9BVkEyQyxFQUFZQyxVQUFZLHFuQkFVakJELFVBRUQsTUFBTUUsV0FBYSxLQUN6QixNQUFNRixFQUFjRyxTQUFTQyxjQUFjLGlCQUMzQ0osR0FBYVAiLCJpZ25vcmVMaXN0IjpbXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gXCIuL2hlbHBlcnMubWluLmpzXCI7XHJcblxyXG5jb25zdCBVU0VSTkFNRSA9IFwiaGFuZHNvbWVVc2VyNDA0XCI7XHJcbmNvbnN0IFBBU1NXT1JEID0gXCI1amtzSDlkLlwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZUxvZ2luUGFnZSA9ICh7XHJcblx0bWFpbjoge1xyXG5cdFx0dGV4dDogeyB0aXRsZSwgc3VidGl0bGUsIGRlc2NyaXB0aW9uLCBidXR0b24gfSxcclxuXHRcdHBsYWNlaG9sZGVyOiB7IHVzZXJuYW1lLCBwYXNzd29yZCB9LFxyXG5cdH0sXHJcbn0pID0+IHtcclxuXHRjb25zdCBtYWluQ29udGVudCA9IGNyZWF0ZUVsZW1lbnQoXCJtYWluXCIsIFtcIm1haW5cIl0pO1xyXG5cdGNvbnN0IHdyYXBwZXIgPSBjcmVhdGVFbGVtZW50KFwiZGl2XCIsIFtcIndyYXBwZXJcIl0pO1xyXG5cdGNvbnN0IGxvZ2luVGl0bGUgPSBjcmVhdGVFbGVtZW50KFwiaDFcIik7XHJcblx0Y29uc3QgbG9naW5UaXRsZVRvcCA9IGNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIFtcIm1haW5fX3RpdGxlXCJdKTtcclxuXHRjb25zdCBsb2dpblRpdGxlQm90dG9tID0gY3JlYXRlRWxlbWVudChcInNwYW5cIiwgW1wibWFpbl9fc3VidGl0bGVcIl0pO1xyXG5cdGNvbnN0IGxvZ2luVGV4dCA9IGNyZWF0ZUVsZW1lbnQoXCJwXCIsIFtcIm1haW5fX3RleHRcIl0pO1xyXG5cdGNvbnN0IGZvcm0gPSBjcmVhdGVFbGVtZW50KFwiZm9ybVwiLCBbXCJtYWluX19mb3JtXCJdKTtcclxuXHRjb25zdCB1c2VybmFtZUlucHV0ID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiaW5wdXRcIixcclxuXHRcdFtcIm1haW5fX2Zvcm0taW5wdXRcIiwgXCJtYWluX19mb3JtLWlucHV0LS11c2VybmFtZVwiXSxcclxuXHRcdHsgdHlwZTogXCJ0ZXh0XCIsIHBsYWNlaG9sZGVyOiB1c2VybmFtZSB9XHJcblx0KTtcclxuXHRjb25zdCBwYXNzd29yZElucHV0ID0gY3JlYXRlRWxlbWVudChcclxuXHRcdFwiaW5wdXRcIixcclxuXHRcdFtcIm1haW5fX2Zvcm0taW5wdXRcIiwgXCJtYWluX19mb3JtLWlucHV0LS1wYXNzd29yZFwiXSxcclxuXHRcdHsgdHlwZTogXCJwYXNzd29yZFwiLCBwbGFjZWhvbGRlcjogcGFzc3dvcmQgfVxyXG5cdCk7XHJcblx0Y29uc3Qgc3VibWl0QnRuID0gY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBbXCJtYWluX19mb3JtLWJ1dHRvblwiXSwge1xyXG5cdFx0dHlwZTogXCJzdWJtaXRcIixcclxuXHR9KTtcclxuXHRjb25zdCBlcnJvclR4dCA9IGNyZWF0ZUVsZW1lbnQoXCJwXCIsIFtcIm1haW5fX2Zvcm0tZXJyb3ItdHh0XCJdKTtcclxuXHRsb2dpblRpdGxlVG9wLnRleHRDb250ZW50ID0gdGl0bGU7XHJcblx0bG9naW5UaXRsZUJvdHRvbS50ZXh0Q29udGVudCA9IHN1YnRpdGxlO1xyXG5cdGxvZ2luVGV4dC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG5cdHN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IGJ1dHRvbjtcclxuXHJcblx0bG9naW5UaXRsZS5hcHBlbmQobG9naW5UaXRsZVRvcCwgbG9naW5UaXRsZUJvdHRvbSk7XHJcblx0Zm9ybS5hcHBlbmQodXNlcm5hbWVJbnB1dCwgcGFzc3dvcmRJbnB1dCwgc3VibWl0QnRuLCBlcnJvclR4dCk7XHJcblxyXG5cdHdyYXBwZXIuYXBwZW5kKGxvZ2luVGl0bGUsIGxvZ2luVGV4dCwgZm9ybSk7XHJcblx0bWFpbkNvbnRlbnQuYXBwZW5kKHdyYXBwZXIpO1xyXG5cclxuXHRzdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcblx0XHRjb25zdCByZXN1bHRzID1cclxuXHRcdFx0aGFuZGxlTG9naW5WYWxpZGF0aW9uKFxyXG5cdFx0XHRcdGUsXHJcblx0XHRcdFx0dXNlcm5hbWVJbnB1dCxcclxuXHRcdFx0XHRwYXNzd29yZElucHV0LFxyXG5cdFx0XHRcdHRyYW5zbGF0aW9ucy5tYWluLnRleHQuZXJyb3JSZXF1aXJlZCxcclxuXHRcdFx0XHR0cmFuc2xhdGlvbnMubWFpbi50ZXh0LmVycm9ySW52YWxpZCxcclxuXHRcdFx0XHRVU0VSTkFNRSxcclxuXHRcdFx0XHRQQVNTV09SRFxyXG5cdFx0XHQpID8/IFwiXCI7XHJcblxyXG5cdFx0ZXJyb3JUeHQuY2xhc3NMaXN0LmFkZChcInZpc2libGVcIik7XHJcblx0XHRlcnJvclR4dC50ZXh0Q29udGVudCA9IHJlc3VsdHM7XHJcblxyXG5cdFx0aWYgKCFyZXN1bHRzKSB7XHJcblx0XHRcdGVycm9yVHh0LmNsYXNzTGlzdC5yZW1vdmUoXCJ2aXNpYmxlXCIpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4gbWFpbkNvbnRlbnQ7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVMb2dpblZhbGlkYXRpb24gPSAoXHJcblx0ZSxcclxuXHR1c2VybmFtZUlucHV0LFxyXG5cdHBhc3N3b3JkSW5wdXQsXHJcblx0cmVxdWlyZUVycm9yLFxyXG5cdGludmFsaWRFcnJvcixcclxuXHR1c2VybmFtZSxcclxuXHRwYXNzd29yZFxyXG4pID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdGlmICh1c2VybmFtZUlucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIiB8fCBwYXNzd29yZElucHV0LnZhbHVlLnRyaW0oKSA9PT0gXCJcIikge1xyXG5cdFx0cmV0dXJuIHJlcXVpcmVFcnJvcjtcclxuXHR9IGVsc2UgaWYgKFxyXG5cdFx0dXNlcm5hbWVJbnB1dC52YWx1ZS50cmltKCkgIT09IHVzZXJuYW1lIHx8XHJcblx0XHRwYXNzd29yZElucHV0LnZhbHVlLnRyaW0oKSAhPT0gcGFzc3dvcmRcclxuXHQpIHtcclxuXHRcdHJldHVybiBpbnZhbGlkRXJyb3I7XHJcblx0fSBlbHNlIHtcclxuXHRcdHJldHVybiBudWxsO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzaG93TG9hZGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdBcmVhID0gY3JlYXRlRWxlbWVudChcImRpdlwiLCBbXCJsb2FkaW5nLWFyZWFcIl0pO1xyXG5cdGxvYWRpbmdBcmVhLmlubmVySFRNTCA9IGAgICAgICAgICAgICA8c3ZnIGNsYXNzPVwibG9hZGVyLWJpZ1wiIHZpZXdCb3g9XCIwIDAgMTIwIDEyMFwiIHdpZHRoPVwiMTIwXCIgaGVpZ2h0PVwiMTIwXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGVmcz5cclxuICAgICAgICAgICAgICAgICAgICA8bGluZWFyR3JhZGllbnQgaWQ9XCJsb2FkZXItYWNjZW50XCIgeDE9XCIwJVwiIHkxPVwiMCVcIiB4Mj1cIjEwMCVcIiB5Mj1cIjAlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cIiM0ZGE4ZGFcIiBzdG9wLW9wYWNpdHk9XCIwLjhcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCI3MCVcIiBzdG9wLWNvbG9yPVwiIzRkYThkYVwiIHN0b3Atb3BhY2l0eT1cIjAuNFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjEwMCVcIiBzdG9wLWNvbG9yPVwiIzRkYThkYVwiIHN0b3Atb3BhY2l0eT1cIjBcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XHJcbiAgICAgICAgICAgICAgICA8L2RlZnM+XHJcbiAgICAgICAgICAgICAgICA8Y2lyY2xlIGNsYXNzPVwibG9hZGluZy1jaXJjbGUtYmlnXCIgcj1cIjM1XCIgY3g9XCI2MFwiIGN5PVwiNjBcIj48L2NpcmNsZT5cclxuICAgICAgICAgICAgPC9zdmc+YDtcclxuXHRyZXR1cm4gbG9hZGluZ0FyZWE7XHJcbn07XHJcbmV4cG9ydCBjb25zdCBoaWRlTG9hZGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGxvYWRpbmdBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5sb2FkaW5nLWFyZWFcIik7XHJcblx0bG9hZGluZ0FyZWE/LnJlbW92ZSgpO1xyXG59O1xyXG4iXX0=
