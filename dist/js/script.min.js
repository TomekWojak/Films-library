import{createElement}from"./helpers.min.js";import{updateElement,setUserPreference}from"./updateStateFunctions.min.js";import{createLoginPage,showBigLoader,hideBigLoader,createLoginHeader,getData}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){const e=document.querySelector(".container");let t=function(){let e=navigator.language||navigator.userLanguage;return e&&"pl"===e&&"en"===e?(e=e.slice(0,2).toLowerCase(),e):"pl"}();const a={pl:"Polski",en:"English"};let n={};window.translations={};let o=Object.keys(a).length;(()=>{const e=getData();if(!e||e=={})return;const t=e?.loggedIn;t&&(window.location.href="profiles.html")})();(()=>{const e=getData()?.preferredLanguage;e&&(t=e)})();(async()=>{try{e.append(showBigLoader());const a=await fetch(`./src/json/${t}.json`),n=await a.json();translations=n}catch{console.error("Error loading initial translation file")}finally{hideBigLoader()}e.prepend(createLoginHeader(translations,o,a,t,i)),e.append(createLoginPage(translations))})();const r=async()=>{try{const e=await fetch(`./src/json/${t}.json`);if(!e.ok)throw new Error("Network response was not ok");const a=await e.json();translations=a,updateElement("login-header__logo","aria",translations.header.aria.logoLink),updateElement("login-header__logo-img","alt",translations.header.alt.logo),updateElement("login-header__lang-select","aria",translations.header.aria.changeLanguageButton),updateElement("main__title","text",translations.main.text.title),updateElement("main__subtitle","text",translations.main.text.subtitle),updateElement("main__text","text",translations.main.text.description),updateElement("main__form-input--username","placeholder",translations.main.placeholder.username),updateElement("main__form-input--password","placeholder",translations.main.placeholder.password),updateElement("main__form-button-text","text",translations.main.text.button),updateElement("main__form-error-txt","text",translations.main.text.errorRequired)}catch{console.error("Error loading translation file")}};function i(e,o){if(this.classList.toggle("active"),e.target.matches(".login-header__lang-choice")){const i=e.target.dataset.lang;o.textContent=a[i],t=i,r(t),setUserPreference("preferredLanguage",t,n)}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
