import{createElement}from"./helpers.min.js";import{updateElement}from"./updateStateFunctions.min.js";import{createLoginPage,showBigLoader,hideBigLoader}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){document.querySelector(".root");const e=document.querySelector(".container");let t=function(){let e=navigator.language||navigator.userLanguage;return e&&"pl"===e&&"en"===e?(e=e.slice(0,2).toLowerCase(),e):"pl"}();const a={pl:"Polski",en:"English"};let n={};window.translations={};let o=Object.keys(a).length;(()=>{const e=JSON.parse(localStorage.getItem("userData"))?.preferredLanguage;e&&(t=e)})();(async()=>{try{e.append(showBigLoader());const a=await fetch(`./src/json/${t}.json`),n=await a.json();translations=n}catch{console.error("Error loading initial translation file")}finally{hideBigLoader()}e.prepend(r()),e.append(createLoginPage(translations))})();const r=()=>{const e=createElement("header",["header"]),n=createElement("a",["header__logo","login-header__logo"],{href:"/","aria-label":`${translations.header.aria.logoLink}`}),r=createElement("img",["header__logo-img","login-header__logo-img"],{src:"./src/icons/logo.svg",alt:`${translations.header.alt.logo}`,width:"24",height:"24"}),i=createElement("span",["header__logo-text","login-header__logo-text"]);i.textContent="Stream",n.append(r,i),e.append(n);const s=createElement("button",["login-header__lang-select"],{"aria-label":`${translations.header.aria.changeLanguageButton}`}),g=createElement("span",["login-header__lang-platform-lang"]),c=createElement("img",["login-header__lang-arrow"],{src:"./src/icons/chevron-down.svg",alt:"",width:"24",height:"24"}),d=createElement("ul",["login-header__lang-list"]);for(let e=0;e<o;e++){const t=createElement("li",["login-header__lang-choice"]),n=Object.keys(a)[e],o=Object.values(a)[e];t.dataset.lang=n,t.textContent=o,t.style.animationDelay=100*e+"ms",d.append(t)}return g.textContent=a[t],s.addEventListener("click",e=>{l.call(s,e,g)}),s.append(g,c,d),e.append(s),e};function l(e,n){if(this.classList.toggle("active"),e.target.matches(".login-header__lang-choice")){const o=e.target.dataset.lang;n.textContent=a[o],t=o,(async()=>{try{const e=await fetch(`./src/json/${t}.json`);if(!e.ok)throw new Error("Network response was not ok");const a=await e.json();translations=a,console.log(translations),updateElement("login-header__logo","aria",translations.header.aria.logoLink),updateElement("login-header__logo-img","alt",translations.header.alt.logo),updateElement("login-header__lang-select","aria",translations.header.aria.changeLanguageButton),updateElement("main__title","text",translations.main.text.title),updateElement("main__subtitle","text",translations.main.text.subtitle),updateElement("main__text","text",translations.main.text.description),updateElement("main__form-input--username","placeholder",translations.main.placeholder.username),updateElement("main__form-input--password","placeholder",translations.main.placeholder.password),updateElement("main__form-button-text","text",translations.main.text.button),updateElement("main__form-error-txt","text",translations.main.text.errorRequired)}catch{console.error("Error loading translation file")}})(),i("preferredLanguage",t)}}const i=(e,t)=>{const a=JSON.parse(localStorage.getItem("userData"))||{};a[e]=t,n={...n,...a},localStorage.setItem("userData",JSON.stringify(n))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
