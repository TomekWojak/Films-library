import{getData,createBrowsePage,createMainHeroSection,showErrorPopup,showBigLoader,hideBigLoader}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){const e={method:"GET",headers:{accept:"application/json",Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNTYwZjM4MjU3NDQ1ZGE1ZGZkYTYxYzE0YWM4YmM4MyIsIm5iZiI6MTc1OTc2NTAzOC45NCwic3ViIjoiNjhlM2UyMmUyNjY5NzY4MzhlYzI3NzI5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.nuGfEjclJLepmzzHi2omNhp29THgrJf9Nv6D4_gTdxA"}};let r;const t=async(r,t)=>{const a=`https://api.themoviedb.org/3/movie/popular?language=${r}&page=${t}`;try{const r=await fetch(a,e);return await r.json()}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},a=async(e,r)=>{const a=[];for(let o=1;o<=r;o++)a.push(t(e,o));try{return await Promise.all(a)}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},o=async(e,r)=>{try{const t=await e(r,5),a=Math.trunc(20*Math.random());return t.map(e=>e.results[a])}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}};let s=1e4,n=5*s/100,i=0;const c=(e,r)=>{const t=e.querySelector(".browse-main__images"),a=t.querySelectorAll(".browse-main__img-box"),o=e.querySelector(".browse-main__carousell-controls");a[a.length-1].classList.remove("currentVisible"),a[i-1]?.classList.remove("currentVisible"),t.style.transform=`translateX(${100*-i}%)`,l(i,o),a[i].classList.add("currentVisible"),i++,i>r.length-1&&(i=0)},l=(e,r)=>{const t=r.querySelectorAll(".browse-main__btn"),a=r.querySelector(`.browse-main__btn[data-img="${e}"]`),o=a.querySelector(".browse-main__progress-bar");r.querySelectorAll(".browse-main__progress-bar").forEach(e=>e.style.width="0"),d(o),t.forEach(e=>e.classList.remove("active")),a.classList.add("active")},d=e=>{let r=0;const t=setInterval(()=>{r+=5,e.style.width=`${r}%`,r>=100&&(e.style.width="0",clearInterval(t))},n)},m=(e,r,t)=>{r.querySelector(".browse-main__carousell-controls").addEventListener("click",a=>{if(a.target.matches(".browse-main__btn")){clearInterval(t),t=setInterval(()=>{c(r,e)},s);const o=a.target,n=parseInt(o.dataset.img);i=n,c(r,e)}})};(()=>{const e=getData(),t=e?.translations,n=e?.preferredLanguage,i=e?.loggedIn,l=document.querySelector(".container");e&&i?(l.prepend(createBrowsePage(t)),l.append(showBigLoader()),o(a,n).then(e=>{createMainHeroSection(e,t,l),c(l,e),r=setInterval(()=>{c(l,e)},s),m(e,l,r)})):window.location.href="/"})()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
