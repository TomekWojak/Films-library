import{getData,createBrowsePage,createMainHeroSection,showErrorPopup,showBigLoader,hideBigLoader,createFilmSlider,createFooter}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){const e={method:"GET",headers:{accept:"application/json",Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNTYwZjM4MjU3NDQ1ZGE1ZGZkYTYxYzE0YWM4YmM4MyIsIm5iZiI6MTc1OTc2NTAzOC45NCwic3ViIjoiNjhlM2UyMmUyNjY5NzY4MzhlYzI3NzI5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.nuGfEjclJLepmzzHi2omNhp29THgrJf9Nv6D4_gTdxA"}},t=new Map;let r,a=1e4,n=0;const o=new Date,i=`https://api.themoviedb.org/3/discover/movie?primary_release_year=2025&primary_release_date.gte=${o.getFullYear()}-${o.getMonth()+1}-${o.getDate()}&sort_by=popularity.desc\n`,s="&page=",c=async(t,...r)=>{const a=[];for await(const n of r){const r=n+t+s+1,o=await fetch(r,e),i=await o.json();a.push(i)}return a},l=async(t,r,a)=>{const n=a+t+s+r;try{const t=await fetch(n,e);return await t.json()}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},d=async(e,t)=>{const r=[];for(let a=1;a<=t;a++)r.push(l(e,a,"https://api.themoviedb.org/3/movie/popular?language="));try{return await Promise.all(r)}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},w=async(e,t)=>{try{const r=await e(t,5),a=Math.trunc(20*Math.random());return r.map(e=>e.results[a])}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}},h=(e,t)=>{const r=e.querySelector(".browse-main__images"),a=r.querySelectorAll(".browse-main__img-box"),o=e.querySelector(".browse-main__carousell-controls");a.forEach(e=>e.classList.remove("currentVisible")),r.style.transform=`translateX(${100*-n}%)`,u(n,o),a[n].classList.add("currentVisible"),n++,n>t.length-1&&(n=0),b(e)},u=(e,r)=>{const a=r.querySelectorAll(".browse-main__btn"),n=r.querySelector(`.browse-main__btn[data-img="${e}"]`),o=n.querySelector(".browse-main__progress-bar"),i=r.querySelectorAll(".browse-main__progress-bar");t.forEach(e=>clearInterval(e)),t.clear(),i.forEach(e=>e.style.width="0"),m(o,e),a.forEach(e=>e.classList.remove("active")),n.classList.add("active")},m=(e,r)=>{t.has(r)&&clearInterval(t.get(r));let a=0;const n=setInterval(()=>{a+=2,e.style.width=`${a}%`,a>=100&&(e.style.width="0",clearInterval(n),t.delete(r))},200);t.set(r,n)},g=(e,t)=>{t.querySelector(".browse-main__carousell-controls").addEventListener("click",o=>{if(o.target.matches(".browse-main__btn")){if(o.target.classList.contains("active"))return;clearInterval(r);const i=o.target,s=parseInt(i.dataset.img);n=s,h(t,e),r=setInterval(()=>{h(t,e)},a)}})},b=e=>{e.querySelectorAll(".browse-main__img-box").forEach(e=>{const t=e.classList.contains("currentVisible")?0:-1;p(e,t,0===t?"visible":"hidden")})},p=(e,t,r)=>{const a=e.querySelector(".browse-main__trailer-btn"),n=e.querySelector(".browse-main__see-more-btn");a.setAttribute("tabindex",t),n.setAttribute("tabindex",t),a.style.visibility=r,n.style.visibility=r};let y,_,v,f;const S=(e,t)=>{const o=Math.abs(y-_),i=Math.abs(v-f);o<30||i>30||(_-y>30?(n=(n-2+t.length)%t.length,h(e,t)):y-_>30&&h(e,t),clearInterval(r),r=setInterval(()=>{h(e,t)},a))},E=(e,t)=>{const r=e.querySelector(".browse-main__images");r.addEventListener("touchstart",e=>{(e=>{y=e.touches[0].clientX,v=e.touches[0].clientY})(e)}),r.addEventListener("touchend",r=>{((e,t,r)=>{_=e.changedTouches[0].clientX,f=e.changedTouches[0].clientY,S(t,r)})(r,e,t)})},I=(e,t)=>{e.dataset.index=t},L=e=>{const t=(()=>{let e=2;return window.innerWidth>576&&window.innerWidth<992&&(e=1),window.innerWidth>=992&&window.innerWidth<1200&&(e=4),e})();let r=e.dataset.index;const a=e.querySelector(".browse-section__slider-images"),n=e.querySelector(".browse-section__slider-box");if(!n)return;const o=n.offsetWidth;a.style.transform=`translateX(${-r*o*t}px)`},q=(e,t)=>{let r=0===t?parseInt(e.dataset.index):0;r>=(()=>{let e;return window.innerWidth<576&&(e=9),window.innerWidth>=576&&window.innerWidth<992&&(e=17),window.innerWidth>=992&&window.innerWidth<1200&&(e=4),window.innerWidth>=1200&&(e=7),e})()||(r++,I(e,r),L(e))},M=e=>{e.querySelectorAll(".browse-section__slider").forEach(e=>e.addEventListener("click",t=>{t.target.matches(".browse-section__slider-next-btn")?q(e,0):t.target.matches(".browse-section__slider-prev-btn")&&((e,t)=>{let r=0===t?parseInt(e.dataset.index):0;r<=0||(r--,I(e,r),L(e))})(e,0)}))};let N=window.innerWidth;window.addEventListener("resize",()=>{if(window.innerWidth===N)return;N=window.innerWidth;document.querySelectorAll(".browse-section__slider").forEach(e=>{const t=e.querySelector(".browse-section__slider-images");I(e,0),t.style.transform="translateX(0)"})}),window.addEventListener("unload",()=>{clearInterval(r),t.forEach(e=>clearInterval(e)),t.clear()}),(async()=>{const e=getData(),t=e?.translations,n=e?.preferredLanguage,o=e?.loggedIn,s=document.querySelector(".container");if(e&&o){s.prepend(createBrowsePage(t)),s.append(showBigLoader());try{const e=await w(d,n);createMainHeroSection(e,t,s),h(s,e),r=setInterval(()=>h(s,e),a),g(e,s),E(s,e);const o=await c(n,"https://api.themoviedb.org/3/movie/upcoming?language=","https://api.themoviedb.org/3/trending/all/week?language=","https://api.themoviedb.org/3/discover/tv?with_origin_country=US|GB&language=&sort_by=popularity.desc\n",i),l=document.querySelector("main");l||showErrorPopup(t.browsePage.loadingDataError,"#dc4a34"),l.append(createFilmSlider(o,t,1,t.browseSection.sectionNames.trending),createFilmSlider(o,t,0,t.browseSection.sectionNames.upcoming),createFilmSlider(o,t,2,t.browseSection.sectionNames.topRatedSeries),createFilmSlider(o,t,3,t.browseSection.sectionNames.futureFilms)),M(s),s.append(createFooter(t))}catch{showErrorPopup(t.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}}else window.location.href="/"})()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
