import{getData,createBrowsePage,createMainHeroSection,showErrorPopup,showBigLoader,hideBigLoader}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){const e={method:"GET",headers:{accept:"application/json",Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNTYwZjM4MjU3NDQ1ZGE1ZGZkYTYxYzE0YWM4YmM4MyIsIm5iZiI6MTc1OTc2NTAzOC45NCwic3ViIjoiNjhlM2UyMmUyNjY5NzY4MzhlYzI3NzI5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.nuGfEjclJLepmzzHi2omNhp29THgrJf9Nv6D4_gTdxA"}},t=new Map;let r,a=15e3,o=0;const s=async(t,r)=>{const a=`https://api.themoviedb.org/3/movie/popular?language=${t}&page=${r}`;try{const t=await fetch(a,e);return await t.json()}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},n=async(e,t)=>{const r=[];for(let a=1;a<=t;a++)r.push(s(e,a));try{return await Promise.all(r)}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},i=async(e,t)=>{try{const r=await e(t,5),a=Math.trunc(20*Math.random());return r.map(e=>e.results[a])}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}},c=(e,t)=>{const r=e.querySelector(".browse-main__images"),a=r.querySelectorAll(".browse-main__img-box"),s=e.querySelector(".browse-main__carousell-controls");a.forEach(e=>e.classList.remove("currentVisible")),r.style.transform=`translateX(${100*-o}%)`,l(o,s),a[o].classList.add("currentVisible"),o++,o>t.length-1&&(o=0),h(e)},l=(e,r)=>{const a=r.querySelectorAll(".browse-main__btn"),o=r.querySelector(`.browse-main__btn[data-img="${e}"]`),s=o.querySelector(".browse-main__progress-bar"),n=r.querySelectorAll(".browse-main__progress-bar");t.forEach(e=>clearInterval(e)),t.clear(),n.forEach(e=>e.style.width="0"),d(s,e),a.forEach(e=>e.classList.remove("active")),o.classList.add("active")},d=(e,r)=>{t.has(r)&&clearInterval(t.get(r));let a=0;const o=setInterval(()=>{a+=5,e.style.width=`${a}%`,a>=100&&(e.style.width="0",clearInterval(o),t.delete(r))},750);t.set(r,o)},m=(e,t,r)=>{t.querySelector(".browse-main__carousell-controls").addEventListener("click",s=>{if(s.target.matches(".browse-main__btn")){if(s.target.classList.contains("active"))return;clearInterval(r);const n=s.target,i=parseInt(n.dataset.img);o=i,c(t,e),r=setInterval(()=>{c(t,e)},a)}})},h=e=>{e.querySelectorAll(".browse-main__img-box").forEach(e=>{const t=e.classList.contains("currentVisible");u(e,t?0:-1)})},u=(e,t)=>{const r=e.querySelector(".browse-main__trailer-btn"),a=e.querySelector(".browse-main__see-more-btn");r.setAttribute("tabindex",t),a.setAttribute("tabindex",t)};(()=>{const e=getData(),t=e?.translations,o=e?.preferredLanguage,s=e?.loggedIn,l=document.querySelector(".container");e&&s?(l.prepend(createBrowsePage(t)),l.append(showBigLoader()),i(n,o).then(e=>{createMainHeroSection(e,t,l),c(l,e),r=setInterval(()=>{c(l,e)},a),m(e,l,r)})):window.location.href="/"})()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
