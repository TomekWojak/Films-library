import{getData,createBrowsePage,createMainHeroSection,showErrorPopup,showBigLoader,hideBigLoader,createFilmSlider}from"./components.min.js";document.addEventListener("DOMContentLoaded",function(){const e={method:"GET",headers:{accept:"application/json",Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNTYwZjM4MjU3NDQ1ZGE1ZGZkYTYxYzE0YWM4YmM4MyIsIm5iZiI6MTc1OTc2NTAzOC45NCwic3ViIjoiNjhlM2UyMmUyNjY5NzY4MzhlYzI3NzI5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.nuGfEjclJLepmzzHi2omNhp29THgrJf9Nv6D4_gTdxA"}},t=new Map;let a,r=1e4,o=0;const n="&page=",s=async(t,a,...r)=>{const o=[];for await(const s of r){const r=s+t+n+a,i=await fetch(r,e),c=await i.json();o.push(c)}return o},i=async(t,a,r)=>{const o=r+t+n+a;try{const t=await fetch(o,e);return await t.json()}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},c=async(e,t)=>{const a=[];for(let r=1;r<=t;r++)a.push(i(e,r,"https://api.themoviedb.org/3/movie/popular?language="));try{return await Promise.all(a)}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}},l=async(e,t)=>{try{const a=await e(t,5),r=Math.trunc(20*Math.random());return a.map(e=>e.results[r])}catch{showErrorPopup(translations.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}},d=(e,t)=>{const a=e.querySelector(".browse-main__images"),r=a.querySelectorAll(".browse-main__img-box"),n=e.querySelector(".browse-main__carousell-controls");r.forEach(e=>e.classList.remove("currentVisible")),a.style.transform=`translateX(${100*-o}%)`,h(o,n),r[o].classList.add("currentVisible"),o++,o>t.length-1&&(o=0),g(e)},h=(e,a)=>{const r=a.querySelectorAll(".browse-main__btn"),o=a.querySelector(`.browse-main__btn[data-img="${e}"]`),n=o.querySelector(".browse-main__progress-bar"),s=a.querySelectorAll(".browse-main__progress-bar");t.forEach(e=>clearInterval(e)),t.clear(),s.forEach(e=>e.style.width="0"),m(n,e),r.forEach(e=>e.classList.remove("active")),o.classList.add("active")},m=(e,a)=>{t.has(a)&&clearInterval(t.get(a));let r=0;const o=setInterval(()=>{r+=2,e.style.width=`${r}%`,r>=100&&(e.style.width="0",clearInterval(o),t.delete(a))},200);t.set(a,o)},u=(e,t)=>{t.querySelector(".browse-main__carousell-controls").addEventListener("click",n=>{if(n.target.matches(".browse-main__btn")){if(n.target.classList.contains("active"))return;clearInterval(a);const s=n.target,i=parseInt(s.dataset.img);o=i,d(t,e),a=setInterval(()=>{d(t,e)},r)}})},g=e=>{e.querySelectorAll(".browse-main__img-box").forEach(e=>{const t=e.classList.contains("currentVisible")?0:-1;w(e,t,0===t?"visible":"hidden")})},w=(e,t,a)=>{const r=e.querySelector(".browse-main__trailer-btn"),o=e.querySelector(".browse-main__see-more-btn");r.setAttribute("tabindex",t),o.setAttribute("tabindex",t),r.style.visibility=a,o.style.visibility=a};let b,p,y,v;const _=(e,t)=>{const n=Math.abs(b-p),s=Math.abs(y-v);n<50||s>30||(p-b>50?(o=(o-2+t.length)%t.length,d(e,t)):b-p>50&&d(e,t),clearInterval(a),a=setInterval(()=>{d(e,t)},r))},I=(e,t)=>{const a=e.querySelector(".browse-main__images");a.addEventListener("touchstart",e=>{(e=>{b=e.touches[0].clientX,y=e.touches[0].clientY})(e)}),a.addEventListener("touchend",a=>{((e,t,a)=>{p=e.changedTouches[0].clientX,v=e.changedTouches[0].clientY,_(t,a)})(a,e,t)})};(async()=>{const e=getData(),t=e?.translations,o=e?.preferredLanguage,n=e?.loggedIn,i=document.querySelector(".container");if(e&&n){i.prepend(createBrowsePage(t)),i.append(showBigLoader());try{const e=await l(c,o);createMainHeroSection(e,t,i),d(i,e),a=setInterval(()=>d(i,e),r),u(e,i),I(i,e);const n=await s(o,1,"https://api.themoviedb.org/3/movie/upcoming?language="),h=document.querySelector("main");h||i.append(createFilmSlider(n,t,0,t.browseSection.sectionNames.upcoming)),h.append(createFilmSlider(n,t,0,t.browseSection.sectionNames.upcoming))}catch{showErrorPopup(t.browsePage.loadingDataError,"#dc4a34")}finally{hideBigLoader()}}else window.location.href="/"})()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
